{"row_cnt": -999, "syntax_error_cnt": -999}
{"db_id": "GeoNuclearData", "predict_query": "SELECT T1.Country, COUNT(T1.Id) AS cnt FROM nuclear_power_plants AS T1 INNER JOIN countries AS T2 ON T1.Country = T2.Name WHERE T1.Status = 'Operational' GROUP BY T1.Country ORDER BY cnt DESC LIMIT 10", "question": "What are the top 10 countries with most number of operational plants?"}
{"db_id": "GeoNuclearData", "predict_query": "SELECT T1.Country, T1.Name, T1.Capacity FROM nuclear_power_pl", "question": "What are the planed nuclear power plants and their located countries?"}
{"db_id": "GeoNuclearData", "predict_query": "SELECT ReactorModel FROM nuclear_power_plants WHERE Country = 'United States' GROUP BY ReactorModel ORDER BY COUNT(ReactorModel) DESC LIMIT", "question": "Whatâ€™s the most used nuclear reactor model?"}
{"db_id": "GeoNuclearData", "predict_query": "SELECT T1.Capacity FROM nuclear_power_plants AS T1 WHERE", "question": "Which country is Kaiga-4 built in?"}
{"db_id": "GeoNuclearData", "predict_query": "SELECT DISTINCT T2.ReactorModel FROM nuclear_power_plants AS T1 INNER JOIN reactors AS T2 ON T1.Id = T2.NuclearPowerPlantId WHERE T1.Country = 'Germany' AND T1.Status = 'Operational'", "question": "How many PHWR are there today?"}
{"db_id": "GeoNuclearData", "predict_query": "SELECT  COUNT(DISTINCT `ReactorModel`) FROM `nuclear_power_plants`", "question": "How many kinds of nuclear reactor model in the world?"}
{"db_id": "GeoNuclearData", "predict_query": "SELECT Name FROM nuclear_power_plants WHERE Country = 'USA'", "question": "How many nuclear power plants were shut down now?"}
{"db_id": "GeoNuclearData", "predict_query": "SELECT T1.Name FROM nuclear_power_plants AS T1 INNER JOIN countries AS T2 ON T1.Country = T2.Name WHERE T2", "question": "How many countries have at least 3 nuclear power plants?"}
{"db_id": "GeoNuclearData", "predict_query": "SELECT T2.Country FROM nuclear_power_plants AS T1 INNER JOIN country_info AS T2 ON T1.Country = T2.Code ORDER BY COUNT(T1.Country) DESC LIMIT 1", "question": "Which country has the most nuclear power plants?"}
{"db_id": "GeoNuclearData", "predict_query": "SELECT T1.Country FROM nuclear_power_plants AS T1 GROUP BY T1.Country ORDER BY COUNT(T1.Name) DESC LIMIT", "question": "Which country has only one nuclear power plants?"}
{"db_id": "GeoNuclearData", "predict_query": "SELECT T1.ReactorType FROM nuclear", "question": "Which country has the most capacities of nuclear power plants?"}
{"db_id": "GeoNuclearData", "predict_query": "SELECT T1.Country FROM nuclear_power_plants AS T1 ORDER BY T1.Capacity ASC LIMIT 1", "question": "Which country has the least capacities of nuclear power plants?"}
{"db_id": "GeoNuclearData", "predict_query": "SELECT T1.Country", "question": "What are the top 3 countries which have the most nuclear power plants?"}
{"db_id": "GeoNuclearData", "predict_query": "SELECT T1.Country FROM nuclear_power_plants AS T1 GROUP BY T1.Country ORDER BY COUNT(T1.Name) DESC LIMIT 1;", "question": "Which country has the most nuclear station?"}
{"db_id": "GeoNuclearData", "predict_query": "SELECT AVG(T1.Capacity) FROM nuclear_power_plants AS T1 INNER JOIN countries AS T2 ON T1.Country = T2.Name WHERE T1.Status", "question": "Which county has the most nuclear station shut down?"}
{"db_id": "GeoNuclearData", "predict_query": "", "question": "What nuclear station has the largest nuclear power plant capacity?"}
{"db_id": "GeoNuclearData", "predict_query": "SELECT T1.Capacity FROM nuclear_power_plants AS T1 WHERE T1.Status = 'operational' AND T1.OperationalFrom = '1985'", "question": "How many operating nuclear station in France?"}
{"db_id": "GeoNuclearData", "predict_query": "SELECT COUNT(*) FROM nuclear_power_plants WHERE Country = 'United States' AND Status = 'operational'", "question": "How many nuclear station are under construction?"}
{"db_id": "GeoNuclearData", "predict_query": "SELECT T2.ReactorModel FROM nuclear_power_plants AS T1 INNER JOIN reactors AS T2 ON T1.Id = T2.Id GROUP BY T2.ReactorModel ORDER BY COUNT(T2.ReactorModel) DESC LIMIT 1", "question": "What nuclear reactor model is the most popular?"}
{"db_id": "GeoNuclearData", "predict_query": "SELECT T2.Country FROM nuclear_power_plants AS T1 INNER JOIN `nuclear_power", "question": "Which country is Chinon-A3 in?"}
{"db_id": "GeoNuclearData", "predict_query": "SELECT T1.Name FROM nuclear_power_plants AS T1 INNER JOIN countries AS T2 ON T1.Country = T2.Code WHERE T2.Name = 'Japan' AND T1.Status = 'Operational'", "question": "What are operational nuclear power plants in Japan called?"}
{"db_id": "GeoNuclearData", "predict_query": "SELECT COUNT(*) FROM nuclear_power_plants WHERE Country = 'United States'", "question": "Which country first started using nuclear power plant(s)?"}
{"db_id": "GeoNuclearData", "predict_query": "SELECT COUNT(*) FROM nuclear_power_plants WHERE Country = 'Japan' AND Status = 'Preparation'", "question": "How many nuclear power plants are in preparation to be used in Japan?"}
{"db_id": "GeoNuclearData", "predict_query": "", "question": "What is the current situation of the nuclear power plant in the United States with the maximum capacity?"}
{"db_id": "GeoNuclearData", "predict_query": "SELECT T1.Capacity FROM nuclear_power_pl", "question": "What is the maximum capacity of existing pressurized water reactor?"}
{"db_id": "GeoNuclearData", "predict_query": "SELECT T2.Country FROM nuclear_power_plants AS T1 INNER JOIN plants AS T2 ON T1.Name = T2.Name WHERE T1.Status = 'under construction' GROUP BY T2.Country ORDER BY COUNT(T2.Name) DESC LIMIT 1", "question": "Which nation has the most nuclear plants under construction?"}
{"db_id": "GeoNuclearData", "predict_query": "SELECT T1.Country, COUNT(T1.Country) FROM nuclear_power_plants AS T1 GROUP BY T1.Country ORDER BY COUNT(T1.Country) ASC", "question": "Which country has the most under constriction power plants to date?"}
{"db_id": "GeoNuclearData", "predict_query": "SELECT T1.Name, T1.Latitude, T1.Longitude FROM nuclear_power_plants AS T1 INNER JOIN nuclear_power_plants AS T2 ON T1.Id = T2.Id WHERE T1.ReactorType = 'BWR' ORDER BY T1.Id LIMIT 1;", "question": "Where is the first BWR type power plant built and located?"}
{"db_id": "GeoNuclearData", "predict_query": "SELECT SUM(T1.Capacity) FROM nuclear_power_plants AS T1 WHERE T1.Country = 'USA", "question": "Which country lead the total capacity of the power plants it held?"}
{"db_id": "GeoNuclearData", "predict_query": "SELECT Name FROM nuclear_power_plants WHERE Country = 'United States'", "question": "What is the main source of the information for this table?"}
{"db_id": "GeoNuclearData", "predict_query": "SELECT T1.ReactorType, AVG(T1.Capacity) FROM nuclear_power_plants AS T1 GROUP BY T1.ReactorType ORDER BY AVG(T1.Capacity) DESC LIMIT 1", "question": "Which reactor type has the largest average capacity?"}
{"db_id": "GeoNuclearData", "predict_query": "SELECT T1.ReactorType FROM nuclear_power_plants AS T1 INNER JOIN Kashiwazaki_Kariwa AS T2 ON T1.Name = T", "question": "Which country is Kursk-1 in?"}
{"db_id": "GreaterManchesterCrime", "predict_query": "SELECT Location FROM GreaterManchesterCrime GROUP BY Location ORDER BY COUNT(CrimeID) DESC LIMIT 1", "question": "Which streets in Manchester have the highest rates of crime?"}
{"db_id": "GreaterManchesterCrime", "predict_query": "SELECT COUNT(CrimeID) FROM GreaterManchesterCrime WHERE STR", "question": "When was the last instance of a violent or sexual offense in Manchester?"}
{"db_id": "GreaterManchesterCrime", "predict_query": "SELECT Type FROM GreaterManchesterCrime GROUP BY Type ORDER BY COUNT(Type) DESC LIMIT 1", "question": "Where was the last instance of a violent or sexual offense in Manchester?"}
{"db_id": "GreaterManchesterCrime", "predict_query": "SELECT LSOA FROM GreaterManchesterCrime GROUP BY LSOA ORDER BY COUNT(CrimeID) DESC LIMIT 1", "question": "Which neighborhood has the highest crime rate?"}
{"db_id": "GreaterManchesterCrime", "predict_query": "SELECT COUNT(Type) FROM GreaterManchesterCrime WHERE Location = 'Eden Street'", "question": "What is the crime rate for Eden Street area?"}
{"db_id": "GreaterManchesterCrime", "predict_query": "SELECT Outcome FROM GreaterManchesterCrime GROUP BY Outcome ORDER BY COUNT(Outcome) DESC LIMIT 1", "question": "What is the most common type of crime?"}
{"db_id": "GreaterManchesterCrime", "predict_query": "SELECT LSOA FROM GreaterManchesterCrime WHERE Type = 'Burglary' GROUP BY LSOA ORDER BY COUNT(*) DESC LIMIT 1;", "question": "Which neighborhood/area has the highest burglary rate?"}
{"db_id": "GreaterManchesterCrime", "predict_query": "SELECT COUNT(CrimeID) FROM GreaterManchesterCrime WHERE LSOA = 'Harpurhey' AND strftime('%Y', CrimeTS)", "question": "Which area do most of the crimes happen?"}
{"db_id": "GreaterManchesterCrime", "predict_query": "SELECT Type FROM GreaterManchesterCrime WHERE LSOA = \"E02000001\" GROUP BY Type ORDER", "question": "Which Lower Layer Output Area do most of the crimes happen?"}
{"db_id": "GreaterManchesterCrime", "predict_query": "SELECT Type FROM GreaterManchesterCrime GROUP BY Type ORDER BY COUNT(Type) DESC LIMIT 1", "question": "What time do most of the crimes happen?"}
{"db_id": "GreaterManchesterCrime", "predict_query": "SELECT Outcome FROM GreaterManchesterCrime WHERE Location ='street'", "question": "What are the most likely outcome of the police investigation if the crime happen on \"street\"?"}
{"db_id": "GreaterManchesterCrime", "predict_query": "SELECT CrimeTS FROM GreaterManchesterCrime WHERE LSOA = 'Salford' ORDER BY CrimeTS ASC LIMIT 1", "question": "Which type of crime happen the most in Salford?"}
{"db_id": "GreaterManchesterCrime", "predict_query": "SELECT COUNT(Type) FROM GreaterManchesterCrime WHERE Outcome = 'Under investigation'", "question": "How many crimes are under investigation?"}
{"db_id": "GreaterManchesterCrime", "predict_query": "SELECT Type FROM GreaterManchesterCrime GROUP BY Type ORDER BY COUNT(Type) DESC LIMIT 1", "question": "How many crimes has been conducted?"}
{"db_id": "GreaterManchesterCrime", "predict_query": "SELECT Type FROM GreaterManchesterCrime WHERE L", "question": "What is the top 3 area of crime conducted?"}
{"db_id": "GreaterManchesterCrime", "predict_query": "SELECT Type FROM GreaterManchesterCrime WHERE Outcome = 'Investigation complete'", "question": "Which type of crime has the highest rate of \"Investigation complete\"?"}
{"db_id": "GreaterManchesterCrime", "predict_query": "SELECT Type FROM GreaterManchesterCrime WHERE LSOA = 'L11 2PS' AND Type = 'Violence and sexual offences'", "question": "How many crimes were classified as \"Drugs\"?"}
{"db_id": "GreaterManchesterCrime", "predict_query": "SELECT * FROM GreaterManchesterCrime WHERE Location = \"Hulme Central\" ORDER BY CrimeTS DESC LIMIT 1", "question": "How many crimes are still \"Under investigation\" to date?"}
{"db_id": "GreaterManchesterCrime", "predict_query": "SELECT Location FROM GreaterManchesterCrime WHERE Type = 'Theft from the person' ORDER BY CrimeTS ASC LIMIT 1", "question": "Which location has the top amount of \"Drugs\" crime conducted?"}
{"db_id": "GreaterManchesterCrime", "predict_query": "SELECT Location FROM GreaterManchesterCrime GROUP BY Location ORDER BY COUNT(Location) DESC LIMIT 1", "question": "Whatâ€™s the most common type of crime?"}
{"db_id": "GreaterManchesterCrime", "predict_query": "SELECT Type FROM GreaterManchesterCrime GROUP BY Type ORDER BY COUNT(Type) DESC LIMIT 1", "question": "Where is the most dangerous area?"}
{"db_id": "GreaterManchesterCrime", "predict_query": "SELECT Type FROM GreaterManchesterCrime GROUP BY Type ORDER BY COUNT(Type) DESC LIMIT 1", "question": "Where is the safest area?"}
{"db_id": "GreaterManchesterCrime", "predict_query": "SELECT Location FROM GreaterManchesterCrime WHERE Type = 'Sexual Offences'", "question": "Where is the place with the largest number of sexual offenses crime events?"}
{"db_id": "GreaterManchesterCrime", "predict_query": "SELECT T1.Type FROM GreaterManchesterCrime AS T1 WHERE T1.LSOA = 'Ancoats North' GROUP BY", "question": "If it is possible to increase the number of police officers, which place is with the first priority?"}
{"db_id": "GreaterManchesterCrime", "predict_query": "SELECT Type FROM GreaterManchesterCrime WHERE Outcome = 'Prosecution'", "question": "Which type of crime has the most prosecution cases?"}
{"db_id": "GreaterManchesterCrime", "predict_query": "SELECT Type FROM GreaterManchesterCrime WHERE Location = 'Levenshulme'", "question": "Which type of crime has the most investigation complete cases?"}
{"db_id": "GreaterManchesterCrime", "predict_query": "SELECT `Location` FROM `GreaterManchesterCrime` WHERE `CrimeID` = '6B:E2:54:C6:58:D2'", "question": "What is the result in case 6B:E2:54:C6:58:D2?"}
{"db_id": "Pesticide", "predict_query": "SELECT COUNT(*) FROM resultsdata15 AS T1 INNER JOIN sampledata15 AS T2 ON T1.sample_pk = T2.sample_pk WHERE T2.state = 'CA' AND T1.quantitate = 'Detected'\nSQL", "question": "Provide the list of products with pesticide residues detected."}
{"db_id": "Pesticide", "predict_query": "SELECT T1.extract FROM resultsdata15 AS T1 INNER JOIN sampledata15 AS T2 ON T1.sample_pk = T2.sample_pk GROUP BY T1.extract ORDER BY COUNT(T1.extract) DESC LIMIT 1", "question": "What is the most effective extraction method in terms of pesticide residues detection?"}
{"db_id": "Pesticide", "predict_query": "SELECT determin FROM resultsdata", "question": "What is the most effective determinative method in terms of pesticide residues detection?"}
{"db_id": "Pesticide", "predict_query": "SELECT T2.lab FROM resultsdata15 AS T1 INNER JOIN sampledata15 AS T2 ON T1.sample_pk = T2.sample_pk GROUP BY T2.lab ORDER BY COUNT(T1.sample_pk) DESC LIMIT 5", "question": "What are the top 5 analyzing labs where pesticide residues detection was conducted?"}
{"db_id": "Pesticide", "predict_query": "SELECT commtype FROM resultsdata15 WHERE commod = 'AP' AND conunit = 'PPM' ORDER BY concen ASC LIMIT 1", "question": "Wha commodity type of apple has the highest pesticide residues to consume?"}
{"db_id": "Pesticide", "predict_query": "SELECT T1.country, COUNT(T2.sample_pk) FROM sampledata15 AS T1 INNER JOIN resultsdata15 AS T2 ON T1.sample_pk = T2.sample_pk GROUP BY T1.country ORDER BY COUNT(T2.sample_pk) DESC", "question": "Rank the country of product origins in terms of pesticide residues detection."}
{"db_id": "Pesticide", "predict_query": "SELECT commtype FROM resultsdata15 GROUP BY commtype ORDER BY COUNT(pestcode) DESC LIMIT 1", "question": "What type of collection facility results in the most risky consumption in terms of pesticide residues detection?"}
{"db_id": "Pesticide", "predict_query": "SELECT T2.origin", "question": "What are the country of product origins where pesticide residues were not detected?"}
{"db_id": "Pesticide", "predict_query": "SELECT commod, AVG(concen)", "question": "how many entries are of each specific food?"}
{"db_id": "Pesticide", "predict_query": "SELECT commod FROM resultsdata15 JOIN sampledata15 ON resultsdata15.sample_pk = sampledata15.sample_pk WHERE commod = 'pesticid' AND state =", "question": "which pesticides are most used?"}
{"db_id": "Pesticide", "predict_query": "SELECT commod FROM resultsdata15 WHERE concen = ( SELECT MAX(concen) FROM resultsdata15 )", "question": "which pesticides have been used the least?"}
{"db_id": "Pesticide", "predict_query": "SELECT T2.commod, T2.commtype, T2.concen, T2.determin FROM resultsdata15 AS T1 INNER JOIN sampledata15 AS T2 ON T1.sample_pk = T2.sample_pk WHERE T2.sample_pk = 1", "question": "how was a specific sample tested?"}
{"db_id": "Pesticide", "predict_query": "SELECT T1.quantity FROM sampledata15 AS T1 WHERE T1.sample_pk = 1", "question": "in which state was a specific sample grown?"}
{"db_id": "Pesticide", "predict_query": "SELECT T1.state FROM sampledata15 AS T1 INNER JOIN resultsdata15 AS", "question": "in which state was a specific sample packed?"}
{"db_id": "Pesticide", "predict_query": "SELECT T1.origin FROM sampledata15 AS T1 WHERE T1.source_id = 'A'", "question": "in which state was a specific sample distributed?"}
{"db_id": "Pesticide", "predict_query": "SELECT T1.sample_pk FROM sampledata15 AS T1 WHERE T1.source_id = 'I'", "question": "show all imported samples?"}
{"db_id": "Pesticide", "predict_query": "SELECT commod FROM sampledata15", "question": "which foods are captured in the data set?"}
{"db_id": "Pesticide", "predict_query": "SELECT commtype FROM sampledata15 WHERE site = 'GOLD'", "question": "how many samples have unknown countries of origin?"}
{"db_id": "Pesticide", "predict_query": "SELECT commod FROM resultsdata15 WHERE year = '2015' ORDER BY concen DESC LIMIT 10", "question": "Which are the top 10 commodities that have the highest residue during 2015?"}
{"db_id": "Pesticide", "predict_query": "SELECT DISTINCT T1.commod FROM sampledata15 AS T1 LEFT JOIN resultsdata15 AS T2 ON T1.sample_pk = T2.sample_pk WHERE T2.sample_pk IS NULL AND T1.country = 'US'", "question": "Name some imported commodities that are not found in the US."}
{"db_id": "Pesticide", "predict_query": "SELECT T1.state, T1.country, T2.concen FROM sampledata15 AS T1 INNER JOIN resultsdata15 AS T2 ON T1.sample_pk = T2.sample_pk WHERE T1.country = 'USA' GROUP BY T1.state, T1.country", "question": "Tell me the average pesticide residue for each state in the US where food is grown."}
{"db_id": "Pesticide", "predict_query": "SELECT T2.variety FROM resultsdata15 AS T1 INNER JOIN sampledata15 AS T2 ON T1.sample_pk = T2.sample_pk WHERE T1.commod = 'AP' AND T1.concen > 0 ORDER BY T1.concen DESC LIMIT 1", "question": "Which varieties of apple typically have higher pesticide levels?"}
{"db_id": "Pesticide", "predict_query": "SELECT commod FROM resultsdata15 WHERE conunit = 'ppm' AND concen > lod;", "question": "Which commodities have the pesticides concentration much higher than their limit for detection?"}
{"db_id": "Pesticide", "predict_query": "SELECT lab FROM resultsdata15 WHERE pestcode = 'abc' GROUP BY lab ORDER BY COUNT(lab) DESC LIMIT 1", "question": "Name top 5 labs with the maximum number of testing."}
{"db_id": "Pesticide", "predict_query": "SELECT T1.state FROM sampledata15 AS T1 INNER JOIN resultsdata15 AS T", "question": "Which country is the safest in terms of the pesticide concentration found in imported foods?"}
{"db_id": "Pesticide", "predict_query": "SELECT T1.state FROM sampledata15 AS T1 INNER JOIN resultsdata15 AS T2 ON T1.sample_pk = T2.sample_pk GROUP BY T1.state ORDER BY COUNT(T1.state) DESC LIMIT 1", "question": "Which is the most popular state in the US in terms of commodities distribution?"}
{"db_id": "Pesticide", "predict_query": "SELECT MIN(concen) FROM resultsdata15", "question": "What is the maximum pesticide concentration ever found in a commodity?"}
{"db_id": "Pesticide", "predict_query": "SELECT T1.day FROM sampledata15 AS T1 WHERE T1.sample_pk = 3763", "question": "When is sample 3763 collected?"}
{"db_id": "Pesticide", "predict_query": "SELECT T2.state FROM resultsdata15 AS T1 INNER JOIN sampledata15 AS T2 ON T1.sample_pk = T2.sample", "question": "Which state has the most apple collected?"}
{"db_id": "Pesticide", "predict_query": "SELECT T1.state FROM sampledata15 AS T1 INNER JOIN resultsdata15 AS T2 ON T1.sample_pk = T2.sample_pk WHERE T2.commod = 'AP' AND T1.growst = 'AP' GROUP BY T1.state ORDER BY SUM(T1.quantity) DESC LIMIT 1", "question": "Which state has grow the most apples?"}
{"db_id": "Pesticide", "predict_query": "SELECT commod FROM resultsdata15 GROUP BY commod ORDER BY COUNT(commod) DESC LIMIT 1", "question": "How many class of products are there?"}
{"db_id": "Pesticide", "predict_query": "SELECT T1.variety  FROM sampledata15 AS T1 WHERE T1.month = 'Jun'", "question": "what's the 4 digit collection code of sample 3763?"}
{"db_id": "Pesticide", "predict_query": "SELECT T1.country FROM sampledata15 AS T1 WHERE T1.sample_pk = 6480", "question": "If sample 6480 is imported, which country is it originally from?"}
{"db_id": "Pesticide", "predict_query": "SELECT T1.mean FROM resultsdata15 AS T1 INNER JOIN sampledata15 AS T2 ON T1.sample", "question": "How many number of units are there in sample 9628?"}
{"db_id": "Pesticide", "predict_query": "SELECT T1.testclass FROM sampledata15 AS T1 INNER JOIN resultsdata15 AS T2 ON T1.sample_pk = T2", "question": "What's the code for test for sample 7498?"}
{"db_id": "Pesticide", "predict_query": "SELECT T1.origin FROM sampledata15 AS T1 ORDER BY T1.sample_pk DESC LIMIT 1", "question": "What's the code for confirmation for the latest sample?"}
{"db_id": "Pesticide", "predict_query": "SELECT lab FROM resultsdata15 GROUP BY lab ORDER BY COUNT(sample_pk) DESC LIMIT 1", "question": "Which lab has analyzed the most sample?"}
{"db_id": "Pesticide", "predict_query": "SELECT commod FROM sampledata15 ORDER BY concen DESC LIMIT 1;", "question": "What's the majority of test classification result?"}
{"db_id": "Pesticide", "predict_query": "SELECT commod FROM resultsdata15 WHERE sample_pk = 3879", "question": "What's the unit of measure for sample 3879?"}
{"db_id": "Pesticide", "predict_query": "SELECT commtype FROM sampledata15 WHERE state = 'NY'", "question": "What's the unit of measure used for the product commodity code PO?"}
{"db_id": "Pesticide", "predict_query": "SELECT T1.mean FROM resultsdata15 AS T1 INNER JOIN sampledata15 AS T2 ON T1.sample_pk = T2.sample_pk WHERE T2.commod = 'AP' ORDER BY T1.mean DESC LIMIT 1", "question": "What's the mean result finding for product AP?"}
{"db_id": "Pesticide", "predict_query": "SELECT T1.extract FROM resultsdata15 AS T1 GROUP BY T1.extract ORDER BY COUNT(T1.extract) DESC LIMIT 1", "question": "What's the most common extraction method?"}
{"db_id": "Pesticide", "predict_query": "SELECT T1.lab FROM resultsdata15 AS T1 INNER JOIN sampledata15 AS T2 ON T1.sample_pk = T2.sample_pk GROUP BY T1.lab ORDER BY COUNT(T1.lab) DESC LIMIT 1", "question": "Which lab conduct of most number of tests?"}
{"db_id": "Pesticide", "predict_query": "SELECT T2.lab FROM sampledata15 AS T1 INNER JOIN resultsdata15 AS T2 ON T1.sample_pk = T2.sample_pk WHERE T1.commod = 'AP' AND T1.commod = 'AP'", "question": "Which lab is used for testing for prodict AP?"}
{"db_id": "Pesticide", "predict_query": "SELECT T1.mean FROM resultsdata15 AS T1 INNER JOIN sampledata15 AS T2 ON T1.sample_pk = T2.sample_pk WHERE T2.site ='site0001' AND T2.commtype = 'org", "question": "How many samples come from other countries?"}
{"db_id": "Pesticide", "predict_query": "SELECT state FROM sampledata15 WHERE commtype", "question": "What kind of food has been tested 'detect' most?"}
{"db_id": "Pesticide", "predict_query": "SELECT T1.state FROM", "question": "Which state produce the most organic food?"}
{"db_id": "Pesticide", "predict_query": "SELECT AVG(quantity) FROM sampledata15 WHERE year = '15' AND country = 'EUR' AND month = '01'", "question": "Where do the US import the most food ?"}
{"db_id": "Pesticide", "predict_query": "SELECT commod FROM resultsdata15 GROUP BY commod ORDER BY COUNT(commod) DESC LIMIT 1", "question": "What kind of food has been test the most?"}
{"db_id": "Pesticide", "predict_query": "SELECT commtype FROM resultsdata15 GROUP BY commtype ORDER BY COUNT(commtype) DESC LIMIT 1", "question": "Which kind of pesticide is the easiest to be tested?"}
{"db_id": "StudentMathScore", "predict_query": "SELECT T1.state_code FROM FINREV_FED_17 AS T1 INNER JOIN FINREV_FED_KEY_17 AS T2 ON T1.state_code = T2.State_Code ORDER BY T1.t_fed_rev DESC LIMIT 5;", "question": "What are the top five states in descending order in terms of revenue provided to school districts?"}
{"db_id": "StudentMathScore", "predict_query": "SELECT T2.state, COUNT(T1.school_district) FROM FINREV_FED_17 AS T1 INNER JOIN FINREV_FED_KEY_17 AS T2 ON T1.state_code = T2.State_Code GROUP BY T2.state ORDER BY COUNT(T1.school_district) DESC LIMIT 5", "question": "What are the top five states in descending order in terms of the number of school districts per state?"}
{"db_id": "StudentMathScore", "predict_query": "SELECT average_scale_score FROM NDECoreExcel_Math_Grade8 WHERE state = 'California' AND year = 2019", "question": "For each state, when was the last time the average score data was collected?"}
{"db_id": "StudentMathScore", "predict_query": "SELECT average_scale_score FROM NDECoreExcel_M", "question": "How much federal funding did Faifaix County, VA schools receive in all forms?"}
{"db_id": "StudentMathScore", "predict_query": "SELECT T1.average_scale_score FROM NDECoreExcel_Math_Grade8 AS T1 WHERE T1.state = 'South Dakota' AND T1.year =", "question": "How much did the federal government spend in No Child Left Behind funding in 2017?"}
{"db_id": "StudentMathScore", "predict_query": "SELECT SUM(t_fed_rev) FROM FINREV_FED_17 WHERE state_code = 55 AND yr_data = 2017", "question": "How many Wisconsin school districts receive federal funding?"}
{"db_id": "StudentMathScore", "predict_query": "SELECT SUM(T1.t_fed_rev) FROM FINREV", "question": "Which state performs best on the NAEP 8th grade math test?"}
{"db_id": "StudentMathScore", "predict_query": "SELECT T2.state FROM FINREV_FED_17 AS T1 INNER JOIN NDECoreExcel_Math_Grade8 AS T2 ON T1.state_code = T2.state WHERE T2.average_scale_score = ( SELECT MIN(average_scale_score) FROM NDECoreExcel_Math_Grade8 )", "question": "Which federally-funded state performs worst on the NAEP math exam for eighth graders?"}
{"db_id": "StudentMathScore", "predict_query": "SELECT T1.all_students, T1.average_scale_score FROM NDECoreExcel_Math_Grade8 AS T1 INNER JOIN FINREV_FED_17 AS T2 ON T1.state = T2.school_district WHERE T2.t_fed_rev = 1", "question": "What is the average NAEP math score for all eighth graders in federally-funded states?"}
{"db_id": "StudentMathScore", "predict_query": "SELECT T1.school_district FROM FINREV_FED_17 AS T1 INNER JOIN FINREV_FED_KEY_17 AS T2 ON T1.state_code = T2.State_Code WHERE T2.State = 'Wisconsin' ORDER BY T1.t_fed_rev DESC LIMIT 1", "question": "Which school district receive the most of federal revenue through state in Wisconsin?"}
{"db_id": "StudentMathScore", "predict_query": "SELECT AVG(T1.c14) FROM FINREV_FED_", "question": "What is the average Title 1 fund in Virginia?"}
{"db_id": "StudentMathScore", "predict_query": "SELECT T1.state, T1.average_scale_score, T2.t_fed_rev FROM NDECoreExcel_Math_Grade8 AS T1 INNER JOIN FINREV_FED_17 AS T2 ON T1.state = T2.school_district GROUP BY T1.state ORDER BY T1.average_scale_score DESC LIMIT 10", "question": "What are the top 10 states that have the highest average math score and federal revenue they got through different categories?"}
{"db_id": "StudentMathScore", "predict_query": "SELECT T1.state_code, T1.t_fed_rev, T1.yr_data, T2.average_scale_score FROM FINREV_FED_17 AS T1 INNER JOIN NDECoreExcel_Math_Grade8 AS T2 ON T1.state_code = T2.state GROUP BY T1.t_fed_rev, T2.average_scale_score ORDER BY T1.t_fed_rev DESC LIMIT 1", "question": "What are the schools with highest federal revenue in each federal revenue categories and what's their state average scores?"}
{"db_id": "StudentMathScore", "predict_query": "SELECT state FROM NDECoreExcel_Math_Grade8 ORDER BY average_scale_score DESC LIMIT 1", "question": "State with highest average math score"}
{"db_id": "StudentMathScore", "predict_query": "SELECT T1.school_district, T1.yr_data, T1.t_fed_rev, T2.all_students, T2.average_scale_score FROM FINREV_FED_17 AS T1 INNER JOIN NDECoreExcel_Math_Grade8 AS T2 ON T1.state_code = T2.state WHERE T2.average_scale_score IS NOT NULL GROUP BY T1.school_district ORDER BY (T1.t_fed_rev / T2.average_scale_score) DESC", "question": "School with highest ratio of total revenue and average scores"}
{"db_id": "StudentMathScore", "predict_query": "SELECT T1.average_scale_score FROM NDECoreExcel_Math_Grade8 AS T1", "question": "Which state spent the most revenue towards schools and whats the state average score"}
{"db_id": "StudentMathScore", "predict_query": "SELECT T1.school_district, T1.t_fed_rev, T1.yr_data, T2.average_scale_score FROM FINREV_FED_17 AS T1 INNER JOIN NDECoreExcel_Math_Grade8 AS T2 ON T1.state_code = T2.state WHERE T1.t_fed_rev IS NOT NULL AND T2.average_scale_score IS NOT NULL ORDER BY T1.t_fed_rev / T2.average_scale_score ASC LIMIT 1", "question": "School with lowest ratio of total revenue and average scores"}
{"db_id": "StudentMathScore", "predict_query": "SELECT T1.state, T1.average_scale_score FROM NDECoreExcel_Math", "question": "Which state spent the least revenue towards schools and whats the state average score"}
{"db_id": "StudentMathScore", "predict_query": "SELECT T1.state FROM NDECoreExcel_Math_Grade8 AS T1 ORDER BY T1.average_scale_score DESC LIMIT 1", "question": "Which state has the highest average score in math exam?"}
{"db_id": "StudentMathScore", "predict_query": "SELECT", "question": "What is the average match score of CA?"}
{"db_id": "StudentMathScore", "predict_query": "SELECT average_scale_score FROM NDECoreExcel_Math_Grade8 WHERE state = 'IN'", "question": "How many unique school districts in Indiana?"}
{"db_id": "StudentMathScore", "predict_query": "SELECT State_Code FROM FINREV_FED_KEY_17 WHERE State = 'VA'", "question": "What is the state code of VA?"}
{"db_id": "StudentMathScore", "predict_query": "SELECT T2.state FROM NDECoreExcel_Math_Grade8 AS T1 INNER JOIN FINREV_FED_KEY", "question": "Which state get the highest revenue?"}
{"db_id": "StudentMathScore", "predict_query": "SELECT T1.t_fed_rev FROM FINREV_FED_17 AS T1 INNER JOIN FINREV_FED_KEY_17 AS T2 ON T1.state_code = T2.State_Code WHERE T2.State = 'Colorado' AND T1.c14 = 1 OR T1.c25 = 1", "question": "How much funding does Colorado schools receive from Title 1 and the Child Nutrition program respectively?"}
{"db_id": "StudentMathScore", "predict_query": "SELECT AVG(average_scale_score) FROM NDECoreExcel_Math_Grade8 WHERE year = 2016 AND state = 'New York'", "question": "How much federal funding does Pecatonia Area School district get?"}
{"db_id": "StudentMathScore", "predict_query": "SELECT T1.all_students, T1.average_scale_score FROM NDECoreExcel_Math_Grade8 AS T1 WHERE T1.state IN ('North Carolina', 'South Carolina');", "question": "What are the student scores on the NAEP math exam for 8th graders in North Carolina and South Carolina?"}
{"db_id": "StudentMathScore", "predict_query": "SELECT T1.average_scale_score FROM NDECoreExcel_Math_Grade8 AS T1 INNER JOIN FINREV_FED_17 AS T2 ON T1.state = T2.school_district WHERE T2.state_code = 37 OR T2.state_code = 36", "question": "What are the averge score of students in NC and in NY?"}
{"db_id": "StudentMathScore", "predict_query": "SELECT state FROM NDECoreExcel_Math_Grade8 ORDER BY average_scale_score DESC LIMIT 1", "question": "How many schools get higher revenue via Child Nutrition A than revenue via child left school behind act?"}
{"db_id": "TheHistoryofBaseball", "predict_query": "SELECT T2.name FROM hall_of_fame AS T1 INNER JOIN state AS T2 ON", "question": "Which states have produced the largest number of candidates inducted into the hall of fame?"}
{"db_id": "TheHistoryofBaseball", "predict_query": "SELECT T1.player_id, T1.points_won FROM player_award_vote AS T1 WHERE T1.year = 2010 AND T", "question": "What is the top league that pays the most to their players?"}
{"db_id": "TheHistoryofBaseball", "predict_query": "SELECT league_id,  AVG(salary) AS average FROM salary GROUP BY league_id ORDER BY average DESC LIMIT 1", "question": "Which leage have the largest difference in pay among their team players?"}
{"db_id": "TheHistoryofBaseball", "predict_query": "SELECT T1.team_id, SUM(T1.salary) FROM salary AS T1 WHERE T", "question": "What is the average pay for players inducted into the hall of fame?"}
{"db_id": "TheHistoryofBaseball", "predict_query": "SELECT COUNT(T1.player_id) FROM player_award AS T1 WHERE T1.year = 1998\nSQL", "question": "What is the average pay for players not inducted into the hall of fame?"}
{"db_id": "TheHistoryofBaseball", "predict_query": "SELECT T1.team_id,", "question": "Which leage has higher average salaries for player?"}
{"db_id": "TheHistoryofBaseball", "predict_query": "SELECT T1.birth_country FROM player AS T1 GROUP BY T1.birth_country ORDER BY COUNT(T1.birth_country) DESC LIMIT 1", "question": "Which Country are most baseball players from?"}
{"db_id": "TheHistoryofBaseball", "predict_query": "SELECT T1.name_first, T1.name_last, T2.award_id FROM player AS T1 INNER JOIN player_award AS T2 ON T1.player_id = T2.player_id WHERE T", "question": "Who is the youngest baseball player so far?"}
{"db_id": "TheHistoryofBaseball", "predict_query": "SELECT T1.player_id, T1.salary FROM salary AS T1 WHERE", "question": "Which league gets paid the most?"}
{"db_id": "TheHistoryofBaseball", "predict_query": "SELECT T1.points_won FROM player_award_vote AS T1 INNER JOIN player_award AS T2 ON T1.award_id = T2.award_id WHERE T2.year = 1990 AND T2.league_id = 'NL' ORDER BY T1.points_won DESC LIMIT 1;", "question": "How much points were received by the NL league's most valuable player winner in 1990?"}
{"db_id": "TheHistoryofBaseball", "predict_query": "SELECT CAST((strftime('%Y', 'now') - birth_year) AS REAL) FROM player WHERE birth_country = 'USA'", "question": "What is the average age of players from USA?"}
{"db_id": "TheHistoryofBaseball", "predict_query": "SELECT T2.player_id, COUNT(T1.award_id) AS award_count FROM player", "question": "What is the average lifespan of a baseball player?"}
{"db_id": "TheHistoryofBaseball", "predict_query": "SELECT player_id, COUNT(*) FROM player_award WHERE year = 2000 AND league_id = 'NL' GROUP BY player_id ORDER BY COUNT(*) DESC LIMIT 1", "question": "Which is the most popular voting method for Hall of Fame in 2000?"}
{"db_id": "TheHistoryofBaseball", "predict_query": "SELECT name_first, name_last FROM player ORDER BY weight DESC LIMIT 1", "question": "How many players weigh over 200 pounds?"}
{"db_id": "TheHistoryofBaseball", "predict_query": "SELECT T2.name_first, T2.name_last FROM player_award AS T1 INNER JOIN player AS T2 ON T1.player_id = T2.player_id WHERE T1.award_id = 'Rookie of the Year' AND T1.year = 2010", "question": "Who is the winner of Rookie of the Year in 2010?"}
{"db_id": "TheHistoryofBaseball", "predict_query": "SELECT T1.team_id FROM salary AS T1 INNER JOIN league AS T2 ON T", "question": "Who is the highest paid player since 2010?"}
{"db_id": "TheHistoryofBaseball", "predict_query": "SELECT T2.salary FROM hall_of_fame AS T1 INNER JOIN salary AS T2 ON T1.player_id = T2.player_id WHERE T1.inducted = 'Y'", "question": "What are the salaries of players who have ever enter hall of fame?"}
{"db_id": "TheHistoryofBaseball", "predict_query": "SELECT yearid, needed FROM hall_of_fame WHERE yearid >= 1871", "question": "What are the minimum votes needed to enter hall of fame for each year since 1871?"}
{"db_id": "TheHistoryofBaseball", "predict_query": "SELECT T1.salary FROM salary AS T1 INNER JOIN league AS T2 ON T1.league_id = T2.league_id WHERE T2.name = 'National League'", "question": "What are the salaries in National League?"}
{"db_id": "TheHistoryofBaseball", "predict_query": "SELECT T1.salary FROM salary AS T1 INNER JOIN league", "question": "What are the salaries in American League?"}
{"db_id": "TheHistoryofBaseball", "predict_query": "SELECT T2.award_id FROM player_award AS T1 INNER JOIN player_award_vote AS T2 ON T1", "question": "Which birth place has the most player awards?"}
{"db_id": "TheHistoryofBaseball", "predict_query": "SELECT T2.birth_country, T2.birth_state, T2.birth_city FROM hall_of_fame AS T1 INNER JOIN player AS T2 ON T1.player_id = T2.player_id WHERE T1.yearid >= 1871 AND T1.inducted = 1;", "question": "What are the birth places of players won on hall of fame since 1871?"}
{"db_id": "TheHistoryofBaseball", "predict_query": "SELECT T1.award_id, T2.salary FROM player_award AS T1 INNER JOIN salary AS T2 ON T1.player_id = T2.player_id ORDER BY T2.salary DESC LIMIT 1", "question": "Which award has the highest player's salary?"}
{"db_id": "TheHistoryofBaseball", "predict_query": "SELECT COUNT(DISTINCT T1.player_id) FROM player_award_vote AS T", "question": "What were the years when any special elections happened in hall of fame?"}
{"db_id": "TheHistoryofBaseball", "predict_query": "SELECT T1.country FROM player_award AS T1 INNER JOIN player AS T2 ON T1.player_id = T2.player_id GROUP BY T1.country ORDER BY COUNT(T1.player_id) DESC LIMIT 10", "question": "Top 10 countries with the most hall of fame players"}
{"db_id": "TheHistoryofBaseball", "predict_query": "SELECT T1.player_id, T1.year FROM player_award AS T1 INNER JOIN player_award_vote AS T2 ON T1.player_id = T2.player_id GROUP BY T1.year ORDER BY T1.year DESC LIMIT 1", "question": "For every award, who is the youngest winner?"}
{"db_id": "TheHistoryofBaseball", "predict_query": "SELECT T2.player_id, T1.award_id, T1.year, T1.league_id FROM player_award AS T1 INNER JOIN player_award_vote AS T2 ON T1.player_id = T2.player_id ORDER BY T1.year ASC LIMIT 1", "question": "For every award, who is the oldest winner?"}
{"db_id": "TheHistoryofBaseball", "predict_query": "SELECT T2.teamid FROM player_award AS T1 INNER JOIN team_player AS T2 ON T1.player_id = T2.player_id WHERE T1.award_id = 'Hall of Fame' GROUP BY T2.teamid ORDER BY COUNT(T1.award_id) DESC LIMIT 10;", "question": "Top 10 teams with the most hall of fame players"}
{"db_id": "TheHistoryofBaseball", "predict_query": "SELECT player_id FROM player_award WHERE award_id = 'MVP' GROUP BY player_id ORDER BY COUNT(award_id) DESC LIMIT 1", "question": "Average lifespan of hall of fame players"}
{"db_id": "TheHistoryofBaseball", "predict_query": "SELECT T2.position, AVG(T1.weight) FROM player T1 INNER JOIN player_award_vote T2 ON T1.player_id = T2.player_id WHERE T2.award_id = 'award' GROUP BY T2.position", "question": "For award winners, what's average weight for each position"}
{"db_id": "TheHistoryofBaseball", "predict_query": "SELECT COUNT(T1.player_id) FROM", "question": "For award winners, which position that has the most hall of fame players?"}
{"db_id": "TheHistoryofBaseball", "predict_query": "SELECT T1.player_id, T1.points_won FROM player_award_vote AS T1 INNER JOIN player_award AS T2 ON T1.player_id = T2.player_id WHERE T2.year = 1971 ORDER BY T1.points_won DESC LIMIT 1", "question": "Which player get the highest score in 1971?"}
{"db_id": "TheHistoryofBaseball", "predict_query": "SELECT T1.birth_month AS month FROM player WHERE T1.player_id IN ( SELECT T2.player_id FROM hall_of_fame AS T2 GROUP BY T2.player_id ORDER BY COUNT(T2.player_id) DESC LIMIT 1 ) GROUP BY T1.birth_month ORDER BY COUNT(T1.player_id) DESC LIMIT 1", "question": "Which month that players were born has the highest likelihood to be elected as hall of fame?"}
{"db_id": "TheHistoryofBaseball", "predict_query": "SELECT T1.league_id", "question": "Which league has the most player awarded in 2006?"}
{"db_id": "TheHistoryofBaseball", "predict_query": "SELECT", "question": "What defense position the player ID willite01 is?"}
{"db_id": "TheHistoryofBaseball", "predict_query": "SELECT T1.player_id FROM player_award AS T1 GROUP BY T1.player_id HAVING COUNT(T1.player_id) >", "question": "How many players were awarded more than ten times?"}
{"db_id": "TheHistoryofBaseball", "predict_query": "SELECT T1.award_id FROM player_award AS T1 INNER JOIN player_award_vote AS T2 ON T", "question": "Which city the most players were born?"}
{"db_id": "TheHistoryofBaseball", "predict_query": "SELECT SUM(T1.weight) / COUNT(T1.player_id) FROM player AS T1 INNER JOIN player_award AS T2 ON T1.player_id = T2.player_id WHERE T2.award_id = 'TSN all-star award' AND T2.award_name = 'third-base man'", "question": "What is the average weight of players who were awarded third-base man in TSN all-star award?"}
{"db_id": "TheHistoryofBaseball", "predict_query": "SELECT T1.team_id FROM salary AS T1 WHERE T1.year = 2014 ORDER", "question": "Who is the player had the highest salary in 2015?"}
{"db_id": "USWildFires", "predict_query": "SELECT FIRE_YEAR FROM Fires GROUP BY FIRE_YEAR ORDER BY MAX(FIRE_SIZE) DESC LIMIT 1", "question": "Which year has the most wildfires?"}
{"db_id": "USWildFires", "predict_query": "SELECT \n    strftime('%Y-%m', DISCOVERY_DATE) AS discovery_month\nFROM \n    Fires\nGROUP BY \n    discovery_month", "question": "Which time of day has the most wildfires?"}
{"db_id": "USWildFires", "predict_query": "SELECT STAT_CAUSE_DESCR FROM Fires GROUP BY STAT_CAUSE_DESCR ORDER BY COUNT(STAT_CAUSE_DESCR) DESC LIMIT 1", "question": "What are the most common causes of the wildfires?"}
{"db_id": "USWildFires", "predict_query": "SELECT AVG(FIRE_SIZE) FROM Fires WHERE STATE = 'California'", "question": "How long does it take to control wildfires on average?"}
{"db_id": "USWildFires", "predict_query": "SELECT COUNT(*) FROM Fires WHERE FIRE_YEAR = 2013", "question": "Which state has the most wildfires?"}
{"db_id": "USWildFires", "predict_query": "SELECT FIRE_SIZE FROM Fires WHERE FIRE_YEAR = 2013;", "question": "Which state has the largest wildfire?"}
{"db_id": "USWildFires", "predict_query": "SELECT T1.OWNER_CODE, T1.OWNER_DESCR, COUNT(T1.FIRE_YEAR) FROM Fires AS T1 GROUP BY T1.OWNER_DESCR ORDER BY COUNT(T1.FIRE_YEAR) DESC LIMIT 1", "question": "What enrity is reponsible for managing the land at the point of origin of the most wildfires?"}
{"db_id": "USWildFires", "predict_query": "SELECT T1.STAT_CAUSE_CODE, T1.STAT_CAUSE_DESCR FROM Fires AS T1 WHERE T1.FIRE_YEAR BETWEEN 2000 AND 2005 GROUP BY T1.STAT_CAUSE_CODE ORDER BY COUNT(T1.STAT_CAUSE_CODE) DESC LIMIT 1", "question": "What was the most common cause of fire between 2000 and 2005?"}
{"db_id": "USWildFires", "predict_query": "SELECT SUM(FIRE_SIZE) FROM Fires WHERE FIRE_YEAR = 2006", "question": "How many fires were more than 100 acres in 2006?"}
{"db_id": "USWildFires", "predict_query": "SELECT COUNT(FIRE_SIZE) FROM Fires WHERE FIRE_YEAR = 2001 AND STATE = 'California'", "question": "Which states had the largest number of fires in 2001?"}
{"db_id": "USWildFires", "predict_query": "SELECT T1.FIRE_YEAR, T1.FIRE_SIZE FROM Fires AS T1 INNER JOIN FIPS_NAME AS T2 ON T1.FIPS_NAME = T2.FIPS_NAME WHERE T2.FIPS_NAME = 'California' AND T1.FIRE_YEAR BETWEEN 2000 AND 2005", "question": "How many acres burned in fires in California each year between 2000 and 2005?"}
{"db_id": "USWildFires", "predict_query": "SELECT AVG(FIRE_SIZE) FROM Fires WHERE FIRE_YEAR = 2000", "question": "Which year had the largest number of fires?"}
{"db_id": "USWildFires", "predict_query": "SELECT * FROM Fires WHERE STAT_CAUSE_DESCR = 'Campfire' AND STATE = 'Texas';", "question": "Show all fires caused by campfires in Texas."}
{"db_id": "USWildFires", "predict_query": "SELECT T1.OWNER_DESCR FROM Fires AS T1 INNER JOIN OWNER AS T2 ON T1.OWNER_CODE = T2.OWNER_CODE WHERE T1.STATE = 'Oregon' AND T1.FIRE_YEAR = '2015' AND T1.FIRE_SIZE = ( SELECT MAX(FIRE_SIZE) FROM Fires AS T3 WHERE T3.STATE = 'Oregon' AND T3.FIRE_YEAR = '2015' )", "question": "Who was responsible for the land of the biggest fire in Oregon in 2015?"}
{"db_id": "USWildFires", "predict_query": "SELECT T1.county FROM Fires AS T1 INNER JOIN FIPS_NAME AS T2 ON T1.FIPS_NAME = T2.FIPS_NAME WHERE T1.FIPS_NAME LIKE '%Washington%' AND T1.FIRE_YEAR = 2012", "question": "Which counties in Washington had fires in 2012?"}
{"db_id": "USWildFires", "predict_query": "SELECT LATITUDE FROM Fires WHERE DISCOVERY_DATE = '2015-08-10 10:30:00'", "question": "How many arson-related fires were there in 2010?"}
{"db_id": "USWildFires", "predict_query": "SELECT FIRE_YEAR FROM Fires ORDER BY FIRE_YEAR LIMIT 1", "question": "How many years of data are recorded in this database?"}
{"db_id": "USWildFires", "predict_query": "SELECT COUNT(DISTINCT FIRE_YEAR) FROM Fires WHERE FIRE_YEAR BETWEEN 2001 AND 2002", "question": "Average date of year that fire was discovered from 2000~2004?"}
{"db_id": "USWildFires", "predict_query": "SELECT COUNT(FIRE_YEAR) FROM Fires WHERE FIRE_YEAR = 2015", "question": "Whatâ€™s the most common cause of the fire (code) in the database?"}
{"db_id": "USWildFires", "predict_query": "SELECT COUNTY FROM Fires WHERE FIRE_YEAR = 2015 GROUP BY COUNTY ORDER BY COUNT(*) DESC LIMIT 1", "question": "Whatâ€™s the year that have the largest acres in the fire area?"}
{"db_id": "USWildFires", "predict_query": "SELECT AVG(FIRE_SIZE) FROM Fires WHERE FIRE_YEAR = 2015", "question": "How many missing / not specified name of the owner are there in the database?"}
{"db_id": "USWildFires", "predict_query": "SELECT T2.COUNTY FROM Fires AS T1 INNER JOIN Counties AS T2 ON T1.FIPS_NAME = T2.FIPS_NAME WHERE T1.FIRE_YEAR = 2000 GROUP BY T2.COUNTY ORDER BY COUNT(T2.COUNTY) DESC LIMIT 1", "question": "Whatâ€™s the county that contains most recorded burns in 2000 according to the database?"}
{"db_id": "USWildFires", "predict_query": "SELECT STAT_CAUSE_CODE FROM Fires WHERE FIRE_YEAR = 2015 GROUP BY STAT_CAUSE_CODE ORDER BY COUNT(STAT_CAUSE_CODE) DESC LIMIT 5", "question": "How many distinct cause of the fire descriptions are there in the database?"}
{"db_id": "USWildFires", "predict_query": "SELECT SUM(T1.FIRE_SIZE) FROM Fires AS T1 INNER JOIN County ON T1.FIPS_NAME = County.fipsname", "question": "Sum of the acres burned in NC state in 2006?"}
{"db_id": "USWildFires", "predict_query": "SELECT T2.STAT_CAUSE_DESCR FROM Fires AS T1 INNER JOIN STAT_CAUSE_CODE AS T2 ON T1.STAT_CAUSE_CODE = T2.STAT_CAUSE_CODE WHERE T1.FIRE_YEAR = 1997 AND T1.FIPS_NAME = 'UT' AND T1.FIRE_SIZE = ( SELECT MAX(T1.FIRE_SIZE) FROM Fires AS T1 INNER JOIN STAT_CAUSE_CODE AS T2 ON T1.STAT_CAUSE_CODE = T2", "question": "What was the cause of the largest wildfire in Utah in the year 1997?"}
{"db_id": "USWildFires", "predict_query": "SELECT LATITUDE, LONGITUDE FROM Fires WHERE STAT_CAUSE_CODE  =  2 AND COUNTY  =  \"Gloucester\"", "question": "How many wildfires in Gloucester county have been larger than 10 acres?"}
{"db_id": "USWildFires", "predict_query": "SELECT COUNT(FIRE_YEAR) FROM Fires WHERE FIRE_YEAR = 2015", "question": "Which state experiences the most wildfires?"}
{"db_id": "USWildFires", "predict_query": "SELECT DISTINCT T1.STAT_CAUSE_DESCR FROM Fires AS T1 ORDER BY T1.STAT_CAUSE_CODE LIMIT 1;", "question": "What is the leading cause of wildfires?"}
{"db_id": "USWildFires", "predict_query": "SELECT AVG(T1.LATITUDE) FROM Fires AS T1 WHERE T1.STATE = 'California'\nSQLResult", "question": "On what type of land (public or private) do more wildfires occur?"}
{"db_id": "USWildFires", "predict_query": "SELECT FIRE_YEAR FROM Fires ORDER BY FIRE_SIZE DESC LIMIT 1", "question": "In 2014, how many wildfires were the result of mismanaged campfires?"}
{"db_id": "USWildFires", "predict_query": "SELECT COUNT(*) FROM Fires WHERE STATE = 'California' AND FIRE_YEAR BETWEEN 2015 AND 2016", "question": "How many total acres of land in Texas have seen a wildfire in the decade between 2000-2010?"}
{"db_id": "USWildFires", "predict_query": "SELECT STATE FROM Fires GROUP BY STATE ORDER BY COUNT(STATE) DESC LIMIT 1", "question": "Which state has the most number of fires being recorded?"}
{"db_id": "USWildFires", "predict_query": "SELECT STAT_CAUSE_DESCR FROM Fires GROUP BY STAT_CAUSE_DESCR ORDER BY COUNT(STAT_CAUSE_DESCR)", "question": "What is the most common reason that causes a fire?"}
{"db_id": "USWildFires", "predict_query": "SELECT SUM(FIRE_SIZE) FROM Fires WHERE FIRE_YEAR = 2018", "question": "What is the total area that has been burned until now?"}
{"db_id": "USWildFires", "predict_query": "SELECT COUNT(*) FROM Fires WHERE STATE = 'California' AND FIRE_YEAR = 2000", "question": "How many acres burned in 2000s and 1990s?"}
{"db_id": "USWildFires", "predict_query": "SELECT FIRE_SIZE FROM Fires WHERE FIRE_YEAR = 2015", "question": "How many fire cases occur on the land without any owner?"}
{"db_id": "USWildFires", "predict_query": "SELECT LATITUDE FROM Fires ORDER BY LATITUDE DESC LIMIT 1", "question": "What is the latitudinal band that is most likely to experience wildfires in the USA?"}
{"db_id": "WhatCDHipHop", "predict_query": "SELECT releaseType, groupName FROM torrents ORDER BY totalSnatched DESC LIMIT 100", "question": "What are the top 100 torrent releases?"}
{"db_id": "WhatCDHipHop", "predict_query": "", "question": "What are name of top 10 artists or groups?"}
{"db_id": "WhatCDHipHop", "predict_query": "SELECT releaseType FROM torrents ORDER BY totalSnatched DESC LIMIT 10;", "question": "What are the top 10 torrent release types?"}
{"db_id": "WhatCDHipHop", "predict_query": "SELECT T1.groupName, T1.groupYear, T1.totalSnatched FROM torrents AS T1 INNER JOIN tags AS T2 ON T1.id = T2.id WHERE T2.tag = 'pop' ORDER BY T1.totalSnatched DESC LIMIT 20", "question": "What are the top 20 pop albums?"}
{"db_id": "WhatCDHipHop", "predict_query": "SELECT T1.groupName, T1.groupYear FROM torrents AS T1 INNER JOIN tags AS T2 ON T1.id = T2.id WHERE T1.releaseType = 'album' AND T1.groupYear >= 2000 AND T2.tag = 'instrumental' ORDER BY T1.groupYear DESC LIMIT 20", "question": "What are the top 20 instrumental albums since 2000?"}
{"db_id": "WhatCDHipHop", "predict_query": "SELECT artist FROM torrents GROUP BY artist ORDER BY COUNT(artist) DESC LIMIT 1;", "question": "What type of musical album is the most popular?"}
{"db_id": "WhatCDHipHop", "predict_query": "SELECT T2.groupName, T2.releaseType, T2.groupYear FROM torrents AS T1 INNER JOIN tags AS T2 ON T1.id = T2.id WHERE T2.tag ='single' ORDER BY T1.totalSnatched DESC LIMIT 100", "question": "What are the top 100 single musics?"}
{"db_id": "WhatCDHipHop", "predict_query": "SELECT releaseType, totalSnatched FROM torrents GROUP BY releaseType ORDER BY", "question": "What is the torrent download statistics for each release year?"}
{"db_id": "WhatCDHipHop", "predict_query": "SELECT groupName FROM torrents ORDER BY totalSnatched DESC LIMIT 1", "question": "how many entries are of each type?"}
{"db_id": "WhatCDHipHop", "predict_query": "SELECT COUNT(id) FROM torrents GROUP BY artist", "question": "how many unique entries are by the same Artist/group?"}
{"db_id": "WhatCDHipHop", "predict_query": "SELECT groupName FROM torrents ORDER BY totalSnatched DESC LIMIT 1;", "question": "which entry have been downloaded the most?"}
{"db_id": "WhatCDHipHop", "predict_query": "SELECT groupName FROM torrents WHERE releaseType ='single'", "question": "which entry have been downloaded the least?"}
{"db_id": "WhatCDHipHop", "predict_query": "SELECT DISTINCT tag FROM tags", "question": "what are titles for each unique entry?"}
{"db_id": "WhatCDHipHop", "predict_query": "SELECT groupYear FROM torrents", "question": "what year was each specific entry released?"}
{"db_id": "WhatCDHipHop", "predict_query": "SELECT releaseType FROM torrents WHERE release", "question": "what are the entries by each specific artist/group?"}
{"db_id": "WhatCDHipHop", "predict_query": "SELECT COUNT(id) FROM torrents", "question": "which tags exist?"}
{"db_id": "WhatCDHipHop", "predict_query": "SELECT releaseType, SUM(totalSnatched) AS totalSnatched FROM torrents GROUP BY releaseType", "question": "what release types are captured in this data set?"}
{"db_id": "WhatCDHipHop", "predict_query": "SELECT T1.releaseType, T1.groupName, T1.groupYear FROM torrents AS T1 WHERE T1.groupYear > 2000 ORDER BY T1.totalSnatched DESC LIMIT 5;", "question": "Find me top 5 most popular releases after 2000?"}
{"db_id": "WhatCDHipHop", "predict_query": "SELECT T1.groupName FROM torrents AS T1 INNER JOIN tags AS T2 ON T1.id = T2.id WHERE T1.totalSnatched > 100", "question": "Which albums have been downloaded more than 100 times?"}
{"db_id": "WhatCDHipHop", "predict_query": "SELECT artist FROM torrents WHERE groupName = 'houston' ORDER BY totalSnatched DESC LIMIT 1", "question": "Name the most popular release on houston."}
{"db_id": "WhatCDHipHop", "predict_query": "SELECT releaseType FROM torrents WHERE artist = 'Lasean Camry' ORDER BY totalSnatched DESC, totalSnatched ASC LIMIT 1, 1", "question": "Name the most popular and least popular releases of lasean camry?"}
{"db_id": "WhatCDHipHop", "predict_query": "SELECT T1.groupName, T1.groupYear, T1.totalSnatched FROM torrents AS T1 ORDER BY T1.totalSnatched DESC LIMIT 10;", "question": "Find me top 10 albums ranked by their popularity."}
{"db_id": "WhatCDHipHop", "predict_query": "SELECT T1.tag FROM tags AS T1 INNER JOIN torrents AS T2 ON T1.id = T2.id WHERE T2.groupYear > 2010 GROUP BY T1.tag ORDER BY COUNT(T1.tag) DESC LIMIT 1", "question": "Find me the most popular topics since 2010."}
{"db_id": "WhatCDHipHop", "predict_query": "SELECT groupYear FROM torrents GROUP BY groupYear ORDER BY COUNT(groupYear) ASC LIMIT 1;", "question": "Which year had the minimum number of releases?"}
{"db_id": "WhatCDHipHop", "predict_query": "SELECT groupName FROM torrents WHERE groupYear = 2001 ORDER BY totalSnatched DESC LIMIT 1", "question": "Which release is being downloaded the most?"}
{"db_id": "WhatCDHipHop", "predict_query": "SELECT artist FROM torrents WHERE groupYear = 2015 ORDER BY totalSnatched DESC LIMIT 1", "question": "Who or which group is most popular in 2015?"}
{"db_id": "WhatCDHipHop", "predict_query": "SELECT T1.tag, T2.groupName FROM tags AS T1 INNER JOIN torrents AS T2 ON T1.id = T2.id", "question": "Which tag is used for which release title?"}
{"db_id": "WhatCDHipHop", "predict_query": "SELECT T1.groupName FROM torrents AS T1 WHERE T1.groupYear = 2005 GROUP BY T1.groupName ORDER BY COUNT(T1.groupName) DESC LIMIT 1\nSQL", "question": "Which year has the most released song?"}
{"db_id": "WhatCDHipHop", "predict_query": "SELECT groupName FROM torrents WHERE groupYear = 2007 ORDER BY totalSnatched DESC LIMIT 1", "question": "Which artist/group is most productive?"}
{"db_id": "WhatCDHipHop", "predict_query": "SELECT artist, AVG(totalSnatched) FROM torrents GROUP BY artist ORDER BY AVG(totalSnatched) DESC LIMIT 1", "question": "Which artist/group has the highest average download of songs?"}
{"db_id": "WhatCDHipHop", "predict_query": "SELECT artist FROM torrents WHERE groupYear = 2002 GROUP BY artist ORDER BY COUNT(id) DESC", "question": "Which year has the most CDs released?"}
{"db_id": "WhatCDHipHop", "predict_query": "SELECT tag FROM tags GROUP BY tag ORDER BY COUNT(tag) DESC LIMIT 1", "question": "Which CD has been downloaded the most times?"}
{"db_id": "WhatCDHipHop", "predict_query": "SELECT artist FROM torrents GROUP BY artist ORDER BY COUNT(id) DESC LIMIT 1", "question": "Which kind of release type is the most popular?"}
{"db_id": "WhatCDHipHop", "predict_query": "SELECT T1.groupName, T1.totalSnatched FROM torrents AS T1 INNER JOIN tags AS T2 ON T1.id = T2.id ORDER BY T1.totalSnatched DESC", "question": "Whose CDs sells best?"}
{"db_id": "WhatCDHipHop", "predict_query": "SELECT releaseType, totalSnatched FROM torrents", "question": "What are the downloaded numbers and their release types?"}
{"db_id": "WhatCDHipHop", "predict_query": "SELECT SUM(totalSnatched) FROM torrents WHERE groupYear < 2000", "question": "What are the downloaded numbers of 2000s and before 2000?"}
{"db_id": "WhatCDHipHop", "predict_query": "SELECT artist FROM torrents WHERE groupName = 'The Silver Lining'", "question": "How many same release titles are there in the table?"}
{"db_id": "WhatCDHipHop", "predict_query": "SELECT groupName FROM torrents WHERE groupYear = 1970", "question": "Which artist release the most CDs?"}
{"db_id": "WhatCDHipHop", "predict_query": "SELECT COUNT(groupId) FROM torrents WHERE releaseType = 'EP'", "question": "How many downloads of ep and album respectively?"}
{"db_id": "WhatCDHipHop", "predict_query": "SELECT DISTINCT T2.artist, T2.groupName FROM torrents AS T1 INNER JOIN artists AS T2 ON T1.groupId = T2.id WHERE T1.releaseType = 'cd' GROUP BY T2.artist, T2.groupName HAVING COUNT(T1.releaseType) = 1", "question": "What are the artist/groups that released only one CD?"}
{"db_id": "WhatCDHipHop", "predict_query": "SELECT T.tag FROM tags AS T JOIN torrents AS t2 ON T.id = t2.id WHERE t2.groupYear > 201", "question": "What are the actors who have had releases after 2010?"}
{"db_id": "WorldSoccerDataBase", "predict_query": "SELECT BWA FROM football_data WHERE AwayTeam = 'Arsenal'", "question": "What are the Pinnacle odds for Arsenal winning matches?"}
{"db_id": "WorldSoccerDataBase", "predict_query": "SELECT T2.DateTime FROM betfront AS T1 INNER JOIN football_data AS T2 ON T1.MATCH = T2.HomeTeam AND T1.COUNTRY = T2.Country WHERE T2.Country = 'Spain' AND T2.FTR = 'A'", "question": "Which matches in Spain did the away team win?"}
{"db_id": "WorldSoccerDataBase", "predict_query": "SELECT * FROM football_data WHERE League = 'Premier League' AND FTR = 'D' AND Season = '2017'", "question": "Which Premier League matches ended in a draw in 2016?"}
{"db_id": "WorldSoccerDataBase", "predict_query": "SELECT T2.Match FROM football_data AS T1 INNER JOIN betfront AS T2 ON T1.Datetime = T2.DATETIME WHERE T2.DRAW_OPENING > 3", "question": "Which matches had draw odds from Bet365 higher than 3?"}
{"db_id": "WorldSoccerDataBase", "predict_query": "SELECT T1.DRAW_CLOSING FROM betfront AS T1 INNER JOIN football_data AS T2 ON T1.MATCH = T2.AwayTeam WHERE T2.HomeTeam = 'VfB Stuttgart' OR T2.HomeTeam = 'VfB Stuttgart' AND T2.AwayTeam = 'VfB Stuttgart'", "question": "What were the closing odds for a draw in matches with VfB Stuttgart?"}
{"db_id": "WorldSoccerDataBase", "predict_query": "SELECT T1.HTHG FROM football_data AS T1 WHERE T1.HTHG = 0", "question": "Which games had no goals scored at full time?"}
{"db_id": "WorldSoccerDataBase", "predict_query": "SELECT DISTINCT T2.AwayTeam FROM football_data AS T1 INNER JOIN football_data AS T2 ON T1.Div = T2.Div INNER JOIN football_data AS T3 ON T2.Div = T3.Div WHERE T3.AwayTeam = 'Omiya Ardija' AND T2.Season = '2018'", "question": "What is the away team against Omiya Ardija in 2018?"}
{"db_id": "WorldSoccerDataBase", "predict_query": "SELECT Referee FROM football_data WHERE Season = '2013-2014' AND League = 'English Premier League' GROUP BY Referee ORDER BY COUNT(Referee) DESC LIMIT 1\nSQLResult", "question": "How many matches in Spain in 2010?"}
{"db_id": "WorldSoccerDataBase", "predict_query": "SELECT COUNT(COMPETION) FROM betfront WHERE COUNTRY = 'Spain' AND MATCH LIKE '%Real Madrid%'", "question": "Which matches has the highest draw opening so far?"}
{"db_id": "WorldSoccerDataBase", "predict_query": "SELECT T2.HomeTeam FROM football_data AS T1 INNER JOIN betfront AS T2 ON T1.Datetime = T2.DATETIME WHERE T1.Season = '2015' GROUP BY T2.HomeTeam ORDER BY SUM", "question": "Which year has most matches?"}
{"db_id": "WorldSoccerDataBase", "predict_query": "SELECT COUNT(DISTINCT MATCH) FROM betfront WHERE B365A IS NOT NULL", "question": "How many matches did Pinnacle have betting records?"}
{"db_id": "WorldSoccerDataBase", "predict_query": "SELECT AwayTeam FROM football_data WHERE Season = '2018-19' AND HTR = 'A' GROUP BY AwayTeam ORDER BY COUNT(DISTINCT Datetime) DESC LIMIT 1", "question": "How many matches did Bet365 gives higher home win odds than Pinnacle?"}
{"db_id": "WorldSoccerDataBase", "predict_query": "SELECT AVG(HOME_OPENING) FROM betfront WHERE YEAR = 2018", "question": "How many games that the total number of goals exceed 5?"}
{"db_id": "WorldSoccerDataBase", "predict_query": "SELECT MAX(HOME_OPENING) FROM betfront", "question": "What is the highest home losing odds in Bet365 ever?"}
{"db_id": "WorldSoccerDataBase", "predict_query": "SELECT SUM(FTHG + FTAG) FROM football_data WHERE League = 'English Premier League' AND Season = '2018-2019'", "question": "How many number of games ended in a 0-0 tie?"}
{"db_id": "WorldSoccerDataBase", "predict_query": "SELECT COUNT(DISTINCT Country) FROM football_data", "question": "How many league division does football_data database has?"}
{"db_id": "WorldSoccerDataBase", "predict_query": "SELECT AVG(T2.HOME_OPENING) FROM bet", "question": "Do other leagues have referee name records outside of Scotland and England?"}
{"db_id": "WorldSoccerDataBase", "predict_query": "SELECT B365H FROM football_data WHERE Season = '2015/2016'", "question": "What's the odds for draw on Bet365 for the game Swindon v.s. Millwall for 2016/2017 season?"}
{"db_id": "GeoNuclearData", "predict_query": "SELECT T1.Country, COUNT(T1.Id) AS cnt FROM nuclear_power_plants AS T1 WHERE T1.Status = 'Operational' GROUP BY T1.Country ORDER BY cnt DESC LIMIT 10", "question": "What are the top 10 countries with most number of operational plants?"}
{"db_id": "GeoNuclearData", "predict_query": "SELECT t1.Name, t2", "question": "What are the planed nuclear power plants and their located countries?"}
{"db_id": "GeoNuclearData", "predict_query": "SELECT T1.ReactorType, COUNT(T1.ReactorType) FROM nuclear", "question": "Whatâ€™s the most used nuclear reactor model?"}
{"db_id": "GeoNuclearData", "predict_query": "SELECT T1.Capacity FROM nuclear_power_plants AS T1 INNER JOIN reactors AS T2 ON T1.Id =", "question": "Which country is Kaiga-4 built in?"}
{"db_id": "GeoNuclearData", "predict_query": "SELECT Capacity FROM nuclear_power_plants WHERE Status = 'Operational' AND ReactorType = 'PHWR' ORDER BY OperationalFrom ASC LIMIT 1", "question": "How many PHWR are there today?"}
{"db_id": "GeoNuclearData", "predict_query": "SELECT COUNT(*) FROM `nuclear_power_plants` WHERE `Country` = 'China'", "question": "How many kinds of nuclear reactor model in the world?"}
{"db_id": "GeoNuclearData", "predict_query": "SELECT COUNT(*) FROM nuclear_power_plants WHERE Status = 'Shutdown'", "question": "How many nuclear power plants were shut down now?"}
{"db_id": "GeoNuclearData", "predict_query": "SELECT T1.Name FROM nuclear_power_plants AS T1 ORDER BY T1.Id ASC LIMIT 1", "question": "How many countries have at least 3 nuclear power plants?"}
{"db_id": "GeoNuclearData", "predict_query": "SELECT T2.Name FROM nuclear_power_plants AS T1 INNER JOIN country AS T2 ON T1.Country = T2", "question": "Which country has the most nuclear power plants?"}
{"db_id": "GeoNuclearData", "predict_query": "SELECT T1.Country FROM nuclear_power_plants AS T1 GROUP BY T1.Country ORDER BY COUNT(T1.Id) DESC LIMIT 1", "question": "Which country has only one nuclear power plants?"}
{"db_id": "GeoNuclearData", "predict_query": "SELECT T2.Code FROM nuclear_power_plants AS T1 INNER JOIN countries AS T2 ON", "question": "Which country has the most capacities of nuclear power plants?"}
{"db_id": "GeoNuclearData", "predict_query": "SELECT T1.Name FROM nuclear_power_plants AS T1 ORDER BY T1.Capacity DESC LIMIT 1", "question": "Which country has the least capacities of nuclear power plants?"}
{"db_id": "GeoNuclearData", "predict_query": "SELECT T1.Country,  COUNT(T1.Id) FROM nuclear_power_plants AS T1 GROUP BY T1.Country ORDER BY COUNT(T1.Id) DESC LIMIT 3", "question": "What are the top 3 countries which have the most nuclear power plants?"}
{"db_id": "GeoNuclearData", "predict_query": "SELECT SUM(T1.Capacity) FROM nuclear_power_plants AS T1 WHERE T1.Country = 'Japan'", "question": "Which country has the most nuclear station?"}
{"db_id": "GeoNuclearData", "predict_query": "SELECT T1.Capacity", "question": "Which county has the most nuclear station shut down?"}
{"db_id": "GeoNuclearData", "predict_query": "SELECT COUNT(T1.Name) FROM nuclear_power_plants AS T1 WHERE T1.Status = '", "question": "What nuclear station has the largest nuclear power plant capacity?"}
{"db_id": "GeoNuclearData", "predict_query": "SELECT Name FROM nuclear_power_plants WHERE Country = 'France' AND Status = 'Operating'", "question": "How many operating nuclear station in France?"}
{"db_id": "GeoNuclearData", "predict_query": "SELECT COUNT(Id) FROM nuclear_power_plants WHERE Status = 'Operational'", "question": "How many nuclear station are under construction?"}
{"db_id": "GeoNuclearData", "predict_query": "SELECT COUNT(Id),  Country FROM", "question": "What nuclear reactor model is the most popular?"}
{"db_id": "GeoNuclearData", "predict_query": "SELECT COUNT(T1.Name) FROM nuclear_power_plants AS T1 WHERE T1.Country = 'United States'", "question": "Which country is Chinon-A3 in?"}
{"db_id": "GeoNuclearData", "predict_query": "SELECT T1.Name FROM nuclear_power_plants AS T1 INNER JOIN countries AS T2 ON T1.Country = T2.Code WHERE T2.Name = 'Japan' AND T1.Status = 'Operational'", "question": "What are operational nuclear power plants in Japan called?"}
{"db_id": "GeoNuclearData", "predict_query": "SELECT COUNT(T1.Id) FROM nuclear_power_plants AS T1 INNER JOIN plants AS T2 ON T", "question": "Which country first started using nuclear power plant(s)?"}
{"db_id": "GeoNuclearData", "predict_query": "SELECT Name FROM nuclear_power_plants WHERE Capacity >= 1000 AND Country = 'Japan'", "question": "How many nuclear power plants are in preparation to be used in Japan?"}
{"db_id": "GeoNuclearData", "predict_query": "SELECT t1.Name, t1.Capacity FROM nuclear_power_plants AS t1 INNER JOIN countries AS t2 ON t1.Country = t2.Code WHERE t2.Name = 'United States' ORDER BY t1.Capacity DESC LIMIT 1", "question": "What is the current situation of the nuclear power plant in the United States with the maximum capacity?"}
{"db_id": "GeoNuclearData", "predict_query": "SELECT T2.Capacity FROM nuclear_power_plants AS T1 INNER JOIN nuclear_power_plants AS T2 ON T1.Id = T2.Id WHERE T1.Status = 'Operational' AND T1.ReactorType = 'Pressurized Water Reactor' ORDER BY T2.Capacity DESC LIMIT 1", "question": "What is the maximum capacity of existing pressurized water reactor?"}
{"db_id": "GeoNuclearData", "predict_query": "SELECT T1.Country FROM nuclear_power_plants AS T1 INNER JOIN ( SELECT T1.Country, COUNT(T1.Country) AS num FROM nuclear_power_plants AS T1 GROUP BY T1.Country ) AS T2 ON T1.Country = T2.Country WHERE T2.num = ( SELECT MAX(T2.num) FROM ( SELECT T1.Country, COUNT(T1.Country) AS num FROM nuclear_power_plants AS T1 GROUP BY T1.Country ) AS T2 )", "question": "Which nation has the most nuclear plants under construction?"}
{"db_id": "GeoNuclearData", "predict_query": "SELECT T1.Country FROM nuclear_power_plants AS T1 INNER JOIN ( SELECT T1.Country, COUNT(T1.Id) AS count FROM nuclear_power_plants AS T1 GROUP BY T1.Country ) AS T2 ON T1.Country = T2.Country WHERE T2.count = ( SELECT MAX(count) FROM ( SELECT T1.Country, COUNT(T1.Id) AS count FROM nuclear_power_plants AS T1 GROUP BY T1.Country ) )", "question": "Which country has the most under constriction power plants to date?"}
{"db_id": "GeoNuclearData", "predict_query": "SELECT T1.Longitude, T1.Latitude FROM nuclear_power_plants AS T1 INNER JOIN reactor_type AS T2 ON T1.ReactorType = T2.Id WHERE T2.Name = 'BWR' ORDER BY T1.Id ASC LIMIT 1", "question": "Where is the first BWR type power plant built and located?"}
{"db_id": "GeoNuclearData", "predict_query": "SELECT T1.Country,  MAX(T1.Capacity) FROM nuclear_power_plants AS T1 GROUP BY T1.Country;\nSQL", "question": "Which country lead the total capacity of the power plants it held?"}
{"db_id": "GeoNuclearData", "predict_query": "SELECT Name FROM nuclear_power_plants ORDER BY Capacity DESC LIMIT 1", "question": "What is the main source of the information for this table?"}
{"db_id": "GeoNuclearData", "predict_query": "SELECT T1.ReactorType, AVG(T1.Capacity) FROM nuclear_power_plants AS T1 GROUP BY T1.ReactorType ORDER BY AVG(T1.Capacity) DESC", "question": "Which reactor type has the largest average capacity?"}
{"db_id": "GeoNuclearData", "predict_query": "SELECT T1.Capacity FROM nuclear_power_plants AS T1 WHERE T", "question": "Which country is Kursk-1 in?"}
{"db_id": "GreaterManchesterCrime", "predict_query": "SELECT Location FROM GreaterManchesterCrime GROUP BY Location ORDER BY COUNT(Location) ASC LIMIT 1", "question": "Which streets in Manchester have the highest rates of crime?"}
{"db_id": "GreaterManchesterCrime", "predict_query": "SELECT COUNT(CrimeID) FROM GreaterManchesterCrime", "question": "When was the last instance of a violent or sexual offense in Manchester?"}
{"db_id": "GreaterManchesterCrime", "predict_query": "SELECT CrimeTS FROM GreaterManchesterCrime WHERE Type = 'Violent or Sexual Offence' ORDER BY CrimeTS DESC LIMIT 1", "question": "Where was the last instance of a violent or sexual offense in Manchester?"}
{"db_id": "GreaterManchesterCrime", "predict_query": "SELECT Type FROM GreaterManchesterCrime GROUP BY Type ORDER BY COUNT(CrimeID) DESC LIMIT 1", "question": "Which neighborhood has the highest crime rate?"}
{"db_id": "GreaterManchesterCrime", "predict_query": "SELECT COUNT(CrimeID) AS CrimeCount FROM GreaterManchesterCrime WHERE Location = 'L6 1BJ'", "question": "What is the crime rate for Eden Street area?"}
{"db_id": "GreaterManchesterCrime", "predict_query": "SELECT Type FROM GreaterManchesterCrime WHERE LSOA = 'Fallowfield' GROUP BY Type ORDER BY COUNT(Type) DESC LIMIT 1", "question": "What is the most common type of crime?"}
{"db_id": "GreaterManchesterCrime", "predict_query": "SELECT LSOA FROM GreaterManchesterCrime WHERE Type = 'Violence", "question": "Which neighborhood/area has the highest burglary rate?"}
{"db_id": "GreaterManchesterCrime", "predict_query": "SELECT LSOA FROM GreaterManchesterCrime GROUP BY LSOA ORDER BY COUNT(LSOA) ASC LIMIT 1", "question": "Which area do most of the crimes happen?"}
{"db_id": "GreaterManchesterCrime", "predict_query": "SELECT Type FROM GreaterManchesterCrime WHERE LSOA = 'H10100154' GROUP BY Type ORDER BY COUNT(CrimeID) DESC LIMIT 1", "question": "Which Lower Layer Output Area do most of the crimes happen?"}
{"db_id": "GreaterManchesterCrime", "predict_query": "SELECT Type FROM GreaterManchesterCrime GROUP BY Type ORDER BY COUNT(Type) DESC LIMIT 1", "question": "What time do most of the crimes happen?"}
{"db_id": "GreaterManchesterCrime", "predict_query": "SELECT Outcome FROM GreaterManchesterCrime WHERE Location ='street'", "question": "What are the most likely outcome of the police investigation if the crime happen on \"street\"?"}
{"db_id": "GreaterManchesterCrime", "predict_query": "SELECT COUNT(CrimeID) FROM GreaterManchesterCrime WHERE CrimeTS > date('now', '-7 days')", "question": "Which type of crime happen the most in Salford?"}
{"db_id": "GreaterManchesterCrime", "predict_query": "SELECT COUNT(CrimeID) FROM GreaterManchesterCrime WHERE Outcome = 'Under Investigation' AND LSOA = 'Hulme'", "question": "How many crimes are under investigation?"}
{"db_id": "GreaterManchesterCrime", "predict_query": "SELECT LSOA, COUNT(Type) FROM GreaterManchesterCrime GROUP BY LSOA", "question": "How many crimes has been conducted?"}
{"db_id": "GreaterManchesterCrime", "predict_query": "SELECT Type FROM GreaterManchesterCrime WHERE L", "question": "What is the top 3 area of crime conducted?"}
{"db_id": "GreaterManchesterCrime", "predict_query": "SELECT Type FROM GreaterManchesterCrime WHERE Outcome = 'Investigation complete'", "question": "Which type of crime has the highest rate of \"Investigation complete\"?"}
{"db_id": "GreaterManchesterCrime", "predict_query": "SELECT Location FROM GreaterManchesterCrime WHERE strftime('%s', CrimeTS) > strftime('%s', 'now', '-1 year') ORDER BY CrimeTS DESC LIMIT 10", "question": "How many crimes were classified as \"Drugs\"?"}
{"db_id": "GreaterManchesterCrime", "predict_query": "SELECT COUNT(CrimeTS) FROM GreaterManchesterCrime WHERE strftime('%Y', CrimeTS) = '2013'", "question": "How many crimes are still \"Under investigation\" to date?"}
{"db_id": "GreaterManchesterCrime", "predict_query": "SELECT COUNT(CrimeID) FROM GreaterManchesterCrime WHERE Type = \"Violence and Sexual Offences", "question": "Which location has the top amount of \"Drugs\" crime conducted?"}
{"db_id": "GreaterManchesterCrime", "predict_query": "SELECT Type FROM GreaterManchesterCrime GROUP BY Type ORDER BY COUNT(Type) DESC LIMIT 1", "question": "Whatâ€™s the most common type of crime?"}
{"db_id": "GreaterManchesterCrime", "predict_query": "SELECT Type FROM GreaterManchesterCrime GROUP BY Type ORDER BY COUNT(Type)", "question": "Where is the most dangerous area?"}
{"db_id": "GreaterManchesterCrime", "predict_query": "SELECT Type FROM GreaterManchesterCrime GROUP BY Type ORDER BY COUNT(Type) DESC LIMIT 1", "question": "Where is the safest area?"}
{"db_id": "GreaterManchesterCrime", "predict_query": "SELECT Location FROM GreaterManchesterCrime WHERE Type = 'Sexual Offences'", "question": "Where is the place with the largest number of sexual offenses crime events?"}
{"db_id": "GreaterManchesterCrime", "predict_query": "SELECT T1.LSOA FROM GreaterManchesterCrime AS T1 INNER JOIN GreaterManchesterCrime AS T2 ON T1.LSOA = T2.LSOA WHERE T2.Type = 'Violence against the person' GROUP BY T1.LSOA ORDER BY COUNT(T2.CrimeID) DESC LIMIT 1", "question": "If it is possible to increase the number of police officers, which place is with the first priority?"}
{"db_id": "GreaterManchesterCrime", "predict_query": "SELECT Type FROM GreaterManchesterCrime WHERE Outcome = 'Prosecution'", "question": "Which type of crime has the most prosecution cases?"}
{"db_id": "GreaterManchesterCrime", "predict_query": "SELECT Type FROM GreaterManchesterCrime WHERE Outcome = 'Investigation complete'", "question": "Which type of crime has the most investigation complete cases?"}
{"db_id": "GreaterManchesterCrime", "predict_query": "SELECT `Outcome` FROM `GreaterManchesterCrime` WHERE `Location` LIKE '6B:E2:54:C6:58:D2'", "question": "What is the result in case 6B:E2:54:C6:58:D2?"}
{"db_id": "Pesticide", "predict_query": "SELECT CAST(SUM(CASE WHEN quantitate = 'yes' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(sample_pk) FROM sample", "question": "Provide the list of products with pesticide residues detected."}
{"db_id": "Pesticide", "predict_query": "SELECT T1.extract FROM resultsdata15 AS T1 INNER JOIN sampledata15 AS T2 ON T1.sample_pk = T2.sample_pk WHERE T1.determin = 'P' AND T1.quantitate = 'Q' GROUP BY T1.extract ORDER BY COUNT(T1.extract) DESC LIMIT 1", "question": "What is the most effective extraction method in terms of pesticide residues detection?"}
{"db_id": "Pesticide", "predict_query": "SELECT DISTINCT T1.determin, T1.quantitate FROM resultsdata15 AS T1 INNER JOIN sampledata15 AS T2 ON T1.sample_pk = T2.sample_pk WHERE T1.quantitate = 'yes' ORDER BY T1.determin DESC", "question": "What is the most effective determinative method in terms of pesticide residues detection?"}
{"db_id": "Pesticide", "predict_query": "SELECT T1.lab FROM resultsdata15 AS T1 INNER JOIN sampledata15 AS T2 ON T1.sample_pk = T2.sample_pk WHERE T1.quantitate = 'detected' ORDER BY T1.lab DESC LIMIT 5;", "question": "What are the top 5 analyzing labs where pesticide residues detection was conducted?"}
{"db_id": "Pesticide", "predict_query": "SELECT T2.commod FROM resultsdata15 AS T1 INNER JOIN sampledata15 AS", "question": "Wha commodity type of apple has the highest pesticide residues to consume?"}
{"db_id": "Pesticide", "predict_query": "SELECT T1.country", "question": "Rank the country of product origins in terms of pesticide residues detection."}
{"db_id": "Pesticide", "predict_query": "SELECT T1.distst FROM sampledata15 AS T1 INNER", "question": "What type of collection facility results in the most risky consumption in terms of pesticide residues detection?"}
{"db_id": "Pesticide", "predict_query": "SELECT T1.country FROM sampledata15 AS T1 INNER JOIN results", "question": "What are the country of product origins where pesticide residues were not detected?"}
{"db_id": "Pesticide", "predict_query": "SELECT commod, AVG(concen) FROM resultsdata15 GROUP BY commod", "question": "how many entries are of each specific food?"}
{"db_id": "Pesticide", "predict_query": "SELECT commtype FROM resultsdata15 GROUP BY commtype ORDER BY COUNT(commtype) DESC LIMIT 1", "question": "which pesticides are most used?"}
{"db_id": "Pesticide", "predict_query": "SELECT AVG(concen) FROM resultsdata15 WHERE commod = 'azox'", "question": "which pesticides have been used the least?"}
{"db_id": "Pesticide", "predict_query": "SELECT T1.sample_pk, T1.commod, T1.variety, T1.origin, T2.concen FROM sampledata15 AS T1 INNER JOIN resultsdata15 AS T2 ON T1.sample_pk = T2.sample_pk WHERE T1.sample_pk = 1", "question": "how was a specific sample tested?"}
{"db_id": "Pesticide", "predict_query": "SELECT T2.mean FROM resultsdata15 AS T2 WHERE T2.sample_pk = 1", "question": "in which state was a specific sample grown?"}
{"db_id": "Pesticide", "predict_query": "SELECT T2.state FROM sampledata15 AS T1 INNER JOIN resultsdata15 AS T2 ON T1.sample_pk = T2.sample_pk WHERE T1.site ='site1' AND T1.packst = 'Pack' AND T1.variety = 'var1' AND T1.year = '1999' AND T1.month = '09' AND T1.day = '15' AND T1.commod = 'com1' AND T1.country = 'USA", "question": "in which state was a specific sample packed?"}
{"db_id": "Pesticide", "predict_query": "SELECT T1.variety FROM sampledata15 AS T1 INNER JOIN resultsdata15 AS T2 ON T1.sample_pk = T2.sample_pk WHERE T1.month = '05' AND T1.state =", "question": "in which state was a specific sample distributed?"}
{"db_id": "Pesticide", "predict_query": "SELECT T1.sample_pk FROM sampledata15 AS T1 WHERE T1.source_id = 'I'", "question": "show all imported samples?"}
{"db_id": "Pesticide", "predict_query": "SELECT DISTINCT commod FROM sampledata15;", "question": "which foods are captured in the data set?"}
{"db_id": "Pesticide", "predict_query": "SELECT variety FROM sampledata15 WHERE source_id = 'f'", "question": "how many samples have unknown countries of origin?"}
{"db_id": "Pesticide", "predict_query": "SELECT commod, MAX(concen) FROM resultsdata15 WHERE year = '2015' GROUP BY commod ORDER BY MAX(concen) DESC LIMIT 10", "question": "Which are the top 10 commodities that have the highest residue during 2015?"}
{"db_id": "Pesticide", "predict_query": "SELECT T1.mean FROM resultsdata15 AS T", "question": "Name some imported commodities that are not found in the US."}
{"db_id": "Pesticide", "predict_query": "SELECT T1.state, AVG(T2.concen) FROM sampledata15 AS T1 INNER JOIN resultsdata15 AS T2 ON T1.sample_pk = T2.sample_pk WHERE T1.disttype = 'F' GROUP BY T1.state", "question": "Tell me the average pesticide residue for each state in the US where food is grown."}
{"db_id": "Pesticide", "predict_query": "SELECT T1.variety FROM sampledata15 AS T1 INNER JOIN resultsdata15 AS T2 ON T1.sample_pk = T2.sample_pk WHERE T2.commod = 'AP' AND T2.concen > 0.0 ORDER BY T2.concen DESC LIMIT 1", "question": "Which varieties of apple typically have higher pesticide levels?"}
{"db_id": "Pesticide", "predict_query": "SELECT T1.commod FROM sampledata15 AS T1 INNER JOIN resultsdata15 AS T2 ON T1.sample_pk = T2.sample_pk WHERE T2.concen > T2.lod", "question": "Which commodities have the pesticides concentration much higher than their limit for detection?"}
{"db_id": "Pesticide", "predict_query": "SELECT commod FROM sampledata15 WHERE YEAR = '2015' GROUP BY commod ORDER BY COUNT(commod) DESC LIMIT 5", "question": "Name top 5 labs with the maximum number of testing."}
{"db_id": "Pesticide", "predict_query": "SELECT T1.commod FROM resultsdata15 AS T1 INNER JOIN sampledata15 AS T2 ON T1.sample_pk = T2.sample_pk", "question": "Which country is the safest in terms of the pesticide concentration found in imported foods?"}
{"db_id": "Pesticide", "predict_query": "SELECT SUM(quantity) FROM sampledata15 WHERE state = 'CA' AND year = '15'", "question": "Which is the most popular state in the US in terms of commodities distribution?"}
{"db_id": "Pesticide", "predict_query": "SELECT AVG(concen) FROM resultsdata15 WHERE commtype = 'GM';", "question": "What is the maximum pesticide concentration ever found in a commodity?"}
{"db_id": "Pesticide", "predict_query": "SELECT T1.commod FROM sampledata15 AS T1 WHERE T1.sample_pk = 3763", "question": "When is sample 3763 collected?"}
{"db_id": "Pesticide", "predict_query": "SELECT T1.state FROM sampledata15 AS T1 INNER JOIN resultsdata15 AS", "question": "Which state has the most apple collected?"}
{"db_id": "Pesticide", "predict_query": "SELECT T1.state, MIN(T1.quantity) FROM sampledata15 AS T", "question": "Which state has grow the most apples?"}
{"db_id": "Pesticide", "predict_query": "SELECT COUNT(DISTINCT commod) FROM sampledata15 WHERE YEAR = '2015'", "question": "How many class of products are there?"}
{"db_id": "Pesticide", "predict_query": "SELECT T2.concen FROM resultsdata15 AS T2 INNER JOIN sampledata15 AS T1 ON T2.sample_pk = T1.sample", "question": "what's the 4 digit collection code of sample 3763?"}
{"db_id": "Pesticide", "predict_query": "SELECT T1.mean FROM resultsdata15 AS T1 INNER JOIN resultsdata15 AS T2 ON T1.sample_pk = T2.sample_pk WHERE T1.com", "question": "If sample 6480 is imported, which country is it originally from?"}
{"db_id": "Pesticide", "predict_query": "SELECT T1.variety FROM sampledata15 AS T1 WHERE T1.sample_pk = 9632;", "question": "How many number of units are there in sample 9628?"}
{"db_id": "Pesticide", "predict_query": "SELECT T2.pestcode FROM sampledata15 AS T1 INNER JOIN resultsdata15 AS T2 ON T1.sample_pk = T", "question": "What's the code for test for sample 7498?"}
{"db_id": "Pesticide", "predict_query": "SELECT T1.commod, T1.confmethod, T1.confmethod2 FROM resultsdata15 AS T1 INNER JOIN sampledata15 AS T2 ON T1.sample_pk = T2.sample_pk ORDER BY T2.year DESC LIMIT 1", "question": "What's the code for confirmation for the latest sample?"}
{"db_id": "Pesticide", "predict_query": "SELECT lab FROM resultsdata15 GROUP BY lab ORDER BY COUNT(sample_pk) DESC LIMIT 1", "question": "Which lab has analyzed the most sample?"}
{"db_id": "Pesticide", "predict_query": "SELECT AVG(lod) FROM sampledata15 WHERE state = 'CA';", "question": "What's the majority of test classification result?"}
{"db_id": "Pesticide", "predict_query": "SELECT state FROM sampledata15 GROUP BY state ORDER BY COUNT(*) DESC LIMIT 1", "question": "What's the unit of measure for sample 3879?"}
{"db_id": "Pesticide", "predict_query": "SELECT conunit FROM resultsdata15 WHERE commod = 'PO'", "question": "What's the unit of measure used for the product commodity code PO?"}
{"db_id": "Pesticide", "predict_query": "SELECT T1.mean FROM resultsdata15 AS T1 INNER", "question": "What's the mean result finding for product AP?"}
{"db_id": "Pesticide", "predict_query": "SELECT extract FROM resultsdata15", "question": "What's the most common extraction method?"}
{"db_id": "Pesticide", "predict_query": "SELECT T1.lab FROM resultsdata15 AS T1 INNER JOIN sampledata15 AS T2 ON T1.sample_pk = T2.sample_pk GROUP BY T1.lab ORDER BY COUNT(T1.lab) DESC LIMIT 1", "question": "Which lab conduct of most number of tests?"}
{"db_id": "Pesticide", "predict_query": "SELECT mean FROM resultsdata15 WHERE commod = 'AP'", "question": "Which lab is used for testing for prodict AP?"}
{"db_id": "Pesticide", "predict_query": "SELECT COUNT(sample_pk) FROM resultsdata15 WHERE pestcode = '01.001'", "question": "How many samples come from other countries?"}
{"db_id": "Pesticide", "predict_query": "SELECT commtype FROM sampledata15 WHERE commod = 'food' AND year = '2015' GROUP BY commtype ORDER BY COUNT(commtype) DESC LIMIT 1", "question": "What kind of food has been tested 'detect' most?"}
{"db_id": "Pesticide", "predict_query": "SELECT T1.state FROM sampledata15 AS T1 INNER JOIN resultsdata15 AS T2", "question": "Which state produce the most organic food?"}
{"db_id": "Pesticide", "predict_query": "SELECT pestcode, COUNT(sample_pk) FROM resultsdata15 WHERE commod = 'FRUS' AND state = 'US' GROUP BY pestcode ORDER BY COUNT(sample", "question": "Where do the US import the most food ?"}
{"db_id": "Pesticide", "predict_query": "SELECT commod FROM resultsdata15 GROUP BY commod ORDER BY COUNT(commod) DESC LIMIT 1", "question": "What kind of food has been test the most?"}
{"db_id": "Pesticide", "predict_query": "SELECT commod FROM sampledata15 WHERE state = 'CA' GROUP BY commod ORDER BY COUNT(commod) DESC LIMIT 1;", "question": "Which kind of pesticide is the easiest to be tested?"}
{"db_id": "StudentMathScore", "predict_query": "SELECT T1.state_code, T1.t_fed_rev FROM FINREV_FED_17 AS T1 ORDER BY T1.t_fed_rev DESC LIMIT 5", "question": "What are the top five states in descending order in terms of revenue provided to school districts?"}
{"db_id": "StudentMathScore", "predict_query": "SELECT T1.state_code, T1.nces_id, T2.state FROM FINREV_FED_17 AS T1 INNER JOIN FINREV_FED_KEY_17 AS T2 ON T1.state_code = T2.State_Code ORDER BY T2.#_Records DESC LIMIT 5;", "question": "What are the top five states in descending order in terms of the number of school districts per state?"}
{"db_id": "StudentMathScore", "predict_query": "SELECT #_Records FROM FINREV_FED_KEY_17 WHERE State_Code = 1", "question": "For each state, when was the last time the average score data was collected?"}
{"db_id": "StudentMathScore", "predict_query": "SELECT T1.t_fed_rev FROM FINREV_FED_17 AS T1 INNER JOIN FINREV_FED_KEY_17 AS T2 ON T1.state_code = T2.State_Code WHERE T2.State = 'Virginia' AND T1.school_district = 'Faifaix County'", "question": "How much federal funding did Faifaix County, VA schools receive in all forms?"}
{"db_id": "StudentMathScore", "predict_query": "SELECT T1.average_scale_score FROM NDECoreExcel_Math_Grade8 AS T1 WHERE T1.year = 2015 AND T1.state =", "question": "How much did the federal government spend in No Child Left Behind funding in 2017?"}
{"db_id": "StudentMathScore", "predict_query": "SELECT SUM(t_fed_rev) FROM FINREV_FED_17 WHERE school_district LIKE '%Wisconsin%'", "question": "How many Wisconsin school districts receive federal funding?"}
{"db_id": "StudentMathScore", "predict_query": "SELECT T1.average_scale_score FROM NDECoreExcel_Math_Grade8 AS T1 WHERE T1.state = 'California'", "question": "Which state performs best on the NAEP 8th grade math test?"}
{"db_id": "StudentMathScore", "predict_query": "SELECT T1.school_district FROM FINREV_F", "question": "Which federally-funded state performs worst on the NAEP math exam for eighth graders?"}
{"db_id": "StudentMathScore", "predict_query": "SELECT T1.average_scale_score FROM NDECoreExcel_Math_Grade8 AS T1", "question": "What is the average NAEP math score for all eighth graders in federally-funded states?"}
{"db_id": "StudentMathScore", "predict_query": "SELECT T1.school_district, T1.t_fed_rev FROM FINREV_FED_17 AS T1 INNER JOIN FINREV_FED_KEY_17 AS T2 ON T1.state_code = T2.State_Code WHERE T2.State = 'Wisconsin' ORDER BY T1.t_fed_rev DESC LIMIT 1", "question": "Which school district receive the most of federal revenue through state in Wisconsin?"}
{"db_id": "StudentMathScore", "predict_query": "SELECT T1.average_scale_score FROM NDECoreExcel_Math_Grade8 AS T", "question": "What is the average Title 1 fund in Virginia?"}
{"db_id": "StudentMathScore", "predict_query": "SELECT T1.state, T1.average_scale_score, T2.t_fed_rev FROM NDECoreExcel_Math_Grade8 AS T1 INNER JOIN FINREV_FED_17 AS T2 ON T1.state = T2.school_district ORDER BY T1.average_scale_score DESC LIMIT 10", "question": "What are the top 10 states that have the highest average math score and federal revenue they got through different categories?"}
{"db_id": "StudentMathScore", "predict_query": "SELECT T1.state_code, T1.t_fed_rev, T2.year, T2.average_scale_score FROM FINREV_FED_17 AS T1 INNER JOIN NDECoreExcel_Math_Grade8 AS T2 ON T1.state_code = T2.state GROUP BY T1.t_fed_rev ORDER BY T1.t_fed_rev DESC LIMIT 10", "question": "What are the schools with highest federal revenue in each federal revenue categories and what's their state average scores?"}
{"db_id": "StudentMathScore", "predict_query": "SELECT T1.state FROM NDECoreExcel_Math_Grade8 AS T1 ORDER BY T1.average_scale_score DESC LIMIT 1", "question": "State with highest average math score"}
{"db_id": "StudentMathScore", "predict_query": "SELECT T1.school_district, T1.t_fed_rev, T2.all_students, T2.average_scale_score FROM FINREV_FED_17 AS T1 INNER JOIN NDECoreExcel_Math_Grade8 AS T2 ON T1.state_code = T2.state ORDER BY CAST(T1.t_fed_rev AS REAL) / CAST(T2.average_scale_score AS REAL) DESC LIMIT 1", "question": "School with highest ratio of total revenue and average scores"}
{"db_id": "StudentMathScore", "predict_query": "SELECT T2.state, T1.t_fed_rev FROM FINREV_FED_17 AS T1 INNER JOIN NDECoreExcel_Math_Grade8 AS T2 ON T1.state_code = T2.state ORDER BY T1.t_fed_rev DESC LIMIT 1", "question": "Which state spent the most revenue towards schools and whats the state average score"}
{"db_id": "StudentMathScore", "predict_query": "SELECT T1.school_district, T1.t_fed_rev, T1.nces_id FROM FINREV_FED_17 AS T1 INNER JOIN NDECoreExcel_Math_Grade8 AS T2 ON T1.nces_id = T2.state ORDER BY T1.t_fed_rev / T2.average_scale_score ASC LIMIT 1", "question": "School with lowest ratio of total revenue and average scores"}
{"db_id": "StudentMathScore", "predict_query": "SELECT T1.school", "question": "Which state spent the least revenue towards schools and whats the state average score"}
{"db_id": "StudentMathScore", "predict_query": "SELECT school_district FROM FINREV_FED_17 ORDER BY t_fed_rev DESC LIMIT 1", "question": "Which state has the highest average score in math exam?"}
{"db_id": "StudentMathScore", "predict_query": "SELECT T2.all_students, T2.average_scale_score FROM FINREV_FED_17 AS T1 INNER JOIN NDECoreExcel_Math_Grade8 AS T2 ON T1.state_code = T2.state WHERE T1.state_code = 5", "question": "What is the average match score of CA?"}
{"db_id": "StudentMathScore", "predict_query": "SELECT average_scale_score FROM NDECoreExcel_Math_Grade8 WHERE state = 'Indiana'", "question": "How many unique school districts in Indiana?"}
{"db_id": "StudentMathScore", "predict_query": "SELECT t_fed_rev FROM FINREV_FED_17 WHERE state_code = ( SELECT State_Code FROM FINREV_FED_KEY_17 WHERE State = 'CA' ) AND yr_data = 201", "question": "What is the state code of VA?"}
{"db_id": "StudentMathScore", "predict_query": "SELECT T1.state FROM NDECoreExcel_Math_Grade8 AS", "question": "Which state get the highest revenue?"}
{"db_id": "StudentMathScore", "predict_query": "SELECT SUM(CASE WHEN T1.c25 > 0 THEN T1.t_fed_rev ELSE 0 END) FROM FINREV_FED_17 AS T1 INNER JOIN FINREV_FED_KEY_17 AS T2 ON T1.state_code = T2.State_Code WHERE T2.State = 'Colorado' AND T2.`#_Records` = '1' AND T1.c25 > 0", "question": "How much funding does Colorado schools receive from Title 1 and the Child Nutrition program respectively?"}
{"db_id": "StudentMathScore", "predict_query": "SELECT T1.average_scale_score FROM NDECoreExcel_Math_G", "question": "How much federal funding does Pecatonia Area School district get?"}
{"db_id": "StudentMathScore", "predict_query": "SELECT T1.year, T1.state, T1.all_students, T1.average_scale_score FROM NDECoreExcel_Math_Grade8 AS T1 WHERE T1.state = 'NC' OR T1.state = 'SC'", "question": "What are the student scores on the NAEP math exam for 8th graders in North Carolina and South Carolina?"}
{"db_id": "StudentMathScore", "predict_query": "SELECT SUM(T1", "question": "What are the averge score of students in NC and in NY?"}
{"db_id": "StudentMathScore", "predict_query": "SELECT AVG(average_scale_score) FROM NDECoreExcel_Math_Grade8 WHERE year = 2015 AND state = 'CO'", "question": "How many schools get higher revenue via Child Nutrition A than revenue via child left school behind act?"}
{"db_id": "TheHistoryofBaseball", "predict_query": "SELECT T2.state FROM", "question": "Which states have produced the largest number of candidates inducted into the hall of fame?"}
{"db_id": "TheHistoryofBaseball", "predict_query": "SELECT T1.league_id, SUM(T1.salary) AS total_salary", "question": "What is the top league that pays the most to their players?"}
{"db_id": "TheHistoryofBaseball", "predict_query": "SELECT T1.league_id FROM salary AS T1 INNER JOIN ( SELECT league_id, MAX(salary) - MIN(salary) AS salary FROM salary GROUP BY league_id ) AS T2 ON T1.league_id = T2.league_id ORDER BY T2.salary DESC LIMIT 1", "question": "Which leage have the largest difference in pay among their team players?"}
{"db_id": "TheHistoryofBaseball", "predict_query": "SELECT T1.salary FROM salary AS T1 INNER JOIN team AS T2 ON T1.team", "question": "What is the average pay for players inducted into the hall of fame?"}
{"db_id": "TheHistoryofBaseball", "predict_query": "SELECT AVG(T2.salary) FROM hall_of_fame AS T1 INNER JOIN", "question": "What is the average pay for players not inducted into the hall of fame?"}
{"db_id": "TheHistoryofBaseball", "predict_query": "SELECT T1.league_id, AVG(T1.salary) FROM salary AS T1 GROUP BY T1.league_id", "question": "Which leage has higher average salaries for player?"}
{"db_id": "TheHistoryofBaseball", "predict_query": "SELECT name_first, name_last FROM player ORDER BY weight ASC LIMIT 1", "question": "Which Country are most baseball players from?"}
{"db_id": "TheHistoryofBaseball", "predict_query": "SELECT name_first, name_last FROM player ORDER BY death_year, death_month, death_day DESC LIMIT 1;", "question": "Who is the youngest baseball player so far?"}
{"db_id": "TheHistoryofBaseball", "predict_query": "SELECT T1.team_id, AVG(T1", "question": "Which league gets paid the most?"}
{"db_id": "TheHistoryofBaseball", "predict_query": "SELECT T1.points_won FROM player_award_vote AS T1 INNER JOIN player_award AS T2 ON T1.player_id = T2.player_id WHERE T2.year = 1990 AND T2.league_id = 'NL' ORDER BY T1.points_won DESC LIMIT 1", "question": "How much points were received by the NL league's most valuable player winner in 1990?"}
{"db_id": "TheHistoryofBaseball", "predict_query": "SELECT CAST(JULIAN DAY('now') - JULIAN DAY( birth_year || '-' || birth_month || '-' || birth_day ) AS REAL) / 365.25 FROM player WHERE birth_country = 'USA'", "question": "What is the average age of players from USA?"}
{"db_id": "TheHistoryofBaseball", "predict_query": "SELECT CAST(weight AS REAL) FROM player", "question": "What is the average lifespan of a baseball player?"}
{"db_id": "TheHistoryofBaseball", "predict_query": "SELECT T1.player_id FROM player_award", "question": "Which is the most popular voting method for Hall of Fame in 2000?"}
{"db_id": "TheHistoryofBaseball", "predict_query": "SELECT COUNT(player_id) FROM player WHERE weight > \"200\"", "question": "How many players weigh over 200 pounds?"}
{"db_id": "TheHistoryofBaseball", "predict_query": "SELECT T2.name", "question": "Who is the winner of Rookie of the Year in 2010?"}
{"db_id": "TheHistoryofBaseball", "predict_query": "SELECT T2.player_id, T2.salary FROM salary AS T1 INNER JOIN player AS T2 ON T1.player_id = T2.player_id WHERE T1.year > 2010 ORDER BY T1.salary DESC LIMIT 1", "question": "Who is the highest paid player since 2010?"}
{"db_id": "TheHistoryofBaseball", "predict_query": "SELECT T1.salary FROM salary AS T1 INNER JOIN player_award AS T2 ON T1.player_id = T2.player_id WHERE T2.award_id = 'WS'", "question": "What are the salaries of players who have ever enter hall of fame?"}
{"db_id": "TheHistoryofBaseball", "predict_query": "SELECT T1.yearid, T1.needed FROM hall_of_fame AS T1 INNER JOIN player_award_vote AS T2 ON T1.player_id = T2.player_id WHERE T1.yearid > 1871 GROUP BY T1.yearid HAVING MIN(T1.needed) ORDER BY T1.yearid", "question": "What are the minimum votes needed to enter hall of fame for each year since 1871?"}
{"db_id": "TheHistoryofBaseball", "predict_query": "SELECT T2.salary FROM player AS T1 INNER JOIN salary", "question": "What are the salaries in National League?"}
{"db_id": "TheHistoryofBaseball", "predict_query": "SELECT T1.player_id FROM player_award AS T1 GROUP BY T1.player_id ORDER BY COUNT(T1.player_id) DESC LIMIT 1", "question": "What are the salaries in American League?"}
{"db_id": "TheHistoryofBaseball", "predict_query": "SELECT T1.award_id FROM player_award AS T1 INNER JOIN player_award_vote AS T", "question": "Which birth place has the most player awards?"}
{"db_id": "TheHistoryofBaseball", "predict_query": "SELECT T1.birth_city FROM player AS T1 INNER JOIN player_award AS T2 ON T1.player_id = T2.player_id WHERE T2.year >= 1871 AND T2.votes = 'YES'", "question": "What are the birth places of players won on hall of fame since 1871?"}
{"db_id": "TheHistoryofBaseball", "predict_query": "SELECT T1.player_id FROM salary AS T1 INNER JOIN player_award AS T2 ON T1.player_id = T2", "question": "Which award has the highest player's salary?"}
{"db_id": "TheHistoryofBaseball", "predict_query": "SELECT yearid FROM hall_of_fame WHERE category = 'Special'", "question": "What were the years when any special elections happened in hall of fame?"}
{"db_id": "TheHistoryofBaseball", "predict_query": "SELECT COUNT(*),  T2.country FROM player_award AS T1  INNER JOIN player AS T2 ON T1.player_id  =  T2.player_id  INNER JOIN league AS T3 ON T1.league_id  =  T3.league_id  WHERE T1.award_id  IN  ( SELECT award_id FROM hall_of_fame WHERE category  =  'Most Valuable Player' ) GROUP BY T2.country ORDER BY COUNT(*) DESC LIMIT 10", "question": "Top 10 countries with the most hall of fame players"}
{"db_id": "TheHistoryofBaseball", "predict_query": "SELECT T2.player_id, T1.year FROM player_award AS T1 INNER JOIN player_award_vote AS T2 ON T1.player_id = T2.player_id WHERE T1.award_id = T2.award_id ORDER BY T2.year DESC", "question": "For every award, who is the youngest winner?"}
{"db_id": "TheHistoryofBaseball", "predict_query": "SELECT award_id, MIN(year) FROM player_award GROUP BY award_id", "question": "For every award, who is the oldest winner?"}
{"db_id": "TheHistoryofBaseball", "predict_query": "SELECT T1.league_id,  COUNT(T1.player_id) AS count FROM player_award AS T1 INNER JOIN player_award_vote AS T2 ON T1.award_id = T2.award_id AND T1.year = T2.year AND T1.league_id = T2.league_id AND T1.player_id = T2.player_id GROUP BY T1.league_id ORDER BY count DESC LIMIT 10", "question": "Top 10 teams with the most hall of fame players"}
{"db_id": "TheHistoryofBaseball", "predict_query": "SELECT player_id FROM player_award GROUP BY player_id ORDER BY COUNT(award_id) DESC LIMIT 1;", "question": "Average lifespan of hall of fame players"}
{"db_id": "TheHistoryofBaseball", "predict_query": "SELECT T1.position, AVG(T1.weight) FROM player AS T1 INNER JOIN player_award AS T2 ON T1.player_id = T2.player_id GROUP BY T1.position", "question": "For award winners, what's average weight for each position"}
{"db_id": "TheHistoryofBaseball", "predict_query": "SELECT T", "question": "For award winners, which position that has the most hall of fame players?"}
{"db_id": "TheHistoryofBaseball", "predict_query": "", "question": "Which player get the highest score in 1971?"}
{"db_id": "TheHistoryofBaseball", "predict_query": "SELECT T1.month, COUNT(T1.player_id) AS cnt FROM ( SELECT STRFTIME('%m', birthdate) AS month, player_id FROM player ) AS T1 INNER JOIN hall_of_fame AS T2 ON T1.player_id = T2.player_id GROUP BY T1.month ORDER BY cnt DESC LIMIT 1", "question": "Which month that players were born has the highest likelihood to be elected as hall of fame?"}
{"db_id": "TheHistoryofBaseball", "predict_query": "SELECT T1.league_id, COUNT(T1.player_id) FROM player_award AS T1 INNER JOIN player AS T2 ON T1.player_id = T2.player_id WHERE T1.year = 2006 GROUP BY T1.league_id ORDER BY COUNT(T1.player_id) DESC LIMIT 1", "question": "Which league has the most player awarded in 2006?"}
{"db_id": "TheHistoryofBaseball", "predict_query": "SELECT T1.name_first FROM player AS T1 WHERE T1.player_id = '", "question": "What defense position the player ID willite01 is?"}
{"db_id": "TheHistoryofBaseball", "predict_query": "SELECT T1.player_id FROM player_award AS T1 INNER JOIN player_award_vote AS T2 ON T1.player_id = T2.player_id WHERE T2.year = 2019 AND T2.league_id = 'National' AND", "question": "How many players were awarded more than ten times?"}
{"db_id": "TheHistoryofBaseball", "predict_query": "SELECT T2.birth_city FROM player_award_vote AS T1 INNER JOIN player AS T2 ON T1.player_id = T2.player_id GROUP BY T2.birth_city ORDER BY COUNT(T2.birth_city) DESC LIMIT 1", "question": "Which city the most players were born?"}
{"db_id": "TheHistoryofBaseball", "predict_query": "SELECT COUNT(T2.player_id) FROM", "question": "What is the average weight of players who were awarded third-base man in TSN all-star award?"}
{"db_id": "TheHistoryofBaseball", "predict_query": "SELECT player_id FROM salary WHERE year = 2016 ORDER BY salary DESC LIMIT 1", "question": "Who is the player had the highest salary in 2015?"}
{"db_id": "USWildFires", "predict_query": "SELECT STAT_CAUSE_CODE FROM Fires WHERE FIRE_YEAR = 2017 GROUP BY STAT_CAUSE_CODE ORDER BY COUNT(STAT_CAUSE_CODE) DESC LIMIT 1", "question": "Which year has the most wildfires?"}
{"db_id": "USWildFires", "predict_query": "SELECT STAT_CAUSE_CODE, DISCOVERY_TIME FROM Fires ORDER BY DISCOVERY_TIME DESC LIMIT 1", "question": "Which time of day has the most wildfires?"}
{"db_id": "USWildFires", "predict_query": "SELECT STAT_CAUSE_CODE, STAT_CAUSE_DESCR FROM Fires GROUP BY STAT_CAUSE_CODE ORDER BY COUNT(STAT_CAUSE_CODE) DESC LIMIT 10", "question": "What are the most common causes of the wildfires?"}
{"db_id": "USWildFires", "predict_query": "SELECT AVG(FIRE_SIZE) FROM Fires WHERE STATE = 'California'", "question": "How long does it take to control wildfires on average?"}
{"db_id": "USWildFires", "predict_query": "SELECT T1.STATE, AVG(T1.FIRE_SIZE) AS AVG FROM Fires AS T1 GROUP BY T1.STATE", "question": "Which state has the most wildfires?"}
{"db_id": "USWildFires", "predict_query": "SELECT STATE FROM Fires WHERE FIRE_YEAR = 2018 ORDER BY FIRE_SIZE DESC LIMIT 1;", "question": "Which state has the largest wildfire?"}
{"db_id": "USWildFires", "predict_query": "SELECT T1.OWNER_DESCR, COUNT(T1.OWNER_DESCR) FROM Fires AS T1 GROUP BY T1.OWNER_DESCR ORDER BY COUNT(T1.OWNER_DESCR) DESC LIMIT 1", "question": "What enrity is reponsible for managing the land at the point of origin of the most wildfires?"}
{"db_id": "USWildFires", "predict_query": "SELECT STAT_CAUSE_DESCR FROM Fires WHERE FIRE_YEAR BETWEEN 2000 AND 2005 GROUP", "question": "What was the most common cause of fire between 2000 and 2005?"}
{"db_id": "USWildFires", "predict_query": "SELECT SUM(T1.FIRE_SIZE) AS total FROM Fires AS T1 WHERE STRFTIME('%Y-%m", "question": "How many fires were more than 100 acres in 2006?"}
{"db_id": "USWildFires", "predict_query": "SELECT COUNTY FROM Fires WHERE FIRE_YEAR = 2001 AND STATE = 'California' GROUP BY COUNTY ORDER BY COUNT(*) DESC LIMIT 1", "question": "Which states had the largest number of fires in 2001?"}
{"db_id": "USWildFires", "predict_query": "SELECT FIRE_SIZE, FIRE_SIZE_CLASS, FIRE_YEAR FROM Fires WHERE STATE = 'California' AND FIRE_YEAR BETWEEN 2000 AND", "question": "How many acres burned in fires in California each year between 2000 and 2005?"}
{"db_id": "USWildFires", "predict_query": "SELECT AVG(LATITUDE) FROM Fires WHERE FIRE_YEAR = 2018", "question": "Which year had the largest number of fires?"}
{"db_id": "USWildFires", "predict_query": "SELECT AVG(FIRE_SIZE) FROM Fires WHERE STAT_CAUSE_CODE = 13 AND STATE = 'California';", "question": "Show all fires caused by campfires in Texas."}
{"db_id": "USWildFires", "predict_query": "SELECT T1.OWNER_DESCR FROM Fires AS T1 INNER JOIN FIPS_NAME AS T2 ON T1.FIPS_NAME = T2.FIPS_NAME WHERE T1.FIRE_SIZE = ( SELECT MAX(FIRE_SIZE) FROM Fires WHERE STATE = 'Oregon' AND FIRE_YEAR = 2015 ) AND T1.STATE = 'Oregon' AND T1.FIRE_YEAR = 2015", "question": "Who was responsible for the land of the biggest fire in Oregon in 2015?"}
{"db_id": "USWildFires", "predict_query": "SELECT T1.COUNTY FROM Fires AS T1 INNER JOIN FIPS_NAME AS T2 ON T1.FIPS_NAME = T2.FIPS_NAME WHERE T2.STATE = 'Washington' AND T1.FIRE_YEAR = 2012", "question": "Which counties in Washington had fires in 2012?"}
{"db_id": "USWildFires", "predict_query": "SELECT SUM(FIRE_SIZE) FROM Fires WHERE STATE = 'California' AND COUNTY = 'Los Angeles' AND FIRE_YEAR = 2007", "question": "How many arson-related fires were there in 2010?"}
{"db_id": "USWildFires", "predict_query": "SELECT FIRE_YEAR, FIRE_SIZE FROM Fires WHERE STATE = 'California' AND FIRE_YEAR = 2018", "question": "How many years of data are recorded in this database?"}
{"db_id": "USWildFires", "predict_query": "SELECT CAST(SUM(T1.LATITUDE) AS REAL) / COUNT(T1.LATITUDE) FROM", "question": "Average date of year that fire was discovered from 2000~2004?"}
{"db_id": "USWildFires", "predict_query": "SELECT MAX(STAT_CAUSE_DESCR) AS STAT_CAUSE_DESCR FROM Fires", "question": "Whatâ€™s the most common cause of the fire (code) in the database?"}
{"db_id": "USWildFires", "predict_query": "SELECT MAX(FIRE_SIZE) FROM Fires WHERE FIRE_YEAR = 2017", "question": "Whatâ€™s the year that have the largest acres in the fire area?"}
{"db_id": "USWildFires", "predict_query": "SELECT LATITUDE FROM Fires WHERE FIRE_YEAR = 2019 AND FIRE_SIZE_CLASS = '1000-5000 acres'", "question": "How many missing / not specified name of the owner are there in the database?"}
{"db_id": "USWildFires", "predict_query": "SELECT county FROM Fires WHERE fire_year = 2000 GROUP BY county ORDER BY COUNT(*) DESC LIMIT 1;", "question": "Whatâ€™s the county that contains most recorded burns in 2000 according to the database?"}
{"db_id": "USWildFires", "predict_query": "SELECT FIRE_SIZE_CLASS,  COUNT (DISTINCT FIRE_SIZE) FROM Fires GROUP BY FIRE_SIZE_CLASS", "question": "How many distinct cause of the fire descriptions are there in the database?"}
{"db_id": "USWildFires", "predict_query": "SELECT T2.FIPS_NAME FROM Fires AS T1 INNER JOIN County ON T1", "question": "Sum of the acres burned in NC state in 2006?"}
{"db_id": "USWildFires", "predict_query": "SELECT T1.STAT_CAUSE_DESCR FROM Fires AS T1 INNER JOIN FIPS_NAME AS T2 ON T1.FIPS_NAME = T2.FIPS_NAME WHERE T2.FIPS_NAME = 'ut' AND T1.FIRE_YEAR = 1997 ORDER BY T1.FIRE_SIZE DESC LIMIT 1", "question": "What was the cause of the largest wildfire in Utah in the year 1997?"}
{"db_id": "USWildFires", "predict_query": "SELECT AVG(LATITUDE) FROM Fires WHERE COUNTY = 'Gloucester'", "question": "How many wildfires in Gloucester county have been larger than 10 acres?"}
{"db_id": "USWildFires", "predict_query": "SELECT STATE FROM Fires WHERE FIRE_YEAR >= 2010 GROUP BY STATE ORDER BY COUNT(STATE) DESC LIMIT 1", "question": "Which state experiences the most wildfires?"}
{"db_id": "USWildFires", "predict_query": "SELECT strftime('%m', DISCOVERY_DATE) AS Month, COUNT(*) FROM Fires GROUP BY Month ORDER BY COUNT(*) DESC LIMIT 1", "question": "What is the leading cause of wildfires?"}
{"db_id": "USWildFires", "predict_query": "SELECT COUNTY,  COUNT(*) FROM Fires WHERE FIRE_YEAR = 2015 GROUP BY COUNTY", "question": "On what type of land (public or private) do more wildfires occur?"}
{"db_id": "USWildFires", "predict_query": "SELECT FIRE_YEAR FROM Fires WHERE STATE = 'California' ORDER BY FIRE_SIZE DESC LIMIT 1", "question": "In 2014, how many wildfires were the result of mismanaged campfires?"}
{"db_id": "USWildFires", "predict_query": "SELECT AVG(FIRE_SIZE) FROM Fires WHERE STATE = 'Texas' AND FIRE_YEAR BETWEEN 2000 AND 2010", "question": "How many total acres of land in Texas have seen a wildfire in the decade between 2000-2010?"}
{"db_id": "USWildFires", "predict_query": "SELECT COUNTY FROM Fires WHERE STATE = 'California' GROUP BY COUNTY ORDER BY COUNT(COUNTY) DESC LIMIT 1;", "question": "Which state has the most number of fires being recorded?"}
{"db_id": "USWildFires", "predict_query": "SELECT T1.STAT_CAUSE_CODE, T1.ST", "question": "What is the most common reason that causes a fire?"}
{"db_id": "USWildFires", "predict_query": "SELECT COUNT(*) FROM Fires WHERE STATE = 'California'", "question": "What is the total area that has been burned until now?"}
{"db_id": "USWildFires", "predict_query": "SELECT county, SUM(FIRE_SIZE) FROM Fires WHERE FIRE_YEAR BETWEEN 1990 AND 1999 GROUP BY county ORDER BY SUM(FIRE_SIZE) DESC LIMIT 5", "question": "How many acres burned in 2000s and 1990s?"}
{"db_id": "USWildFires", "predict_query": "SELECT COUNT(T1.FIRE_SIZE) FROM Fires AS T1 WHERE T1.FIRE_YEAR = 2015 AND T1.STAT_CAUSE_CODE =", "question": "How many fire cases occur on the land without any owner?"}
{"db_id": "USWildFires", "predict_query": "SELECT T1.STAT_CAUSE_DESCR FROM Fires AS T1 GROUP", "question": "What is the latitudinal band that is most likely to experience wildfires in the USA?"}
{"db_id": "WhatCDHipHop", "predict_query": "SELECT groupName, releaseType, groupYear FROM torrents ORDER BY totalSnatched DESC LIMIT 100", "question": "What are the top 100 torrent releases?"}
{"db_id": "WhatCDHipHop", "predict_query": "SELECT artist FROM torrents ORDER BY totalSnatched DESC LIMIT 10", "question": "What are name of top 10 artists or groups?"}
{"db_id": "WhatCDHipHop", "predict_query": "SELECT artist FROM torrents ORDER BY totalSnatched DESC LIMIT 10", "question": "What are the top 10 torrent release types?"}
{"db_id": "WhatCDHipHop", "predict_query": "SELECT DISTINCT T1.groupName, T1.groupYear FROM torrents AS T1 INNER JOIN tags AS T2 ON T1.id = T2.id WHERE T2.tag = 'pop' ORDER BY T1.groupYear DESC LIMIT 20", "question": "What are the top 20 pop albums?"}
{"db_id": "WhatCDHipHop", "predict_query": "SELECT T1.groupName, T1.groupYear FROM torrents AS T1 INNER JOIN tags AS T2 ON T1.id = T2.id WHERE T1.releaseType = 'album' AND T1.groupYear >= 2000 AND T2.tag = 'instrumental' ORDER BY T1.groupYear DESC LIMIT 20;", "question": "What are the top 20 instrumental albums since 2000?"}
{"db_id": "WhatCDHipHop", "predict_query": "SELECT releaseType FROM torrents ORDER BY totalSnatched DESC LIMIT 1", "question": "What type of musical album is the most popular?"}
{"db_id": "WhatCDHipHop", "predict_query": "SELECT * FROM torrents WHERE releaseType ='single' ORDER BY totalSnatched DESC LIMIT 100", "question": "What are the top 100 single musics?"}
{"db_id": "WhatCDHipHop", "predict_query": "SELECT groupYear, SUM(totalSnatched) FROM torrents GROUP BY groupYear", "question": "What is the torrent download statistics for each release year?"}
{"db_id": "WhatCDHipHop", "predict_query": "SELECT COUNT(id),  releaseType FROM torrents GROUP BY releaseType", "question": "how many entries are of each type?"}
{"db_id": "WhatCDHipHop", "predict_query": "SELECT AVG(totalSnatched) FROM torrents WHERE releaseType = 'album'", "question": "how many unique entries are by the same Artist/group?"}
{"db_id": "WhatCDHipHop", "predict_query": "SELECT groupName FROM torrents ORDER BY totalSnatched DESC LIMIT 1", "question": "which entry have been downloaded the most?"}
{"db_id": "WhatCDHipHop", "predict_query": "SELECT id FROM torrents ORDER BY totalSnatched DESC LIMIT 1", "question": "which entry have been downloaded the least?"}
{"db_id": "WhatCDHipHop", "predict_query": "SELECT DISTINCT tag FROM tags", "question": "what are titles for each unique entry?"}
{"db_id": "WhatCDHipHop", "predict_query": "SELECT artist, SUM(totalSnatched) AS totalSnatched FROM torrents GROUP BY artist", "question": "what year was each specific entry released?"}
{"db_id": "WhatCDHipHop", "predict_query": "SELECT releaseType FROM torrents GROUP BY releaseType", "question": "what are the entries by each specific artist/group?"}
{"db_id": "WhatCDHipHop", "predict_query": "SELECT groupName FROM torrents ORDER BY totalSnatched DESC LIMIT 5", "question": "which tags exist?"}
{"db_id": "WhatCDHipHop", "predict_query": "SELECT DISTINCT releaseType FROM torrents", "question": "what release types are captured in this data set?"}
{"db_id": "WhatCDHipHop", "predict_query": "SELECT releaseType, groupName, groupYear FROM torrents WHERE groupYear > 2000 ORDER BY totalSnatched DESC LIMIT 5", "question": "Find me top 5 most popular releases after 2000?"}
{"db_id": "WhatCDHipHop", "predict_query": "SELECT * FROM torrents WHERE totalSnatched > 100;", "question": "Which albums have been downloaded more than 100 times?"}
{"db_id": "WhatCDHipHop", "predict_query": "SELECT T1.artist FROM torrents AS T1 INNER JOIN groupName", "question": "Name the most popular release on houston."}
{"db_id": "WhatCDHipHop", "predict_query": "SELECT releaseType, id FROM torrents WHERE artist = 'lasean camry' ORDER BY totalSnatched DESC LIMIT 1", "question": "Name the most popular and least popular releases of lasean camry?"}
{"db_id": "WhatCDHipHop", "predict_query": "SELECT groupName, totalSnatched FROM torrents ORDER BY totalSnatched DESC LIMIT 10", "question": "Find me top 10 albums ranked by their popularity."}
{"db_id": "WhatCDHipHop", "predict_query": "SELECT artist FROM torrents WHERE groupName = 'rock' ORDER BY total", "question": "Find me the most popular topics since 2010."}
{"db_id": "WhatCDHipHop", "predict_query": "SELECT artist FROM torrents GROUP BY artist ORDER BY COUNT(artist) DESC LIMIT 1", "question": "Which year had the minimum number of releases?"}
{"db_id": "WhatCDHipHop", "predict_query": "SELECT t.groupName FROM torrents AS t JOIN tags AS ta ON t.id = ta.id GROUP BY t.id ORDER BY COUNT(ta.id) DESC LIMIT 1", "question": "Which release is being downloaded the most?"}
{"db_id": "WhatCDHipHop", "predict_query": "SELECT id FROM tags WHERE tag = 'rock' GROUP BY id ORDER BY COUNT(id) DESC LIMIT 1;", "question": "Who or which group is most popular in 2015?"}
{"db_id": "WhatCDHipHop", "predict_query": "SELECT T2.tag, T1.groupName FROM torrents AS T1 INNER JOIN tags AS T2 ON T1.id = T2.id", "question": "Which tag is used for which release title?"}
{"db_id": "WhatCDHipHop", "predict_query": "SELECT artist FROM torrents GROUP BY artist ORDER BY COUNT(id) DESC LIMIT 1", "question": "Which year has the most released song?"}
{"db_id": "WhatCDHipHop", "predict_query": "SELECT artist, SUM(totalSnatched) FROM torrents GROUP BY artist ORDER BY SUM(totalSnatched) DESC LIMIT 1", "question": "Which artist/group is most productive?"}
{"db_id": "WhatCDHipHop", "predict_query": "SELECT groupName, SUM(totalSnatched) FROM torrents GROUP BY groupName ORDER BY SUM(totalSnatched) DESC LIMIT 1", "question": "Which artist/group has the highest average download of songs?"}
{"db_id": "WhatCDHipHop", "predict_query": "SELECT artist FROM torrents WHERE releaseType = 'CD' GROUP BY artist ORDER BY COUNT(artist) DESC LIMIT 1", "question": "Which year has the most CDs released?"}
{"db_id": "WhatCDHipHop", "predict_query": "SELECT artist FROM torrents GROUP BY artist ORDER BY COUNT(id) DESC LIMIT 1", "question": "Which CD has been downloaded the most times?"}
{"db_id": "WhatCDHipHop", "predict_query": "SELECT artist FROM torrents WHERE releaseType = 'album' GROUP BY artist ORDER BY COUNT(artist) DESC LIMIT 1", "question": "Which kind of release type is the most popular?"}
{"db_id": "WhatCDHipHop", "predict_query": "SELECT artist, SUM(totalSnatched) FROM torrents GROUP BY artist", "question": "Whose CDs sells best?"}
{"db_id": "WhatCDHipHop", "predict_query": "SELECT artist FROM torrents WHERE releaseType = 'album' ORDER BY totalSnatched DESC LIMIT 1\nSQL", "question": "What are the downloaded numbers and their release types?"}
{"db_id": "WhatCDHipHop", "predict_query": "SELECT SUM(totalSnatched) FROM torrents WHERE groupYear <= 2000", "question": "What are the downloaded numbers of 2000s and before 2000?"}
{"db_id": "WhatCDHipHop", "predict_query": "SELECT COUNT(DISTINCT artist) FROM torrents", "question": "How many same release titles are there in the table?"}
{"db_id": "WhatCDHipHop", "predict_query": "SELECT artist FROM torrents WHERE releaseType = 'dvd'", "question": "Which artist release the most CDs?"}
{"db_id": "WhatCDHipHop", "predict_query": "SELECT SUM(totalSnatched) FROM torrents WHERE releaseType = 'ep'", "question": "How many downloads of ep and album respectively?"}
{"db_id": "WhatCDHipHop", "predict_query": "SELECT artist FROM torrents WHERE releaseType = 'cd' AND totalSnatched > 1", "question": "What are the artist/groups that released only one CD?"}
{"db_id": "WhatCDHipHop", "predict_query": "SELECT T1.artist FROM torrents AS T1 WHERE T1.releaseType = 'Album' AND T1.groupYear > 2010", "question": "What are the actors who have had releases after 2010?"}
{"db_id": "WorldSoccerDataBase", "predict_query": "SELECT SUM(FTAG) FROM football_data WHERE HomeTeam = 'Arsenal' AND League = 'Premier League'", "question": "What are the Pinnacle odds for Arsenal winning matches?"}
{"db_id": "WorldSoccerDataBase", "predict_query": "SELECT T1.HOME_OPENING, T1.DRAW_OPENING, T1.AWAY_OPENING FROM betfront AS T1 WHERE T1", "question": "Which matches in Spain did the away team win?"}
{"db_id": "WorldSoccerDataBase", "predict_query": "SELECT DISTINCT T1.Datetime FROM football_data AS T1 INNER JOIN betfront AS T2 ON T1.Season = T2.YEAR WHERE T1.Div = 'Premier League' AND T2.COUNTRY = 'England' AND T2.COMPETION = 'Premier League' AND T1.FTR = 'D'", "question": "Which Premier League matches ended in a draw in 2016?"}
{"db_id": "WorldSoccerDataBase", "predict_query": "SELECT T1.MATCH FROM betfront AS T1 INNER JOIN football_data AS T2 ON T1.DATETIME = T2.Datetime WHERE T1.DRAW_OPENING > 3 AND T2.B365D < 3", "question": "Which matches had draw odds from Bet365 higher than 3?"}
{"db_id": "WorldSoccerDataBase", "predict_query": "SELECT T2.DRAW_CLOSING FROM football_data AS T1 INNER JOIN betfront AS T2 ON T1.AwayTeam = T2.MATCH WHERE T1.AwayTeam = 'VfB Stuttgart' ORDER BY T1.Datetime DESC LIMIT 1", "question": "What were the closing odds for a draw in matches with VfB Stuttgart?"}
{"db_id": "WorldSoccerDataBase", "predict_query": "SELECT COUNT(DISTINCT HomeTeam) FROM football_data WHERE FTAG = 0 AND League = 'Premier League'", "question": "Which games had no goals scored at full time?"}
{"db_id": "WorldSoccerDataBase", "predict_query": "SELECT DISTINCT T2.HomeTeam FROM football_data", "question": "What is the away team against Omiya Ardija in 2018?"}
{"db_id": "WorldSoccerDataBase", "predict_query": "SELECT T2.AwayTeam FROM football_data AS T2 INNER JOIN betfront AS T1 ON T2.AwayTeam = T1.MATCH", "question": "How many matches in Spain in 2010?"}
{"db_id": "WorldSoccerDataBase", "predict_query": "SELECT MAX(HOME_OPENING) FROM betfront", "question": "Which matches has the highest draw opening so far?"}
{"db_id": "WorldSoccerDataBase", "predict_query": "SELECT HomeTeam, AVG(HTHG) AS avg FROM football_data GROUP BY HomeTeam ORDER BY avg DESC LIMIT 1", "question": "Which year has most matches?"}
{"db_id": "WorldSoccerDataBase", "predict_query": "SELECT AVG(HOME_OPENING) FROM betfront WHERE YEAR = 2019 AND B365H > 0", "question": "How many matches did Pinnacle have betting records?"}
{"db_id": "WorldSoccerDataBase", "predict_query": "SELECT T2.HomeTeam FROM betfront AS T1 INNER JOIN football_data AS T2 ON", "question": "How many matches did Bet365 gives higher home win odds than Pinnacle?"}
{"db_id": "WorldSoccerDataBase", "predict_query": "SELECT COUNT(*) FROM football_data WHERE FTHG + FTAG < 5", "question": "How many games that the total number of goals exceed 5?"}
{"db_id": "WorldSoccerDataBase", "predict_query": "SELECT MAX(B365H) FROM betfront", "question": "What is the highest home losing odds in Bet365 ever?"}
{"db_id": "WorldSoccerDataBase", "predict_query": "SELECT AVG(HOME_OPENING) FROM betfront WHERE YEAR = '2015' AND COMPETION = 'English Premier League'", "question": "How many number of games ended in a 0-0 tie?"}
{"db_id": "WorldSoccerDataBase", "predict_query": "SELECT COUNT(Datetime) FROM football_data;", "question": "How many league division does football_data database has?"}
{"db_id": "WorldSoccerDataBase", "predict_query": "SELECT DISTINCT T1.Referee FROM football_data AS T1 INNER JOIN football_data AS T1_1 ON T1.Season = T1_1.Season WHERE T1.Div IN ('Scotland', 'England') AND T1_1.Div NOT IN ('Scotland', 'England')", "question": "Do other leagues have referee name records outside of Scotland and England?"}
{"db_id": "WorldSoccerDataBase", "predict_query": "SELECT B365H FROM football_data WHERE Season = '2016/2017", "question": "What's the odds for draw on Bet365 for the game Swindon v.s. Millwall for 2016/2017 season?"}
{"db_id": "GeoNuclearData", "predict_query": "SELECT T1.Country, COUNT(T1.Name) FROM nuclear_power_plants AS T1 INNER JOIN  AS T2 ON T1.Id = T2.Id GROUP BY T1.Country ORDER BY COUNT(T1.Name) DESC LIMIT 10", "question": "What are the top 10 countries with most number of operational plants?"}
{"db_id": "GeoNuclearData", "predict_query": "SELECT T2.Name, T2.Country FROM nuclear_power_plants AS T1 INNER JOIN nuclear_power_plants AS T2 ON T1.Id = T2.Id WHERE T1.Status = 'planned'", "question": "What are the planed nuclear power plants and their located countries?"}
{"db_id": "GeoNuclearData", "predict_query": "SELECT COUNT(ReactorModel) AS count FROM nuclear_power_plants GROUP BY ReactorModel ORDER BY count DESC LIMIT 1", "question": "Whatâ€™s the most used nuclear reactor model?"}
{"db_id": "GeoNuclearData", "predict_query": "SELECT T1.Capacity FROM nuclear_power_plants AS T1 INNER JOIN", "question": "Which country is Kaiga-4 built in?"}
{"db_id": "GeoNuclearData", "predict_query": "SELECT T1.Country FROM nuclear_power_plants AS T1 WHERE T1.Name = 'Zaporizhzhia'", "question": "How many PHWR are there today?"}
{"db_id": "GeoNuclearData", "predict_query": "SELECT `Name` FROM `nuclear_power_plants` ORDER BY `Capacity` DESC LIMIT 1", "question": "How many kinds of nuclear reactor model in the world?"}
{"db_id": "GeoNuclearData", "predict_query": "SELECT COUNT(*) FROM nuclear_power_plants WHERE Status = 'operational' AND Country = 'Germany'", "question": "How many nuclear power plants were shut down now?"}
{"db_id": "GeoNuclearData", "predict_query": "SELECT COUNT(DISTINCT T1.Country)  FROM nuclear_power_plants AS T1  GROUP BY T1.Country  HAVING COUNT(T1.Name) > 3", "question": "How many countries have at least 3 nuclear power plants?"}
{"db_id": "GeoNuclearData", "predict_query": "SELECT `Status` FROM `nuclear_power_plants` WHERE `Country` = 'US'", "question": "Which country has the most nuclear power plants?"}
{"db_id": "GeoNuclearData", "predict_query": "SELECT COUNT(T1.Name) FROM nuclear_power_plants AS T1 WHERE T1.Country = 'United States'", "question": "Which country has only one nuclear power plants?"}
{"db_id": "GeoNuclearData", "predict_query": "SELECT T1.Country, SUM(T1.Cap", "question": "Which country has the most capacities of nuclear power plants?"}
{"db_id": "GeoNuclearData", "predict_query": "SELECT T1.Country, MIN(T1.Capacity) FROM nuclear_power_plants AS T1 GROUP BY T1.Country", "question": "Which country has the least capacities of nuclear power plants?"}
{"db_id": "GeoNuclearData", "predict_query": "SELECT T2.Country, COUNT(T1.Id) FROM nuclear_power_plants AS T1 INNER JOIN locations AS T2 ON T1.Latitude = T2.Latitude AND T1.Longitude = T2.Longitude GROUP BY T2.Country ORDER BY COUNT(T1.Id) DESC LIMIT 3", "question": "What are the top 3 countries which have the most nuclear power plants?"}
{"db_id": "GeoNuclearData", "predict_query": "SELECT Country FROM nuclear_power_plants GROUP BY Country ORDER BY COUNT(Country) DESC LIMIT 1", "question": "Which country has the most nuclear station?"}
{"db_id": "GeoNuclearData", "predict_query": "SELECT Country FROM nuclear_power_plants WHERE Status = 'Shutdown' GROUP BY Country ORDER BY COUNT(*) DESC LIMIT 1", "question": "Which county has the most nuclear station shut down?"}
{"db_id": "GeoNuclearData", "predict_query": "SELECT T1.Name, T1.Capacity FROM nuclear_power_plants AS T1 ORDER BY T1.Capacity ASC", "question": "What nuclear station has the largest nuclear power plant capacity?"}
{"db_id": "GeoNuclearData", "predict_query": "SELECT T1.Name FROM nuclear_power_plants AS T1 WHERE T1.Country = 'United States' AND T1.Capacity", "question": "How many operating nuclear station in France?"}
{"db_id": "GeoNuclearData", "predict_query": "SELECT Name FROM nuclear_power_plants WHERE Country = 'United States'", "question": "How many nuclear station are under construction?"}
{"db_id": "GeoNuclearData", "predict_query": "SELECT T1.ReactorModel FROM nuclear_power_plants AS T1 GROUP BY T1.ReactorModel ORDER BY COUNT(T1.ReactorModel) DESC LIMIT 1", "question": "What nuclear reactor model is the most popular?"}
{"db_id": "GeoNuclearData", "predict_query": "SELECT COUNT(T1.Id) FROM nuclear_power_plants AS T1 WHERE T1.Country = 'USA'", "question": "Which country is Chinon-A3 in?"}
{"db_id": "GeoNuclearData", "predict_query": "SELECT Name FROM nuclear_power_plants WHERE Country = 'Japan' AND OperationalFrom IS NOT NULL;", "question": "What are operational nuclear power plants in Japan called?"}
{"db_id": "GeoNuclearData", "predict_query": "SELECT T1.Country FROM nuclear_power_plants AS T1 ORDER BY T1.Capacity DESC LIMIT 1", "question": "Which country first started using nuclear power plant(s)?"}
{"db_id": "GeoNuclearData", "predict_query": "SELECT Name FROM nuclear_power_plants WHERE Country = 'Japan' AND Capacity >= 1000", "question": "How many nuclear power plants are in preparation to be used in Japan?"}
{"db_id": "GeoNuclearData", "predict_query": "SELECT T1.Name, T1.Capacity FROM nuclear_power_plants AS T1 INNER JOIN Country AS T2 ON T1.Country = T2.Code WHERE T2.Name = 'United States' ORDER BY T1.Capacity DESC LIMIT 1", "question": "What is the current situation of the nuclear power plant in the United States with the maximum capacity?"}
{"db_id": "GeoNuclearData", "predict_query": "SELECT T2.Capacity FROM nuclear_power_plants AS T1 INNER JOIN nuclear_power_plants AS T2 ON T1.Id = T2.Id WHERE T1.Status = 'Operational' AND T1.ReactorType = 'Pressurized Water Reactor' ORDER BY T2.Capacity DESC LIMIT 1", "question": "What is the maximum capacity of existing pressurized water reactor?"}
{"db_id": "GeoNuclearData", "predict_query": "SELECT T1.Country FROM nuclear_power_plants AS T1 INNER JOIN `nuclear_power_plants` AS T2 ON T1.Id = T2.Id WHERE T1.Status = 'Under Construction' GROUP BY T1.Country ORDER BY COUNT(T1.Id) DESC LIMIT 1;", "question": "Which nation has the most nuclear plants under construction?"}
{"db_id": "GeoNuclearData", "predict_query": "SELECT COUNT(T1.Country) FROM nuclear_power_plants AS T1 INNER JOIN nuclear_power_plants AS T2 ON T1.Id = T2.Id WHERE T1.Status = 'under_construction' AND T2.Status = 'under_construction' AND T1.ConstructionStartAt < T2.ConstructionStartAt", "question": "Which country has the most under constriction power plants to date?"}
{"db_id": "GeoNuclearData", "predict_query": "SELECT T1.Name, T1.Latitude, T1.Longitude FROM nuclear_power_plants AS T1 INNER JOIN nuclear_power_plants AS T2 ON T1.Id = T2.Id WHERE T1.ReactorType = 'BWR' AND T1.Id = 1", "question": "Where is the first BWR type power plant built and located?"}
{"db_id": "GeoNuclearData", "predict_query": "SELECT T1.Name FROM nuclear_power_plants AS T1 WHERE T1.OperationalTo IS NULL OR T1.OperationalTo > '2011-03-11'\nSQL", "question": "Which country lead the total capacity of the power plants it held?"}
{"db_id": "GeoNuclearData", "predict_query": "SELECT COUNT(Id) FROM nuclear_power_plants WHERE Country = 'United States' AND Capacity > 1000", "question": "What is the main source of the information for this table?"}
{"db_id": "GeoNuclearData", "predict_query": "SELECT", "question": "Which reactor type has the largest average capacity?"}
{"db_id": "GeoNuclearData", "predict_query": "SELECT T1.Country FROM nuclear_power_plants AS T1 WHERE T1.Name = 'Kostroma'", "question": "Which country is Kursk-1 in?"}
{"db_id": "GreaterManchesterCrime", "predict_query": "SELECT COUNT(CrimeID) FROM GreaterManchesterCrime WHERE Outcome = \"Male\"", "question": "Which streets in Manchester have the highest rates of crime?"}
{"db_id": "GreaterManchesterCrime", "predict_query": "SELECT Type FROM GreaterManchesterCrime WHERE Location = 'Manchester' AND strftime('%Y', CrimeTS", "question": "When was the last instance of a violent or sexual offense in Manchester?"}
{"db_id": "GreaterManchesterCrime", "predict_query": "SELECT CrimeTS FROM GreaterManchesterCrime WHERE Type = 'Violent or Sexual Offence' ORDER BY CrimeTS DESC LIMIT 1", "question": "Where was the last instance of a violent or sexual offense in Manchester?"}
{"db_id": "GreaterManchesterCrime", "predict_query": "SELECT LSOA FROM GreaterManchesterCrime GROUP BY LSOA ORDER BY COUNT(CrimeID) DESC LIMIT 1", "question": "Which neighborhood has the highest crime rate?"}
{"db_id": "GreaterManchesterCrime", "predict_query": "SELECT Type FROM GreaterManchesterCrime WHERE Location = \"Eden Street\"", "question": "What is the crime rate for Eden Street area?"}
{"db_id": "GreaterManchesterCrime", "predict_query": "SELECT Type FROM GreaterManchesterCrime WHERE LSOA = 'Fallowfield' GROUP BY Type ORDER BY COUNT(Type) DESC LIMIT 1", "question": "What is the most common type of crime?"}
{"db_id": "GreaterManchesterCrime", "predict_query": "SELECT COUNT(CrimeID) FROM GreaterManchesterCrime", "question": "Which neighborhood/area has the highest burglary rate?"}
{"db_id": "GreaterManchesterCrime", "predict_query": "SELECT T1.Type FROM GreaterManchesterCrime AS T1 INNER JOIN ( SELECT LSOA,", "question": "Which area do most of the crimes happen?"}
{"db_id": "GreaterManchesterCrime", "predict_query": "SELECT Type FROM GreaterManchesterCrime GROUP BY Type ORDER BY COUNT(Type) DESC LIMIT 1", "question": "Which Lower Layer Output Area do most of the crimes happen?"}
{"db_id": "GreaterManchesterCrime", "predict_query": "SELECT Type FROM GreaterManchesterCrime GROUP BY Type ORDER BY COUNT(Type) DESC LIMIT 1", "question": "What time do most of the crimes happen?"}
{"db_id": "GreaterManchesterCrime", "predict_query": "SELECT Outcome FROM GreaterManchesterCrime WHERE Location = \"street\"", "question": "What are the most likely outcome of the police investigation if the crime happen on \"street\"?"}
{"db_id": "GreaterManchesterCrime", "predict_query": "SELECT Type FROM GreaterManchesterCrime WHERE LSOA = 'Salford'", "question": "Which type of crime happen the most in Salford?"}
{"db_id": "GreaterManchesterCrime", "predict_query": "SELECT COUNT(CrimeID) FROM GreaterManchesterCrime", "question": "How many crimes are under investigation?"}
{"db_id": "GreaterManchesterCrime", "predict_query": "SELECT COUNT(Type) FROM GreaterManchesterCrime WHERE LSOA = 'Fallowfield'", "question": "How many crimes has been conducted?"}
{"db_id": "GreaterManchesterCrime", "predict_query": "SELECT LSOA FROM GreaterManchesterCrime WHERE CrimeTS LIKE '2014%' GROUP BY LSOA ORDER BY COUNT(CrimeID) DESC", "question": "What is the top 3 area of crime conducted?"}
{"db_id": "GreaterManchesterCrime", "predict_query": "SELECT Type FROM GreaterManchesterCrime WHERE Outcome = \"Investigation complete\"", "question": "Which type of crime has the highest rate of \"Investigation complete\"?"}
{"db_id": "GreaterManchesterCrime", "predict_query": "SELECT MIN(CrimeTS) FROM GreaterManchesterCrime", "question": "How many crimes were classified as \"Drugs\"?"}
{"db_id": "GreaterManchesterCrime", "predict_query": "SELECT Type FROM GreaterManchesterCrime WHERE LSOA = \"LSOA13AA\" GROUP BY Type ORDER BY COUNT(Type) DESC LIMIT 1", "question": "How many crimes are still \"Under investigation\" to date?"}
{"db_id": "GreaterManchesterCrime", "predict_query": "SELECT COUNT(CrimeID) FROM GreaterManchesterCrime WHERE Location = 'Cheetham Hill' AND STRFTIME('%Y', CrimeTS) = '2018'\nSQL", "question": "Which location has the top amount of \"Drugs\" crime conducted?"}
{"db_id": "GreaterManchesterCrime", "predict_query": "SELECT Type FROM GreaterManchesterCrime GROUP BY Type ORDER BY COUNT(Type) DESC LIMIT 1", "question": "Whatâ€™s the most common type of crime?"}
{"db_id": "GreaterManchesterCrime", "predict_query": "SELECT Type FROM GreaterManchesterCrime GROUP BY Type ORDER BY COUNT(CrimeID) DESC LIMIT 1", "question": "Where is the most dangerous area?"}
{"db_id": "GreaterManchesterCrime", "predict_query": "SELECT LSOA FROM GreaterManchesterCrime WHERE Outcome = 'Under investigation' ORDER BY LSOA DESC LIMIT 1", "question": "Where is the safest area?"}
{"db_id": "GreaterManchesterCrime", "predict_query": "SELECT Location FROM GreaterManchesterCrime GROUP BY Location ORDER BY COUNT(CrimeID) DESC LIMIT 1", "question": "Where is the place with the largest number of sexual offenses crime events?"}
{"db_id": "GreaterManchesterCrime", "predict_query": "SELECT T1.LSOA FROM GreaterManchesterCrime AS T1 GROUP BY T1.LSOA ORDER BY COUNT(T1.CrimeID) DESC LIMIT 1\nSQLResult", "question": "If it is possible to increase the number of police officers, which place is with the first priority?"}
{"db_id": "GreaterManchesterCrime", "predict_query": "SELECT Type FROM GreaterManchesterCrime WHERE Outcome = 'Prosecution'", "question": "Which type of crime has the most prosecution cases?"}
{"db_id": "GreaterManchesterCrime", "predict_query": "SELECT Type FROM GreaterManchesterCrime WHERE Outcome = 'Investigation complete'", "question": "Which type of crime has the most investigation complete cases?"}
{"db_id": "GreaterManchesterCrime", "predict_query": "SELECT T1.Type, T1.CrimeID FROM GreaterManchesterCrime AS T1 WHERE T1.Location = '6B:E2:54:C6:58:D2'", "question": "What is the result in case 6B:E2:54:C6:58:D2?"}
{"db_id": "Pesticide", "predict_query": "SELECT T1.concen FROM sampledata15 AS T1 INNER JOIN resultsdata15 AS T2 ON T1.sample_pk = T2.sample_pk WHERE T1.state = 'CA' AND", "question": "Provide the list of products with pesticide residues detected."}
{"db_id": "Pesticide", "predict_query": "SELECT T1.source_id FROM sampledata15 AS T1 GROUP BY", "question": "What is the most effective extraction method in terms of pesticide residues detection?"}
{"db_id": "Pesticide", "predict_query": "SELECT T2.commod FROM sampledata15 AS T2 GROUP BY", "question": "What is the most effective determinative method in terms of pesticide residues detection?"}
{"db_id": "Pesticide", "predict_query": "SELECT T1.lab FROM resultsdata15 AS T1 INNER JOIN sampledata15 AS T2 ON T1.sample_pk = T2.sample_pk WHERE T2.commodity = 'PEST' GROUP BY T1.lab ORDER BY COUNT(T1.lab) DESC LIMIT 5", "question": "What are the top 5 analyzing labs where pesticide residues detection was conducted?"}
{"db_id": "Pesticide", "predict_query": "SELECT commtype FROM sampledata15 WHERE commod = 'wheat' AND state = 'NY' ORDER BY conunit DESC LIMIT 1;", "question": "Wha commodity type of apple has the highest pesticide residues to consume?"}
{"db_id": "Pesticide", "predict_query": "SELECT T1.country FROM sampledata15 AS T1 INNER JOIN resultsdata15 AS T2 ON T1.sample_pk = T2.sample_pk GROUP BY T1.country ORDER BY COUNT(T2.pestcode) DESC", "question": "Rank the country of product origins in terms of pesticide residues detection."}
{"db_id": "Pesticide", "predict_query": "SELECT commtype FROM resultsdata15 ORDER BY concen DESC LIMIT 1;", "question": "What type of collection facility results in the most risky consumption in terms of pesticide residues detection?"}
{"db_id": "Pesticide", "predict_query": "SELECT T2.country FROM resultsdata15 AS T1 INNER JOIN sampledata15 AS T2 ON T1.sample_pk = T2.sample_pk WHERE T1.concen = 0", "question": "What are the country of product origins where pesticide residues were not detected?"}
{"db_id": "Pesticide", "predict_query": "SELECT commod, COUNT(sample_pk) FROM sample", "question": "how many entries are of each specific food?"}
{"db_id": "Pesticide", "predict_query": "SELECT commod FROM sampledata15 WHERE state = 'CA' AND year = '2015' GROUP BY commod ORDER BY COUNT(commod) DESC LIMIT 1", "question": "which pesticides are most used?"}
{"db_id": "Pesticide", "predict_query": "SELECT commod FROM resultsdata15 ORDER BY concen ASC LIMIT 1", "question": "which pesticides have been used the least?"}
{"db_id": "Pesticide", "predict_query": "SELECT", "question": "how was a specific sample tested?"}
{"db_id": "Pesticide", "predict_query": "SELECT T1.quantity FROM sampledata15 AS T1 WHERE T1.sample_pk = 1", "question": "in which state was a specific sample grown?"}
{"db_id": "Pesticide", "predict_query": "SELECT T1.state FROM sampledata15 AS T", "question": "in which state was a specific sample packed?"}
{"db_id": "Pesticide", "predict_query": "SELECT T1.quantity FROM sampledata15 AS T1 WHERE T1.sample_pk =", "question": "in which state was a specific sample distributed?"}
{"db_id": "Pesticide", "predict_query": "SELECT T1.sample_pk, T1.variety FROM sampledata15 AS T1 WHERE T1.source_id = 'I'", "question": "show all imported samples?"}
{"db_id": "Pesticide", "predict_query": "SELECT commod FROM sampledata15;", "question": "which foods are captured in the data set?"}
{"db_id": "Pesticide", "predict_query": "SELECT disttype FROM sampledata15 WHERE sample_pk = 1", "question": "how many samples have unknown countries of origin?"}
{"db_id": "Pesticide", "predict_query": "SELECT T1.commod, T1.quantity FROM sampledata15 AS T1 INNER JOIN resultsdata15 AS T2 ON T1.sample_pk = T2.sample_pk WHERE T1.year = '2015' ORDER BY T2.concen DESC LIMIT 10", "question": "Which are the top 10 commodities that have the highest residue during 2015?"}
{"db_id": "Pesticide", "predict_query": "SELECT T2.pestcode FROM resultsdata15 AS T2 INNER JOIN sampledata15 AS T1 ON T2.sample_pk = T1.sample", "question": "Name some imported commodities that are not found in the US."}
{"db_id": "Pesticide", "predict_query": "SELECT T1.state, AVG(T2.concen) FROM sampledata15 AS T1 INNER JOIN resultsdata15 AS T2 ON T1.sample_pk = T2.sample_pk GROUP BY T1.state", "question": "Tell me the average pesticide residue for each state in the US where food is grown."}
{"db_id": "Pesticide", "predict_query": "SELECT T1.variety FROM sampledata15 AS T1 INNER JOIN resultsdata15 AS T2 ON T1.sample_pk = T2.sample_pk WHERE T2.commod = 'AP' AND T2.concen > 0 ORDER BY T2.concen DESC LIMIT 10", "question": "Which varieties of apple typically have higher pesticide levels?"}
{"db_id": "Pesticide", "predict_query": "SELECT commod, month FROM sampledata15 WHERE quantity > 0 ORDER BY month, concen DESC LIMIT 1", "question": "Which commodities have the pesticides concentration much higher than their limit for detection?"}
{"db_id": "Pesticide", "predict_query": "SELECT T1.lab FROM resultsdata15 AS T1 INNER JOIN sampledata15 AS T2 ON T1.sample_pk = T2.sample_pk GROUP BY T1.lab ORDER BY COUNT(T1.sample_pk) DESC LIMIT 5", "question": "Name top 5 labs with the maximum number of testing."}
{"db_id": "Pesticide", "predict_query": "SELECT T1.country FROM sampledata15 AS T1 INNER JOIN resultsdata15 AS T2 ON T1.sample_pk = T2.sample_pk WHERE T2.concen = ( SELECT MIN(concen) FROM resultsdata15 ) ORDER BY T1.country", "question": "Which country is the safest in terms of the pesticide concentration found in imported foods?"}
{"db_id": "Pesticide", "predict_query": "SELECT T1.commod FROM sampledata15 AS T1 GROUP BY T1.commod ORDER BY COUNT(T1.commod) DESC LIMIT 1;", "question": "Which is the most popular state in the US in terms of commodities distribution?"}
{"db_id": "Pesticide", "predict_query": "SELECT commod, COUNT(sample_pk) FROM resultsdata15 JOIN sampledata15 ON resultsdata15.sample_pk = sampledata15.sample_pk WHERE sampledata15.state = 'CA' GROUP BY commod ORDER BY COUNT(sample_pk) DESC", "question": "What is the maximum pesticide concentration ever found in a commodity?"}
{"db_id": "Pesticide", "predict_query": "SELECT T1.site FROM sampledata15 AS T1 WHERE T1.sample_pk", "question": "When is sample 3763 collected?"}
{"db_id": "Pesticide", "predict_query": "SELECT SUM(T1.quantity) FROM sampledata15 AS T", "question": "Which state has the most apple collected?"}
{"db_id": "Pesticide", "predict_query": "SELECT T1.state FROM sampledata15 AS T1 INNER JOIN resultsdata15 AS T2 ON T1.sample_pk = T2.sample_pk WHERE T2.commod = 'AP' AND T2.commtype = 'AP' GROUP BY T1.state ORDER BY SUM(T1.quantity) DESC LIMIT 1", "question": "Which state has grow the most apples?"}
{"db_id": "Pesticide", "predict_query": "SELECT COUNT(sample_pk) FROM sampledata15 WHERE state = 'CA'", "question": "How many class of products are there?"}
{"db_id": "Pesticide", "predict_query": "SELECT T1.origin FROM sampledata15 AS T1 WHERE T1.sample_pk = 3763", "question": "what's the 4 digit collection code of sample 3763?"}
{"db_id": "Pesticide", "predict_query": "SELECT T1.origin FROM sampledata15 AS T1 WHERE T1.sample_pk = 6480", "question": "If sample 6480 is imported, which country is it originally from?"}
{"db_id": "Pesticide", "predict_query": "SELECT T1.state FROM sampledata15 AS T1 INNER JOIN resultsdata15 AS T2 ON T1.sample_pk = T2.sample_pk WHERE T", "question": "How many number of units are there in sample 9628?"}
{"db_id": "Pesticide", "predict_query": "SELECT T2.pestcode FROM sampledata15 AS T1 INNER JOIN resultsdata15 AS T2 ON T1.sample_pk = T2", "question": "What's the code for test for sample 7498?"}
{"db_id": "Pesticide", "predict_query": "SELECT T1.sample_pk FROM sampledata15 AS T1 WHERE T", "question": "What's the code for confirmation for the latest sample?"}
{"db_id": "Pesticide", "predict_query": "SELECT lab FROM resultsdata15 GROUP BY lab ORDER BY COUNT(sample_pk) DESC LIMIT 1", "question": "Which lab has analyzed the most sample?"}
{"db_id": "Pesticide", "predict_query": "SELECT MAX(concen) FROM resultsdata15", "question": "What's the majority of test classification result?"}
{"db_id": "Pesticide", "predict_query": "SELECT commod FROM resultsdata15 WHERE sample_pk = 3879", "question": "What's the unit of measure for sample 3879?"}
{"db_id": "Pesticide", "predict_query": "SELECT conunit FROM resultsdata15 WHERE commod = 'PO'", "question": "What's the unit of measure used for the product commodity code PO?"}
{"db_id": "Pesticide", "predict_query": "SELECT T1.concen FROM resultsdata15 AS T1 INNER JOIN sample", "question": "What's the mean result finding for product AP?"}
{"db_id": "Pesticide", "predict_query": "SELECT T1.extract FROM resultsdata15 AS T1 INNER JOIN sampledata15 AS T2 ON T1.sample_pk = T2", "question": "What's the most common extraction method?"}
{"db_id": "Pesticide", "predict_query": "SELECT commod, SUM(quantity) FROM sample", "question": "Which lab conduct of most number of tests?"}
{"db_id": "Pesticide", "predict_query": "SELECT T", "question": "Which lab is used for testing for prodict AP?"}
{"db_id": "Pesticide", "predict_query": "SELECT variety, AVG(concen) FROM resultsdata15 GROUP BY variety ORDER BY AVG(concen) DESC LIMIT 10", "question": "How many samples come from other countries?"}
{"db_id": "Pesticide", "predict_query": "SELECT commod FROM sampledata15 WHERE state = 'CA' GROUP BY commod ORDER BY COUNT(commod) DESC LIMIT 1", "question": "What kind of food has been tested 'detect' most?"}
{"db_id": "Pesticide", "predict_query": "SELECT T1.state, COUNT(T1.state) FROM sampledata15 AS T1 INNER JOIN resultsdata15 AS T2 ON T1.sample_pk = T2.sample_pk WHERE T2.commtype = 'ORG' GROUP BY T1.state ORDER BY COUNT(T1.state) DESC LIMIT 1", "question": "Which state produce the most organic food?"}
{"db_id": "Pesticide", "predict_query": "SELECT T", "question": "Where do the US import the most food ?"}
{"db_id": "Pesticide", "predict_query": "SELECT state, COUNT(sample_pk) FROM sampledata15 GROUP BY state ORDER BY COUNT(sample_pk) DESC LIMIT 1", "question": "What kind of food has been test the most?"}
{"db_id": "Pesticide", "predict_query": "SELECT commtype FROM resultsdata15 WHERE extract = 'easy'", "question": "Which kind of pesticide is the easiest to be tested?"}
{"db_id": "StudentMathScore", "predict_query": "SELECT T1.state_code FROM FINREV_FED_17 AS T1 INNER JOIN FINREV_FED_KEY_17 AS T2 ON T1.state_code = T2.State_Code ORDER BY T1.t_fed_rev DESC LIMIT 5", "question": "What are the top five states in descending order in terms of revenue provided to school districts?"}
{"db_id": "StudentMathScore", "predict_query": "SELECT T1.state_code,  T1.state FROM FINREV_FED_KEY_17 AS T1 INNER JOIN FINREV_FED_17 AS T2 ON T1.state_code = T2.state_code GROUP BY T1.state ORDER BY COUNT(T2.state_code) DESC LIMIT 5", "question": "What are the top five states in descending order in terms of the number of school districts per state?"}
{"db_id": "StudentMathScore", "predict_query": "SELECT state FROM NDECoreExcel_Math_Grade8 WHERE year = 2013 ORDER BY average_scale_score DESC LIMIT 1", "question": "For each state, when was the last time the average score data was collected?"}
{"db_id": "StudentMathScore", "predict_query": "SELECT T2.t_fed_rev FROM FINREV_FED_KEY_17 AS T1 INNER JOIN FINREV_FED_17 AS T2 ON T1.state_code = T2.state_code WHERE T1.State = 'Virginia' AND T2.school_district = 'Faifaix County'", "question": "How much federal funding did Faifaix County, VA schools receive in all forms?"}
{"db_id": "StudentMathScore", "predict_query": "SELECT T1.average_scale_score FROM NDECoreExcel_Math_Grade8 AS T1 WHERE T1.state = 'California' AND T1.year = 201", "question": "How much did the federal government spend in No Child Left Behind funding in 2017?"}
{"db_id": "StudentMathScore", "predict_query": "SELECT T1.school_district FROM FINREV_FED_17 AS T1 INNER JOIN FINREV_FED_KEY_17 AS T2 ON T1.state_code = T2.State_Code WHERE T2.State = 'Wisconsin' GROUP BY T1.school_district", "question": "How many Wisconsin school districts receive federal funding?"}
{"db_id": "StudentMathScore", "predict_query": "SELECT T2.state FROM NDECoreExcel_Math_Grade8 AS T1 INNER JOIN FINREV_FED_17 AS T2 ON T1.state = T2.state_code ORDER BY T1.average_scale_score DESC LIMIT 1", "question": "Which state performs best on the NAEP 8th grade math test?"}
{"db_id": "StudentMathScore", "predict_query": "SELECT T2.state FROM FINREV_FED_17 AS T1 INNER JOIN NDECoreExcel_Math_Grade8 AS T2 ON T1.state_code = T2.state ORDER BY T2.average_scale_score DESC LIMIT 1", "question": "Which federally-funded state performs worst on the NAEP math exam for eighth graders?"}
{"db_id": "StudentMathScore", "predict_query": "SELECT T1.average_scale_score FROM NDE", "question": "What is the average NAEP math score for all eighth graders in federally-funded states?"}
{"db_id": "StudentMathScore", "predict_query": "SELECT T1.school_district, T1.t_fed_rev FROM FINREV_FED_17 AS T1 INNER JOIN FINREV_FED_KEY_17 AS T2 ON T1.state_code = T2.State_Code WHERE T2.State = 'Wisconsin' ORDER BY T1.t_fed_rev DESC LIMIT 1", "question": "Which school district receive the most of federal revenue through state in Wisconsin?"}
{"db_id": "StudentMathScore", "predict_query": "SELECT T1.c25 FROM FINREV_FED_17 AS T1 INNER JOIN FINREV_FED", "question": "What is the average Title 1 fund in Virginia?"}
{"db_id": "StudentMathScore", "predict_query": "SELECT T1.state, T2.t_fed_rev FROM NDECoreExcel_Math_Grade8 AS T1 INNER JOIN FINREV_FED_17 AS T2 ON T1.state = T2.school_district ORDER BY T1.average_scale_score DESC LIMIT 10", "question": "What are the top 10 states that have the highest average math score and federal revenue they got through different categories?"}
{"db_id": "StudentMathScore", "predict_query": "SELECT T1.state, T1.average_scale_score, T2.t_fed_rev FROM NDECoreExcel_Math_Grade8 AS T1 INNER JOIN FINREV_FED_17 AS T2 ON T1.state = T2.school_district ORDER BY T2.t_fed_rev DESC", "question": "What are the schools with highest federal revenue in each federal revenue categories and what's their state average scores?"}
{"db_id": "StudentMathScore", "predict_query": "SELECT T1.state_code FROM FINREV_FED_17 AS T1 ORDER", "question": "State with highest average math score"}
{"db_id": "StudentMathScore", "predict_query": "SELECT T1.state, T1.all_students, T2.t_fed_rev, T2.yr_data, T1.average_scale_score FROM NDECoreExcel_Math_Grade8 AS T1 INNER JOIN FINREV_FED_17 AS T2 ON T1.state = T2.school_district ORDER BY (T2.t_fed_rev / T1.average_scale_score) DESC LIMIT 1", "question": "School with highest ratio of total revenue and average scores"}
{"db_id": "StudentMathScore", "predict_query": "SELECT T1.state, T1.average_scale_score FROM NDECoreExcel_Math_G", "question": "Which state spent the most revenue towards schools and whats the state average score"}
{"db_id": "StudentMathScore", "predict_query": "SELECT T1.school_district,  T1.t_fed_rev / T2.average_scale_score FROM FINREV_FED_17 AS T1 INNER JOIN NDECoreExcel_Math_Grade8 AS T2 ON T1.state_code = T2.state WHERE T2.year = 2017 ORDER BY T1.t_fed_rev / T2.average_scale_score ASC LIMIT 1", "question": "School with lowest ratio of total revenue and average scores"}
{"db_id": "StudentMathScore", "predict_query": "SELECT T2.state, MIN(T1.t_fed_rev) FROM FINREV_FED_17 AS T1 INNER JOIN NDECoreExcel_Math_Grade8 AS T2 ON T1.state_code = T2.state GROUP BY T2.state", "question": "Which state spent the least revenue towards schools and whats the state average score"}
{"db_id": "StudentMathScore", "predict_query": "SELECT T1.average_scale_score FROM NDECoreExcel_Math_Grade8 AS T1 WHERE T1.state = 'California' AND T1.year =", "question": "Which state has the highest average score in math exam?"}
{"db_id": "StudentMathScore", "predict_query": "SELECT T1.average_scale_score FROM NDECore", "question": "What is the average match score of CA?"}
{"db_id": "StudentMathScore", "predict_query": "SELECT AVG(average_scale_score) FROM NDECoreExcel_Math_Grade8 WHERE year = 2015 AND state = 'Indiana'", "question": "How many unique school districts in Indiana?"}
{"db_id": "StudentMathScore", "predict_query": "SELECT State_Code FROM FINREV_FED_KEY_17 WHERE State = 'MD'", "question": "What is the state code of VA?"}
{"db_id": "StudentMathScore", "predict_query": "SELECT T1.state FROM", "question": "Which state get the highest revenue?"}
{"db_id": "StudentMathScore", "predict_query": "SELECT T1.t_fed_rev, T1.c14 FROM FINREV_FED_17 AS T1 INNER JOIN FINREV_FED_KEY_17 AS T2 ON T1.state_code = T2.State_Code WHERE T2.State = 'Colorado'", "question": "How much funding does Colorado schools receive from Title 1 and the Child Nutrition program respectively?"}
{"db_id": "StudentMathScore", "predict_query": "SELECT T1.average_scale_score FROM NDECoreExcel_Math_Grade8 AS T1 WHERE T1.state = 'Ohio' AND T1", "question": "How much federal funding does Pecatonia Area School district get?"}
{"db_id": "StudentMathScore", "predict_query": "SELECT average_scale_score FROM NDECoreExcel_Math_Grade8 WHERE state = 'North Carolina'", "question": "What are the student scores on the NAEP math exam for 8th graders in North Carolina and South Carolina?"}
{"db_id": "StudentMathScore", "predict_query": "SELECT DISTINCT T2.state, T2.average_scale_score FROM NDECoreExcel_Math_Grade8 AS T1 INNER JOIN FINREV_FED_17 AS T2 ON T2.state_code = T1.state WHERE T1.state IN ('NC', 'NY')", "question": "What are the averge score of students in NC and in NY?"}
{"db_id": "StudentMathScore", "predict_query": "SELECT COUNT(T1.idc", "question": "How many schools get higher revenue via Child Nutrition A than revenue via child left school behind act?"}
{"db_id": "TheHistoryofBaseball", "predict_query": "SELECT T1", "question": "Which states have produced the largest number of candidates inducted into the hall of fame?"}
{"db_id": "TheHistoryofBaseball", "predict_query": "SELECT AVG(T1.salary) FROM salary AS T1 WHERE T1.league", "question": "What is the top league that pays the most to their players?"}
{"db_id": "TheHistoryofBaseball", "predict_query": "SELECT T", "question": "Which leage have the largest difference in pay among their team players?"}
{"db_id": "TheHistoryofBaseball", "predict_query": "SELECT T1.team_id, AVG(T1.salary) FROM salary AS T1 GROUP BY T1.team_id ORDER BY AVG(T", "question": "What is the average pay for players inducted into the hall of fame?"}
{"db_id": "TheHistoryofBaseball", "predict_query": "SELECT COUNT(T1.player_id) FROM hall_of_fame AS T", "question": "What is the average pay for players not inducted into the hall of fame?"}
{"db_id": "TheHistoryofBaseball", "predict_query": "SELECT T1.team_id FROM salary AS T1 INNER JOIN player_award_vote AS", "question": "Which leage has higher average salaries for player?"}
{"db_id": "TheHistoryofBaseball", "predict_query": "SELECT COUNT(player_id) FROM player WHERE birth_year = '1980'", "question": "Which Country are most baseball players from?"}
{"db_id": "TheHistoryofBaseball", "predict_query": "SELECT COUNT(DISTINCT award_id) FROM player_award WHERE player_id = '1'", "question": "Who is the youngest baseball player so far?"}
{"db_id": "TheHistoryofBaseball", "predict_query": "SELECT T1.team_id, SUM(T1.salary) FROM salary AS T1 WHERE T1.year = 2000 GROUP BY T1.team_id", "question": "Which league gets paid the most?"}
{"db_id": "TheHistoryofBaseball", "predict_query": "SELECT SUM(T1.points_won) FROM player_award_vote AS T1 INNER JOIN player_award AS T2 ON T1.player_id = T2.player_id WHERE T2.year = 1990 AND T2.league_id = 'NL' AND T2.award_id = ( SELECT T3.award_id FROM player_award AS T3 WHERE T3.year = 1990 AND T3.league_id = 'NL' GROUP BY T3.award_id ORDER BY", "question": "How much points were received by the NL league's most valuable player winner in 1990?"}
{"db_id": "TheHistoryofBaseball", "predict_query": "SELECT T1.name_first, T1.name_last FROM player AS T1 INNER JOIN player_award AS T2 ON T1.player_id = T", "question": "What is the average age of players from USA?"}
{"db_id": "TheHistoryofBaseball", "predict_query": "SELECT (strftime('%J',strftime('%Y', t1.death_year) || '-' || strftime('%m', t1.death_month) || '-' || strftime('%d', t1.death_day))) - (strftime('%J',strftime('%Y', t1.birth_year) || '-' || strftime('%m', t1.birth_month) || '-' || strftime('%d', t1.birth_day))) AS days FROM player AS t1", "question": "What is the average lifespan of a baseball player?"}
{"db_id": "TheHistoryofBaseball", "predict_query": "SELECT DISTINCT T1.ballots FROM hall_of_fame AS T1 INNER JOIN player_award AS T2 ON T1.player_id = T2.player_id WHERE T2.year = 2000 AND T1.inducted = 'N' GROUP BY T1.ballots ORDER BY COUNT(T1.ballots) DESC LIMIT 1", "question": "Which is the most popular voting method for Hall of Fame in 2000?"}
{"db_id": "TheHistoryofBaseball", "predict_query": "SELECT T1.name_first, T1.name_last FROM player AS T1 INNER JOIN player_award AS T2 ON T1.player_id = T2.player_id WHERE T2.award_id = 'MVP'", "question": "How many players weigh over 200 pounds?"}
{"db_id": "TheHistoryofBaseball", "predict_query": "SELECT T1", "question": "Who is the winner of Rookie of the Year in 2010?"}
{"db_id": "TheHistoryofBaseball", "predict_query": "", "question": "Who is the highest paid player since 2010?"}
{"db_id": "TheHistoryofBaseball", "predict_query": "SELECT T1.player_id FROM hall_of_fame AS T1", "question": "What are the salaries of players who have ever enter hall of fame?"}
{"db_id": "TheHistoryofBaseball", "predict_query": "SELECT DISTINCT yearid FROM hall_of_fame WHERE yearid >= 1871 AND inducted = 1", "question": "What are the minimum votes needed to enter hall of fame for each year since 1871?"}
{"db_id": "TheHistoryofBaseball", "predict_query": "SELECT salary FROM salary WHERE league_id = 'American League'", "question": "What are the salaries in National League?"}
{"db_id": "TheHistoryofBaseball", "predict_query": "SELECT T1.player_id FROM player_award AS T1 WHERE T1.year = 2010", "question": "What are the salaries in American League?"}
{"db_id": "TheHistoryofBaseball", "predict_query": "SELECT AVG(T1.weight) FROM player AS T1 INNER JOIN", "question": "Which birth place has the most player awards?"}
{"db_id": "TheHistoryofBaseball", "predict_query": "SELECT T2.birth_country, T2.birth_state, T2.birth_city FROM hall_of_fame AS T1 INNER JOIN player AS T2 ON T1.player_id = T2.player_id WHERE T1.votedby = 'BBWAA' AND CAST(REPLACE(T1.yearid, '.', '') AS INTEGER) >= 1871", "question": "What are the birth places of players won on hall of fame since 1871?"}
{"db_id": "TheHistoryofBaseball", "predict_query": "SELECT T1.player_id FROM salary AS T1 INNER JOIN player_award AS T2 ON T1.player_id = T2.player_id", "question": "Which award has the highest player's salary?"}
{"db_id": "TheHistoryofBaseball", "predict_query": "SELECT yearid FROM hall_of_fame WHERE votedby = 'Special'", "question": "What were the years when any special elections happened in hall of fame?"}
{"db_id": "TheHistoryofBaseball", "predict_query": "SELECT COUNT(DISTINCT T1.player_id) AS cnt, T2.country FROM player_award AS T1 INNER JOIN player AS T2 ON T1.player_id = T2.player_id GROUP BY T2.country ORDER BY cnt DESC LIMIT 10;", "question": "Top 10 countries with the most hall of fame players"}
{"db_id": "TheHistoryofBaseball", "predict_query": "SELECT T1.player_id, T1.year, T2.player_id, T2.award_id, T1.year - T2.year AS age FROM player_award AS T1 INNER JOIN player_award_vote AS T2 ON T1.player_id = T2.player_id WHERE T1.year - T2.year = ( SELECT MIN(T1.year - T2.year) FROM player_award AS T1 INNER JOIN player_award_vote AS T2 ON T1.player_id = T2", "question": "For every award, who is the youngest winner?"}
{"db_id": "TheHistoryofBaseball", "predict_query": "SELECT award_id, MAX(year) AS max_year FROM player_award GROUP BY award_id", "question": "For every award, who is the oldest winner?"}
{"db_id": "TheHistoryofBaseball", "predict_query": "SELECT T1.league_id,  COUNT(T2.player_id) FROM league AS T1 INNER JOIN player_award AS T2 ON T1.league_id  =  T2.league_id GROUP BY T1.league_id ORDER BY COUNT(T2.player_id) DESC LIMIT 10", "question": "Top 10 teams with the most hall of fame players"}
{"db_id": "TheHistoryofBaseball", "predict_query": "SELECT COUNT(T1.player_id) FROM player_award AS T1 INNER", "question": "Average lifespan of hall of fame players"}
{"db_id": "TheHistoryofBaseball", "predict_query": "SELECT T1.position, AVG(T2.weight) FROM player T1 INNER JOIN player_award T2 ON T1.player_id = T2.player_id GROUP BY T1.position", "question": "For award winners, what's average weight for each position"}
{"db_id": "TheHistoryofBaseball", "predict_query": "SELECT T1.category FROM hall_of_fame AS T1 INNER JOIN player_award AS T2 ON T1.player_id = T2.player_id WHERE T2.tie = 't' GROUP BY T1.category ORDER BY COUNT(T1.player_id) DESC LIMIT 1", "question": "For award winners, which position that has the most hall of fame players?"}
{"db_id": "TheHistoryofBaseball", "predict_query": "SELECT T1.player_id, T1.points", "question": "Which player get the highest score in 1971?"}
{"db_id": "TheHistoryofBaseball", "predict_query": "SELECT T2.month FROM hall_of_fame AS T1 INNER JOIN player AS", "question": "Which month that players were born has the highest likelihood to be elected as hall of fame?"}
{"db_id": "TheHistoryofBaseball", "predict_query": "SELECT T2.league_id FROM", "question": "Which league has the most player awarded in 2006?"}
{"db_id": "TheHistoryofBaseball", "predict_query": "SELECT T2.league_id FROM player AS T1 INNER JOIN player_award", "question": "What defense position the player ID willite01 is?"}
{"db_id": "TheHistoryofBaseball", "predict_query": "SELECT COUNT(player_id) FROM player_award WHERE points_won > 10", "question": "How many players were awarded more than ten times?"}
{"db_id": "TheHistoryofBaseball", "predict_query": "SELECT T2.name_first, T2.name_last FROM player_award_vote AS T1 INNER JOIN player AS T2 ON T1.player", "question": "Which city the most players were born?"}
{"db_id": "TheHistoryofBaseball", "predict_query": "SELECT COUNT(T2.player_id) FROM player_award AS T1 INNER", "question": "What is the average weight of players who were awarded third-base man in TSN all-star award?"}
{"db_id": "TheHistoryofBaseball", "predict_query": "SELECT DISTINCT T1.player_id FROM salary AS T1 INNER JOIN player_award_vote AS T2 ON T1.player_id = T2.player_id WHERE T1.year = 2015 AND T1.salary = ( SELECT MAX(T1.salary) FROM salary AS T1 INNER JOIN player_award_vote AS T2 ON T1.player_id = T2.player_id WHERE T1.year = 2015 )", "question": "Who is the player had the highest salary in 2015?"}
{"db_id": "USWildFires", "predict_query": "SELECT FIRE_YEAR, AVG(FIRE_SIZE) AS average FROM Fires GROUP BY FIRE_YEAR ORDER BY FIRE_YEAR;", "question": "Which year has the most wildfires?"}
{"db_id": "USWildFires", "predict_query": "SELECT \n    DISCOVERY_TIME\nFROM \n    Fires\nGROUP BY \n    DISCOVERY_TIME\nORDER BY \n    COUNT(*) DESC", "question": "Which time of day has the most wildfires?"}
{"db_id": "USWildFires", "predict_query": "SELECT STAT_CAUSE_DESCR FROM Fires GROUP BY STAT_CAUSE_DESCR ORDER BY COUNT(STAT_CAUSE_DESCR) DESC LIMIT 1", "question": "What are the most common causes of the wildfires?"}
{"db_id": "USWildFires", "predict_query": "SELECT AVG(CAST(SUBSTR(CONT_TIME, 1, 2) AS REAL)", "question": "How long does it take to control wildfires on average?"}
{"db_id": "USWildFires", "predict_query": "SELECT COUNT(*) FROM Fires WHERE STATE = 'Arizona';", "question": "Which state has the most wildfires?"}
{"db_id": "USWildFires", "predict_query": "SELECT STAT_CAUSE_DESCR FROM Fires WHERE STATE = 'California' GROUP BY STAT_CAUSE_DESCR ORDER BY COUNT(STAT_CAUSE_DESCR) DESC LIMIT 1", "question": "Which state has the largest wildfire?"}
{"db_id": "USWildFires", "predict_query": "SELECT T2.OWNER_CODE, T2.OWNER_DESCR, T1.LATITUDE, T1.LONGITUDE FROM Fires AS T1 INNER JOIN Owners AS T2 ON T1.OWNER_CODE = T2.OWNER_CODE GROUP BY T2.OWNER_CODE ORDER BY COUNT(T2.OWNER_CODE) DESC LIMIT 1", "question": "What enrity is reponsible for managing the land at the point of origin of the most wildfires?"}
{"db_id": "USWildFires", "predict_query": "SELECT STAT_CAUSE_DESCR FROM Fires WHERE FIRE_YEAR BETWEEN 2000", "question": "What was the most common cause of fire between 2000 and 2005?"}
{"db_id": "USWildFires", "predict_query": "SELECT AVG(T1.FIRE_SIZE) FROM Fires AS T1 WHERE T1.FIRE_YEAR = 2006 AND T1.STAT_CAUSE_CODE =", "question": "How many fires were more than 100 acres in 2006?"}
{"db_id": "USWildFires", "predict_query": "SELECT T1.STATE, COUNT(T1.STATE) FROM Fires AS T1 GROUP BY T1.STATE HAVING T1.FIRE_YEAR = 2001 ORDER BY COUNT(T1.STATE) DESC LIMIT 1", "question": "Which states had the largest number of fires in 2001?"}
{"db_id": "USWildFires", "predict_query": "SELECT STAT_CAUSE_DESCR FROM Fires WHERE STATE = 'California' AND FIRE_YEAR = 2015 AND STAT_CAUSE_CODE = 9\nSQL", "question": "How many acres burned in fires in California each year between 2000 and 2005?"}
{"db_id": "USWildFires", "predict_query": "SELECT COUNTY FROM Fires GROUP BY COUNTY ORDER BY COUNT(COUNTY) DESC LIMIT 1", "question": "Which year had the largest number of fires?"}
{"db_id": "USWildFires", "predict_query": "SELECT", "question": "Show all fires caused by campfires in Texas."}
{"db_id": "USWildFires", "predict_query": "SELECT T1.OWNER_DESCR FROM Fires AS T1 INNER JOIN FIPS_NAME AS T2 ON T1.FIPS_NAME = T2.FIPS_NAME WHERE T1.FIRE_YEAR = 2015 AND T1.STATE = 'OR' AND T1.FIRE_SIZE = ( SELECT MAX(FIRE_SIZE) FROM Fires AS T3 WHERE T3.FIRE_YEAR = 2015 AND T3.STATE = 'OR' )", "question": "Who was responsible for the land of the biggest fire in Oregon in 2015?"}
{"db_id": "USWildFires", "predict_query": "SELECT T2.COUNTY FROM Fires AS T1 INNER JOIN FIPS_NAME AS T2 ON T1.FIPS_NAME = T2.FIPS_NAME WHERE T1.FIRE_YEAR = 2012 AND T2.STATE = 'Washington'", "question": "Which counties in Washington had fires in 2012?"}
{"db_id": "USWildFires", "predict_query": "SELECT SUM(T1.FIRE_SIZE) FROM Fires AS T1 WHERE T1.FIRE_YEAR = 2015\nSQLResult", "question": "How many arson-related fires were there in 2010?"}
{"db_id": "USWildFires", "predict_query": "SELECT AVG(LATITUDE) FROM Fires WHERE FIRE_YEAR = 2018", "question": "How many years of data are recorded in this database?"}
{"db_id": "USWildFires", "predict_query": "SELECT COUNT(*) FROM Fires WHERE FIRE_YEAR = 2001", "question": "Average date of year that fire was discovered from 2000~2004?"}
{"db_id": "USWildFires", "predict_query": "SELECT STAT_CAUSE_CODE FROM Fires", "question": "Whatâ€™s the most common cause of the fire (code) in the database?"}
{"db_id": "USWildFires", "predict_query": "SELECT FIRE_YEAR FROM Fires ORDER BY FIRE_SIZE DESC LIMIT 1", "question": "Whatâ€™s the year that have the largest acres in the fire area?"}
{"db_id": "USWildFires", "predict_query": "SELECT MIN(FIRE_SIZE) FROM Fires WHERE COUNTY = 'Santa Clara'", "question": "How many missing / not specified name of the owner are there in the database?"}
{"db_id": "USWildFires", "predict_query": "SELECT AVG(T1.LATITUDE) FROM Fires AS T1 WHERE T", "question": "Whatâ€™s the county that contains most recorded burns in 2000 according to the database?"}
{"db_id": "USWildFires", "predict_query": "SELECT COUNT (DISTINCT FIRE_YEAR) FROM Fires\nSQLQuery:  SELECT COUNT (DISTINCT DISCOVERY_DATE) FROM Fires\nSQLQuery:  SELECT COUNT (DISTINCT STAT_CAUSE_CODE) FROM Fires\nSQLQuery:  SELECT COUNT (DISTINCT LATITUDE) FROM Fires", "question": "How many distinct cause of the fire descriptions are there in the database?"}
{"db_id": "USWildFires", "predict_query": "SELECT SUM(T2.FIRE_SIZE) FROM Fires AS T1 INNER JOIN Fires", "question": "Sum of the acres burned in NC state in 2006?"}
{"db_id": "USWildFires", "predict_query": "SELECT T1.STAT_CAUSE_DESCR FROM Fires AS T1 INNER JOIN FIPS_NAME AS T2 ON T1.FIPS_NAME = T2.FIPS_NAME WHERE T2.FIPS_NAME = 'UT' AND T1.FIRE_YEAR = 1997 AND T1.FIRE_SIZE = ( SELECT MAX(FIRE_SIZE) FROM Fires WHERE FIRE_YEAR = 1997 AND FIPS_NAME = 'UT' )", "question": "What was the cause of the largest wildfire in Utah in the year 1997?"}
{"db_id": "USWildFires", "predict_query": "SELECT FIRE_SIZE, DISCOVERY_DATE FROM Fires WHERE FIRE_YEAR = 2017 AND COUNTY = 'Gloucester'", "question": "How many wildfires in Gloucester county have been larger than 10 acres?"}
{"db_id": "USWildFires", "predict_query": "SELECT AVG(FIRE_SIZE) FROM Fires WHERE STATE = 'CA'", "question": "Which state experiences the most wildfires?"}
{"db_id": "USWildFires", "predict_query": "SELECT T1.FIRE_SIZE FROM Fires AS T1 ORDER BY T1.FIRE_SIZE DESC LIMIT 1", "question": "What is the leading cause of wildfires?"}
{"db_id": "USWildFires", "predict_query": "SELECT STATE, OWNER_DESCR FROM Fires GROUP BY OWNER_DESCR ORDER BY COUNT(*) DESC LIMIT 1", "question": "On what type of land (public or private) do more wildfires occur?"}
{"db_id": "USWildFires", "predict_query": "SELECT COUNT(*) FROM Fires WHERE STAT_CAUSE_DESCR = 'Lightning' AND FIRE_YEAR = 2015", "question": "In 2014, how many wildfires were the result of mismanaged campfires?"}
{"db_id": "USWildFires", "predict_query": "SELECT STAT_CAUSE_DESCR FROM Fires WHERE STATE = 'California' AND FIRE_YEAR BETWEEN 2010 AND 2015 GROUP", "question": "How many total acres of land in Texas have seen a wildfire in the decade between 2000-2010?"}
{"db_id": "USWildFires", "predict_query": "SELECT STAT_CAUSE_DESCR FROM Fires WHERE STATE = 'California' AND FIRE_YEAR = 2018 GROUP BY STAT_CAUSE_DESCR ORDER BY COUNT(*) DESC LIMIT 10\nSQL", "question": "Which state has the most number of fires being recorded?"}
{"db_id": "USWildFires", "predict_query": "SELECT STAT_CAUSE_CODE FROM Fires GROUP BY STAT_CAUSE_CODE ORDER BY COUNT(STAT_CAUSE_CODE) DESC LIMIT 1", "question": "What is the most common reason that causes a fire?"}
{"db_id": "USWildFires", "predict_query": "SELECT SUM(FIRE_SIZE) FROM Fires WHERE FIRE_YEAR = 2018", "question": "What is the total area that has been burned until now?"}
{"db_id": "USWildFires", "predict_query": "SELECT COUNTY, COUNT(*) FROM Fires WHERE FIRE_YEAR = 2000 GROUP BY COUNTY ORDER BY COUNT(*) DESC LIMIT 5", "question": "How many acres burned in 2000s and 1990s?"}
{"db_id": "USWildFires", "predict_query": "SELECT T1.FIRE_SIZE FROM Fires AS T1 WHERE T1.FIRE_YEAR = 2013", "question": "How many fire cases occur on the land without any owner?"}
{"db_id": "USWildFires", "predict_query": "SELECT LATITUDE FROM Fires WHERE STATE = 'CA' OR STATE = 'AZ' OR STATE = 'NM' OR STATE = 'TX' OR STATE = 'UT' OR STATE = 'NV' OR STATE = 'OR' OR STATE = 'WA' OR STATE = 'ID' OR STATE = 'MT' OR STATE = 'WY' OR STATE = 'CO' GROUP BY LATITUDE ORDER BY COUNT(LATITUDE) DESC LIMIT 1", "question": "What is the latitudinal band that is most likely to experience wildfires in the USA?"}
{"db_id": "WhatCDHipHop", "predict_query": "SELECT id, groupName, groupYear FROM torrents ORDER BY groupYear DESC LIMIT 100", "question": "What are the top 100 torrent releases?"}
{"db_id": "WhatCDHipHop", "predict_query": "SELECT artist FROM torrents ORDER BY totalSnatched DESC LIMIT 10", "question": "What are name of top 10 artists or groups?"}
{"db_id": "WhatCDHipHop", "predict_query": "SELECT releaseType FROM torrents ORDER BY totalSnatched DESC LIMIT 10", "question": "What are the top 10 torrent release types?"}
{"db_id": "WhatCDHipHop", "predict_query": "SELECT DISTINCT T1.groupName, T1.releaseType FROM torrents AS T1 INNER JOIN tags AS T2 ON T1.id = T2.id WHERE T2.tag = 'pop' ORDER BY T1.totalSnatched DESC LIMIT 20", "question": "What are the top 20 pop albums?"}
{"db_id": "WhatCDHipHop", "predict_query": "SELECT T1.groupName, T1.groupYear FROM torrents AS T1 INNER JOIN tags AS T2 ON T1.id = T2.id WHERE T1.releaseType = 'album' AND T2.tag = 'instrumental' AND T1.groupYear > 2000 ORDER BY T1.groupYear DESC LIMIT 20", "question": "What are the top 20 instrumental albums since 2000?"}
{"db_id": "WhatCDHipHop", "predict_query": "SELECT releaseType FROM torrents GROUP BY releaseType ORDER BY COUNT(releaseType) DESC LIMIT 1", "question": "What type of musical album is the most popular?"}
{"db_id": "WhatCDHipHop", "predict_query": "SELECT * FROM torrents WHERE releaseType ='single' ORDER BY totalSnatched DESC LIMIT 100", "question": "What are the top 100 single musics?"}
{"db_id": "WhatCDHipHop", "predict_query": "SELECT groupYear, totalSnatched FROM torrents GROUP BY groupYear", "question": "What is the torrent download statistics for each release year?"}
{"db_id": "WhatCDHipHop", "predict_query": "SELECT AVG(totalSnatched) FROM torrents WHERE releaseType =", "question": "how many entries are of each type?"}
{"db_id": "WhatCDHipHop", "predict_query": "SELECT COUNT(id) FROM torrents WHERE artist = 'Artist/group'", "question": "how many unique entries are by the same Artist/group?"}
{"db_id": "WhatCDHipHop", "predict_query": "SELECT artist, COUNT(id) FROM torrents GROUP BY artist ORDER BY COUNT(id) DESC LIMIT 1", "question": "which entry have been downloaded the most?"}
{"db_id": "WhatCDHipHop", "predict_query": "SELECT groupName FROM torrents ORDER BY totalSnatched DESC LIMIT 1", "question": "which entry have been downloaded the least?"}
{"db_id": "WhatCDHipHop", "predict_query": "SELECT id FROM torrents ORDER BY totalSnatched DESC LIMIT 1", "question": "what are titles for each unique entry?"}
{"db_id": "WhatCDHipHop", "predict_query": "SELECT artist FROM torrents WHERE id = 5", "question": "what year was each specific entry released?"}
{"db_id": "WhatCDHipHop", "predict_query": "SELECT artist FROM torrents WHERE artist!= ''", "question": "what are the entries by each specific artist/group?"}
{"db_id": "WhatCDHipHop", "predict_query": "SELECT groupName FROM torrents ORDER BY totalSnatched DESC LIMIT 1;", "question": "which tags exist?"}
{"db_id": "WhatCDHipHop", "predict_query": "SELECT releaseType FROM torrents", "question": "what release types are captured in this data set?"}
{"db_id": "WhatCDHipHop", "predict_query": "SELECT T1.groupName, T1.groupYear, T1.releaseType, T1.totalSnatched FROM torrents AS T1 INNER JOIN tags AS T2 ON T1.id = T2.id WHERE T1.groupYear > 2000 ORDER BY T1.totalSnatched DESC LIMIT 5", "question": "Find me top 5 most popular releases after 2000?"}
{"db_id": "WhatCDHipHop", "predict_query": "SELECT groupName FROM torrents WHERE totalSnatched > 100", "question": "Which albums have been downloaded more than 100 times?"}
{"db_id": "WhatCDHipHop", "predict_query": "SELECT artist FROM torrents WHERE artist = \"houston\" ORDER BY totalSnatched DESC LIMIT 1", "question": "Name the most popular release on houston."}
{"db_id": "WhatCDHipHop", "predict_query": "SELECT releaseType, totalSnatched FROM torrents WHERE artist = 'lasean camry' ORDER BY", "question": "Name the most popular and least popular releases of lasean camry?"}
{"db_id": "WhatCDHipHop", "predict_query": "SELECT groupName FROM torrents ORDER BY totalSnatched DESC LIMIT 10", "question": "Find me top 10 albums ranked by their popularity."}
{"db_id": "WhatCDHipHop", "predict_query": "SELECT T2.tag FROM tags AS T1 INNER JOIN torrents AS T2 ON T1.id = T2.id WHERE T2.groupYear > 2010 ORDER BY T2.totalSnatched DESC LIMIT 1", "question": "Find me the most popular topics since 2010."}
{"db_id": "WhatCDHipHop", "predict_query": "SELECT groupName FROM torrents WHERE groupYear = 2007 ORDER BY totalSnatched DESC LIMIT 1", "question": "Which year had the minimum number of releases?"}
{"db_id": "WhatCDHipHop", "predict_query": "SELECT artist FROM torrents WHERE groupName = 'Amarok' GROUP BY artist ORDER BY COUNT(id) DESC LIMIT 1", "question": "Which release is being downloaded the most?"}
{"db_id": "WhatCDHipHop", "predict_query": "SELECT T1.releaseType FROM torrents", "question": "Who or which group is most popular in 2015?"}
{"db_id": "WhatCDHipHop", "predict_query": "SELECT T1.tag, T2.groupName FROM tags AS T1 INNER JOIN torrents AS T2 ON T1.id = T2.id", "question": "Which tag is used for which release title?"}
{"db_id": "WhatCDHipHop", "predict_query": "SELECT groupName FROM torrents WHERE totalSnatched = ( SELECT MAX(totalSnatched) FROM torrents )", "question": "Which year has the most released song?"}
{"db_id": "WhatCDHipHop", "predict_query": "SELECT releaseType, SUM(totalSnatched) FROM torrents GROUP BY releaseType ORDER BY SUM(totalSnatched) DESC LIMIT 1", "question": "Which artist/group is most productive?"}
{"db_id": "WhatCDHipHop", "predict_query": "SELECT id, totalSnatched FROM torrents WHERE artist = 'Artist X' ORDER BY totalSnatched DESC LIMIT 1", "question": "Which artist/group has the highest average download of songs?"}
{"db_id": "WhatCDHipHop", "predict_query": "SELECT T1.groupYear FROM torrents AS T1 INNER JOIN tags AS T2 ON T1.id = T", "question": "Which year has the most CDs released?"}
{"db_id": "WhatCDHipHop", "predict_query": "SELECT groupName FROM torrents WHERE totalSnatched = ( SELECT MAX(totalSnatched) FROM torrents );", "question": "Which CD has been downloaded the most times?"}
{"db_id": "WhatCDHipHop", "predict_query": "SELECT releaseType FROM torrents GROUP BY releaseType ORDER BY COUNT(releaseType) DESC LIMIT 1", "question": "Which kind of release type is the most popular?"}
{"db_id": "WhatCDHipHop", "predict_query": "SELECT artist FROM torrents WHERE totalSnatched > ( SELECT AVG(totalSnatched) FROM torrents )", "question": "Whose CDs sells best?"}
{"db_id": "WhatCDHipHop", "predict_query": "SELECT totalSnatched, releaseType FROM torrents", "question": "What are the downloaded numbers and their release types?"}
{"db_id": "WhatCDHipHop", "predict_query": "SELECT groupName FROM torrents WHERE groupYear <= 2000 ORDER BY totalSnatched DESC LIMIT 1", "question": "What are the downloaded numbers of 2000s and before 2000?"}
{"db_id": "WhatCDHipHop", "predict_query": "SELECT id FROM torrents ORDER BY id ASC LIMIT 1", "question": "How many same release titles are there in the table?"}
{"db_id": "WhatCDHipHop", "predict_query": "SELECT COUNT(id) AS total FROM torrents WHERE artist = 'The Beatles'", "question": "Which artist release the most CDs?"}
{"db_id": "WhatCDHipHop", "predict_query": "SELECT artist FROM torrents WHERE groupName = 'Slayer'", "question": "How many downloads of ep and album respectively?"}
{"db_id": "WhatCDHipHop", "predict_query": "SELECT T1.artist FROM torrents AS T1 INNER JOIN tags AS", "question": "What are the artist/groups that released only one CD?"}
{"db_id": "WhatCDHipHop", "predict_query": "SELECT T1.groupName FROM torrents AS T1 WHERE T1.totalSnatched > 10000", "question": "What are the actors who have had releases after 2010?"}
{"db_id": "WorldSoccerDataBase", "predict_query": "SELECT DISTINCT T2.PSA FROM football_data AS T1 INNER JOIN betfront AS T2 ON T1.AwayTeam = T2.MATCH WHERE T1.AwayTeam = 'Arsenal'", "question": "What are the Pinnacle odds for Arsenal winning matches?"}
{"db_id": "WorldSoccerDataBase", "predict_query": "SELECT T1.HomeTeam FROM", "question": "Which matches in Spain did the away team win?"}
{"db_id": "WorldSoccerDataBase", "predict_query": "SELECT T2.Datetime FROM betfront AS T1 INNER JOIN football_data AS T2 ON T1.MATCH = T2.HomeTeam || T1.MATCH AND T1.YEAR = T2.Season WHERE T1.COUNTRY = 'England' AND T1.COMPETION = 'Premier League' AND T2.FTR = 'D'", "question": "Which Premier League matches ended in a draw in 2016?"}
{"db_id": "WorldSoccerDataBase", "predict_query": "SELECT MATCH FROM betfront WHERE B365D > 3", "question": "Which matches had draw odds from Bet365 higher than 3?"}
{"db_id": "WorldSoccerDataBase", "predict_query": "SELECT DISTINCT T1.DATETIME, T1.HOME_OPENING, T1.DRAW_OPENING, T1.DRAW_CLOSING FROM betfront AS T1 INNER JOIN football_data AS T2 ON T1.MATCH = T2.HomeTeam WHERE T2.AwayTeam = 'VfB Stuttgart' AND T2.FTR = 'D'", "question": "What were the closing odds for a draw in matches with VfB Stuttgart?"}
{"db_id": "WorldSoccerDataBase", "predict_query": "SELECT DISTINCT T1.Season, T1.Div, T1.Country, T1.League, T1.HomeTeam, T1.AwayTeam FROM football_data AS T1 INNER JOIN betfront AS T2 ON T1.Country = T2.COUNTRY AND T1.Season = T2.YEAR AND T1.Div = T2.COMPETION AND T1.League = T2.COMPETION AND T1.HomeTeam = T2.MATCH AND T1.AwayTeam = T2", "question": "Which games had no goals scored at full time?"}
{"db_id": "WorldSoccerDataBase", "predict_query": "SELECT HomeTeam FROM football_data WHERE Season = 2018 AND HomeTeam = 'Omiya Ardija'", "question": "What is the away team against Omiya Ardija in 2018?"}
{"db_id": "WorldSoccerDataBase", "predict_query": "SELECT COUNT(T1.Season) FROM football_data AS T1 WHERE T1.League = 'Premier League' AND T1.Country = 'Spain' AND T1.Season LIKE '2010", "question": "How many matches in Spain in 2010?"}
{"db_id": "WorldSoccerDataBase", "predict_query": "SELECT HomeTeam FROM football_data WHERE Season = '2019-2020' AND FTHG + FTAG = ( SELECT MAX(FTHG + FTAG)", "question": "Which matches has the highest draw opening so far?"}
{"db_id": "WorldSoccerDataBase", "predict_query": "SELECT Referee FROM football_data WHERE Season = '2007-08' GROUP BY Referee ORDER BY COUNT(Referee) DESC LIMIT 1", "question": "Which year has most matches?"}
{"db_id": "WorldSoccerDataBase", "predict_query": "SELECT SUM", "question": "How many matches did Pinnacle have betting records?"}
{"db_id": "WorldSoccerDataBase", "predict_query": "SELECT COUNT(MATCH) AS sum FROM betfront WHERE YEAR = 2019 AND AWAY_CLOSING > 0 AND HOME_CLOSING > 0", "question": "How many matches did Bet365 gives higher home win odds than Pinnacle?"}
{"db_id": "WorldSoccerDataBase", "predict_query": "SELECT HomeTeam FROM football_data WHERE League = 'English Premier League' AND Season = '2017/2018' ORDER BY BWH DESC LIMIT 1", "question": "How many games that the total number of goals exceed 5?"}
{"db_id": "WorldSoccerDataBase", "predict_query": "SELECT MAX(B365H) FROM betfront WHERE B365H > 0", "question": "What is the highest home losing odds in Bet365 ever?"}
{"db_id": "WorldSoccerDataBase", "predict_query": "SELECT SUM(HTHG) FROM football_data WHERE HomeTeam = 'Arsenal' AND Season = '2005-2006'", "question": "How many number of games ended in a 0-0 tie?"}
{"db_id": "WorldSoccerDataBase", "predict_query": "SELECT COUNT(DISTINCT Country) FROM football_data", "question": "How many league division does football_data database has?"}
{"db_id": "WorldSoccerDataBase", "predict_query": "SELECT COUNT(DISTINCT T1.Referee) FROM football_data AS T1 INNER JOIN betfront AS T", "question": "Do other leagues have referee name records outside of Scotland and England?"}
{"db_id": "WorldSoccerDataBase", "predict_query": "SELECT DISTINCT B365H FROM football_data WHERE Season = '201", "question": "What's the odds for draw on Bet365 for the game Swindon v.s. Millwall for 2016/2017 season?"}
